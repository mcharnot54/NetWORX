/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FConnectionStatus.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FDevErrorBoundary.tsx%22%2C%22ids%22%3A%5B%22DevErrorBoundary%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FErrorBoundary.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FGlobalErrorHandler.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FSafeNavigation.tsx%22%2C%22ids%22%3A%5B%22SafeNavigation%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcontext%2FDataContext.tsx%22%2C%22ids%22%3A%5B%22DataProvider%22%5D%7D&server=false!":

  !*** ./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FConnectionStatus.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FDevErrorBoundary.tsx%22%2C%22ids%22%3A%5B%22DevErrorBoundary%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FErrorBoundary.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FGlobalErrorHandler.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FSafeNavigation.tsx%22%2C%22ids%22%3A%5B%22SafeNavigation%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcontext%2FDataContext.tsx%22%2C%22ids%22%3A%5B%22DataProvider%22%5D%7D&server=false! ***!

/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/globals.css */ \"(app-pages-browser)/./app/globals.css\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/ConnectionStatus.tsx */ \"(app-pages-browser)/./components/ConnectionStatus.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/DevErrorBoundary.tsx */ \"(app-pages-browser)/./components/DevErrorBoundary.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/ErrorBoundary.tsx */ \"(app-pages-browser)/./components/ErrorBoundary.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/GlobalErrorHandler.tsx */ \"(app-pages-browser)/./components/GlobalErrorHandler.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/SafeNavigation.tsx */ \"(app-pages-browser)/./components/SafeNavigation.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./context/DataContext.tsx */ \"(app-pages-browser)/./context/DataContext.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMzJfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmFwcCUyRmNvZGUlMkZhcHAlMkZnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZhcHAlMkZjb2RlJTJGY29tcG9uZW50cyUyRkNvbm5lY3Rpb25TdGF0dXMudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyZGVmYXVsdCUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZhcHAlMkZjb2RlJTJGY29tcG9uZW50cyUyRkRldkVycm9yQm91bmRhcnkudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyRGV2RXJyb3JCb3VuZGFyeSUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZhcHAlMkZjb2RlJTJGY29tcG9uZW50cyUyRkVycm9yQm91bmRhcnkudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyZGVmYXVsdCUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZhcHAlMkZjb2RlJTJGY29tcG9uZW50cyUyRkdsb2JhbEVycm9ySGFuZGxlci50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJkZWZhdWx0JTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmFwcCUyRmNvZGUlMkZjb21wb25lbnRzJTJGU2FmZU5hdmlnYXRpb24udHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyU2FmZU5hdmlnYXRpb24lMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGYXBwJTJGY29kZSUyRmNvbnRleHQlMkZEYXRhQ29udGV4dC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJEYXRhUHJvdmlkZXIlMjIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSw0SkFBOEQ7QUFDOUQ7QUFDQSw0TEFBMkc7QUFDM0c7QUFDQSw0TEFBb0g7QUFDcEg7QUFDQSxzTEFBd0c7QUFDeEc7QUFDQSxnTUFBNkc7QUFDN0c7QUFDQSx3TEFBZ0g7QUFDaEg7QUFDQSw0S0FBd0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz8zNDA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2FwcC9jb2RlL2FwcC9nbG9iYWxzLmNzc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiZGVmYXVsdFwiXSAqLyBcIi9hcHAvY29kZS9jb21wb25lbnRzL0Nvbm5lY3Rpb25TdGF0dXMudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJEZXZFcnJvckJvdW5kYXJ5XCJdICovIFwiL2FwcC9jb2RlL2NvbXBvbmVudHMvRGV2RXJyb3JCb3VuZGFyeS50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImRlZmF1bHRcIl0gKi8gXCIvYXBwL2NvZGUvY29tcG9uZW50cy9FcnJvckJvdW5kYXJ5LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiZGVmYXVsdFwiXSAqLyBcIi9hcHAvY29kZS9jb21wb25lbnRzL0dsb2JhbEVycm9ySGFuZGxlci50c3hcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIlNhZmVOYXZpZ2F0aW9uXCJdICovIFwiL2FwcC9jb2RlL2NvbXBvbmVudHMvU2FmZU5hdmlnYXRpb24udHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJEYXRhUHJvdmlkZXJcIl0gKi8gXCIvYXBwL2NvZGUvY29udGV4dC9EYXRhQ29udGV4dC50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FConnectionStatus.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FDevErrorBoundary.tsx%22%2C%22ids%22%3A%5B%22DevErrorBoundary%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FErrorBoundary.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FGlobalErrorHandler.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FSafeNavigation.tsx%22%2C%22ids%22%3A%5B%22SafeNavigation%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcontext%2FDataContext.tsx%22%2C%22ids%22%3A%5B%22DataProvider%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js ***!
  \***************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = globalThis.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = globalThis.process) == null ? void 0 : _global_process1.env) === \"object\" ? globalThis.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMzJfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxxQ0FBcUMsVUFBTSxpRkFBaUYsVUFBTSxrRUFBa0UsVUFBTSxXQUFXLG1CQUFPLENBQUMsd0xBQTRCOztBQUV6UCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNC4yLjMyX3JlYWN0LWRvbUAxOC4zLjFfcmVhY3RAMTguMy4xX19yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvcHJvY2Vzcy5qcz81YWI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9nbG9iYWxfcHJvY2VzcywgX2dsb2JhbF9wcm9jZXNzMTtcbm1vZHVsZS5leHBvcnRzID0gKChfZ2xvYmFsX3Byb2Nlc3MgPSBnbG9iYWwucHJvY2VzcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9nbG9iYWxfcHJvY2Vzcy5lbnYpICYmIHR5cGVvZiAoKF9nbG9iYWxfcHJvY2VzczEgPSBnbG9iYWwucHJvY2VzcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9nbG9iYWxfcHJvY2VzczEuZW52KSA9PT0gXCJvYmplY3RcIiA/IGdsb2JhbC5wcm9jZXNzIDogcmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzXCIpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9jZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/client-only/index.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/client-only/index.js ***!
  \******************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {



/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/process/browser.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/process/browser.js ***!
  \****************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMzJfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTQuMi4zMl9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMV9fcmVhY3RAMTguMy4xL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzPzkyZDIiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7dmFyIGU9ezIyOTpmdW5jdGlvbihlKXt2YXIgdD1lLmV4cG9ydHM9e307dmFyIHI7dmFyIG47ZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpe3Rocm93IG5ldyBFcnJvcihcInNldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9ZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCgpe3Rocm93IG5ldyBFcnJvcihcImNsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX0oZnVuY3Rpb24oKXt0cnl7aWYodHlwZW9mIHNldFRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe3I9c2V0VGltZW91dH1lbHNle3I9ZGVmYXVsdFNldFRpbW91dH19Y2F0Y2goZSl7cj1kZWZhdWx0U2V0VGltb3V0fXRyeXtpZih0eXBlb2YgY2xlYXJUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtuPWNsZWFyVGltZW91dH1lbHNle249ZGVmYXVsdENsZWFyVGltZW91dH19Y2F0Y2goZSl7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX0pKCk7ZnVuY3Rpb24gcnVuVGltZW91dChlKXtpZihyPT09c2V0VGltZW91dCl7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX1pZigocj09PWRlZmF1bHRTZXRUaW1vdXR8fCFyKSYmc2V0VGltZW91dCl7cj1zZXRUaW1lb3V0O3JldHVybiBzZXRUaW1lb3V0KGUsMCl9dHJ5e3JldHVybiByKGUsMCl9Y2F0Y2godCl7dHJ5e3JldHVybiByLmNhbGwobnVsbCxlLDApfWNhdGNoKHQpe3JldHVybiByLmNhbGwodGhpcyxlLDApfX19ZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KGUpe2lmKG49PT1jbGVhclRpbWVvdXQpe3JldHVybiBjbGVhclRpbWVvdXQoZSl9aWYoKG49PT1kZWZhdWx0Q2xlYXJUaW1lb3V0fHwhbikmJmNsZWFyVGltZW91dCl7bj1jbGVhclRpbWVvdXQ7cmV0dXJuIGNsZWFyVGltZW91dChlKX10cnl7cmV0dXJuIG4oZSl9Y2F0Y2godCl7dHJ5e3JldHVybiBuLmNhbGwobnVsbCxlKX1jYXRjaCh0KXtyZXR1cm4gbi5jYWxsKHRoaXMsZSl9fX12YXIgaT1bXTt2YXIgbz1mYWxzZTt2YXIgdTt2YXIgYT0tMTtmdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKXtpZighb3x8IXUpe3JldHVybn1vPWZhbHNlO2lmKHUubGVuZ3RoKXtpPXUuY29uY2F0KGkpfWVsc2V7YT0tMX1pZihpLmxlbmd0aCl7ZHJhaW5RdWV1ZSgpfX1mdW5jdGlvbiBkcmFpblF1ZXVlKCl7aWYobyl7cmV0dXJufXZhciBlPXJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtvPXRydWU7dmFyIHQ9aS5sZW5ndGg7d2hpbGUodCl7dT1pO2k9W107d2hpbGUoKythPHQpe2lmKHUpe3VbYV0ucnVuKCl9fWE9LTE7dD1pLmxlbmd0aH11PW51bGw7bz1mYWxzZTtydW5DbGVhclRpbWVvdXQoZSl9dC5uZXh0VGljaz1mdW5jdGlvbihlKXt2YXIgdD1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0xKTtpZihhcmd1bWVudHMubGVuZ3RoPjEpe2Zvcih2YXIgcj0xO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspe3Rbci0xXT1hcmd1bWVudHNbcl19fWkucHVzaChuZXcgSXRlbShlLHQpKTtpZihpLmxlbmd0aD09PTEmJiFvKXtydW5UaW1lb3V0KGRyYWluUXVldWUpfX07ZnVuY3Rpb24gSXRlbShlLHQpe3RoaXMuZnVuPWU7dGhpcy5hcnJheT10fUl0ZW0ucHJvdG90eXBlLnJ1bj1mdW5jdGlvbigpe3RoaXMuZnVuLmFwcGx5KG51bGwsdGhpcy5hcnJheSl9O3QudGl0bGU9XCJicm93c2VyXCI7dC5icm93c2VyPXRydWU7dC5lbnY9e307dC5hcmd2PVtdO3QudmVyc2lvbj1cIlwiO3QudmVyc2lvbnM9e307ZnVuY3Rpb24gbm9vcCgpe310Lm9uPW5vb3A7dC5hZGRMaXN0ZW5lcj1ub29wO3Qub25jZT1ub29wO3Qub2ZmPW5vb3A7dC5yZW1vdmVMaXN0ZW5lcj1ub29wO3QucmVtb3ZlQWxsTGlzdGVuZXJzPW5vb3A7dC5lbWl0PW5vb3A7dC5wcmVwZW5kTGlzdGVuZXI9bm9vcDt0LnByZXBlbmRPbmNlTGlzdGVuZXI9bm9vcDt0Lmxpc3RlbmVycz1mdW5jdGlvbihlKXtyZXR1cm5bXX07dC5iaW5kaW5nPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LmN3ZD1mdW5jdGlvbigpe3JldHVyblwiL1wifTt0LmNoZGlyPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZFwiKX07dC51bWFzaz1mdW5jdGlvbigpe3JldHVybiAwfX19O3ZhciB0PXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18ocil7dmFyIG49dFtyXTtpZihuIT09dW5kZWZpbmVkKXtyZXR1cm4gbi5leHBvcnRzfXZhciBpPXRbcl09e2V4cG9ydHM6e319O3ZhciBvPXRydWU7dHJ5e2Vbcl0oaSxpLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7bz1mYWxzZX1maW5hbGx5e2lmKG8pZGVsZXRlIHRbcl19cmV0dXJuIGkuZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHI9X19uY2N3cGNrX3JlcXVpcmVfXygyMjkpO21vZHVsZS5leHBvcnRzPXJ9KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/createLucideIcon.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ createLucideIcon; },\n/* harmony export */   toKebabCase: function() { return /* binding */ toKebabCase; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultAttributes.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\");\n/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \n\nconst toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase().trim();\nconst createLucideIcon = (iconName, iconNode)=>{\n    const Component = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((param, ref)=>{\n        let { color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, ...rest } = param;\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n            ref,\n            ..._defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n            width: size,\n            height: size,\n            stroke: color,\n            strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n            className: [\n                \"lucide\",\n                \"lucide-\".concat(toKebabCase(iconName)),\n                className\n            ].join(\" \"),\n            ...rest\n        }, [\n            ...iconNode.map((param)=>{\n                let [tag, attrs] = param;\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tag, attrs);\n            }),\n            ...Array.isArray(children) ? children : [\n                children\n            ]\n        ]);\n    });\n    Component.displayName = \"\".concat(iconName);\n    return Component;\n};\n //# sourceMappingURL=createLucideIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vY3JlYXRlTHVjaWRlSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUE2QmEsTUFBQUEsY0FBYyxDQUFDQyxTQUMxQkEsT0FDR0MsT0FBQSxDQUFRLHNCQUFzQixTQUM5QkMsV0FBWSxHQUNaQyxJQUFLO0FBRUosTUFBQUMsbUJBQW1CLENBQUNDLFVBQWtCQztJQUMxQyxNQUFNQywwQkFBWUMsaURBQVVBLENBQzFCLFFBQWlIQztZQUFoSCxFQUFFQyxRQUFRLGdCQUFnQkMsT0FBTyxFQUFJLEVBQUFDLGNBQWMsQ0FBRyxFQUFBQyxtQkFBQSxFQUFxQkMsWUFBWSxJQUFJQyxRQUFhLEtBQUFDLE1BQUE7NkJBQ3ZHQyxvREFBYUEsQ0FDWCxPQUNBO1lBQ0VSO1lBQ0EsR0FBR1MsNkRBQUE7WUFDSEMsT0FBT1I7WUFDUFMsUUFBUVQ7WUFDUlUsUUFBUVg7WUFDUkUsYUFBYUMsc0JBQXNCUyxPQUFPVixlQUFlLEtBQUtVLE9BQU9YLFFBQVFDO1lBQzdFRSxXQUFXO2dCQUFDO2dCQUFvQixVQUF5QixPQUF6QmYsWUFBWU07Z0JBQWFTO2FBQVcsQ0FBQVMsSUFBQSxDQUFLO1lBQ3pFLEdBQUdQLElBQUE7UUFDTCxHQUNBO2VBQ0tWLFNBQVNrQixHQUFBLENBQUk7b0JBQUMsQ0FBQ0MsS0FBS0MsTUFBVztxQ0FBQVQsb0RBQWFBLENBQUNRLEtBQUtDOztlQUNqREMsTUFBTUMsT0FBQSxDQUFRYixZQUFZQSxXQUFXO2dCQUFDQTthQUFRO1NBQ3BEOztJQUlOUixVQUFVc0IsV0FBQSxHQUFjLEdBQUcsT0FBQXhCO0lBRXBCLE9BQUFFO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL3NyYy9jcmVhdGVMdWNpZGVJY29uLnRzPzA0ODgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgZm9yd2FyZFJlZixcbiAgY3JlYXRlRWxlbWVudCxcbiAgUmVhY3RTVkcsXG4gIFNWR1Byb3BzLFxuICBGb3J3YXJkUmVmRXhvdGljQ29tcG9uZW50LFxuICBSZWZBdHRyaWJ1dGVzLFxufSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgZGVmYXVsdEF0dHJpYnV0ZXMgZnJvbSAnLi9kZWZhdWx0QXR0cmlidXRlcyc7XG5cbmV4cG9ydCB0eXBlIEljb25Ob2RlID0gW2VsZW1lbnROYW1lOiBrZXlvZiBSZWFjdFNWRywgYXR0cnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz5dW107XG5cbmV4cG9ydCB0eXBlIFNWR0F0dHJpYnV0ZXMgPSBQYXJ0aWFsPFNWR1Byb3BzPFNWR1NWR0VsZW1lbnQ+PjtcbnR5cGUgQ29tcG9uZW50QXR0cmlidXRlcyA9IFJlZkF0dHJpYnV0ZXM8U1ZHU1ZHRWxlbWVudD4gJiBTVkdBdHRyaWJ1dGVzO1xuXG5leHBvcnQgaW50ZXJmYWNlIEx1Y2lkZVByb3BzIGV4dGVuZHMgQ29tcG9uZW50QXR0cmlidXRlcyB7XG4gIHNpemU/OiBzdHJpbmcgfCBudW1iZXI7XG4gIGFic29sdXRlU3Ryb2tlV2lkdGg/OiBib29sZWFuO1xufVxuXG5leHBvcnQgdHlwZSBMdWNpZGVJY29uID0gRm9yd2FyZFJlZkV4b3RpY0NvbXBvbmVudDxMdWNpZGVQcm9wcz47XG4vKipcbiAqIENvbnZlcnRzIHN0cmluZyB0byBLZWJhYkNhc2VcbiAqIENvcGllZCBmcm9tIHNjcmlwdHMvaGVscGVyLiBJZiBhbnlvbmUga25vd3MgaG93IHRvIHByb3Blcmx5IGltcG9ydCBpdCBoZXJlXG4gKiB0aGVuIHBsZWFzZSBmaXggaXQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZ1xuICogQHJldHVybnMge3N0cmluZ30gQSBrZWJhYml6ZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBjb25zdCB0b0tlYmFiQ2FzZSA9IChzdHJpbmc6IHN0cmluZykgPT5cbiAgc3RyaW5nXG4gICAgLnJlcGxhY2UoLyhbYS16MC05XSkoW0EtWl0pL2csICckMS0kMicpXG4gICAgLnRvTG93ZXJDYXNlKClcbiAgICAudHJpbSgpO1xuXG5jb25zdCBjcmVhdGVMdWNpZGVJY29uID0gKGljb25OYW1lOiBzdHJpbmcsIGljb25Ob2RlOiBJY29uTm9kZSk6IEx1Y2lkZUljb24gPT4ge1xuICBjb25zdCBDb21wb25lbnQgPSBmb3J3YXJkUmVmPFNWR1NWR0VsZW1lbnQsIEx1Y2lkZVByb3BzPihcbiAgICAoeyBjb2xvciA9ICdjdXJyZW50Q29sb3InLCBzaXplID0gMjQsIHN0cm9rZVdpZHRoID0gMiwgYWJzb2x1dGVTdHJva2VXaWR0aCwgY2xhc3NOYW1lID0gJycsIGNoaWxkcmVuLCAuLi5yZXN0IH0sIHJlZikgPT5cbiAgICAgIGNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdzdmcnLFxuICAgICAgICB7XG4gICAgICAgICAgcmVmLFxuICAgICAgICAgIC4uLmRlZmF1bHRBdHRyaWJ1dGVzLFxuICAgICAgICAgIHdpZHRoOiBzaXplLFxuICAgICAgICAgIGhlaWdodDogc2l6ZSxcbiAgICAgICAgICBzdHJva2U6IGNvbG9yLFxuICAgICAgICAgIHN0cm9rZVdpZHRoOiBhYnNvbHV0ZVN0cm9rZVdpZHRoID8gTnVtYmVyKHN0cm9rZVdpZHRoKSAqIDI0IC8gTnVtYmVyKHNpemUpIDogc3Ryb2tlV2lkdGgsXG4gICAgICAgICAgY2xhc3NOYW1lOiBbJ2x1Y2lkZScsIGBsdWNpZGUtJHt0b0tlYmFiQ2FzZShpY29uTmFtZSl9YCwgY2xhc3NOYW1lXS5qb2luKCcgJyksXG4gICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgfSxcbiAgICAgICAgW1xuICAgICAgICAgIC4uLmljb25Ob2RlLm1hcCgoW3RhZywgYXR0cnNdKSA9PiBjcmVhdGVFbGVtZW50KHRhZywgYXR0cnMpKSxcbiAgICAgICAgICAuLi4oQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pLFxuICAgICAgICBdXG4gICAgICApXG4gICk7XG5cbiAgQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gYCR7aWNvbk5hbWV9YDtcblxuICByZXR1cm4gQ29tcG9uZW50O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTHVjaWRlSWNvbjtcbiJdLCJuYW1lcyI6WyJ0b0tlYmFiQ2FzZSIsInN0cmluZyIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsInRyaW0iLCJjcmVhdGVMdWNpZGVJY29uIiwiaWNvbk5hbWUiLCJpY29uTm9kZSIsIkNvbXBvbmVudCIsImZvcndhcmRSZWYiLCJyZWYiLCJjb2xvciIsInNpemUiLCJzdHJva2VXaWR0aCIsImFic29sdXRlU3Ryb2tlV2lkdGgiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsInJlc3QiLCJjcmVhdGVFbGVtZW50IiwiZGVmYXVsdEF0dHJpYnV0ZXMiLCJ3aWR0aCIsImhlaWdodCIsInN0cm9rZSIsIk51bWJlciIsImpvaW4iLCJtYXAiLCJ0YWciLCJhdHRycyIsIkFycmF5IiwiaXNBcnJheSIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/defaultAttributes.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ defaultAttributes; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ var defaultAttributes = {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n};\n //# sourceMappingURL=defaultAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vZGVmYXVsdEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQUEsSUFBZUEsb0JBQUE7SUFDYkMsT0FBTztJQUNQQyxPQUFPO0lBQ1BDLFFBQVE7SUFDUkMsU0FBUztJQUNUQyxNQUFNO0lBQ05DLFFBQVE7SUFDUkMsYUFBYTtJQUNiQyxlQUFlO0lBQ2ZDLGdCQUFnQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL2RlZmF1bHRBdHRyaWJ1dGVzLnRzPzM3MGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICB4bWxuczogJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyxcbiAgd2lkdGg6IDI0LFxuICBoZWlnaHQ6IDI0LFxuICB2aWV3Qm94OiAnMCAwIDI0IDI0JyxcbiAgZmlsbDogJ25vbmUnLFxuICBzdHJva2U6ICdjdXJyZW50Q29sb3InLFxuICBzdHJva2VXaWR0aDogMixcbiAgc3Ryb2tlTGluZWNhcDogJ3JvdW5kJyxcbiAgc3Ryb2tlTGluZWpvaW46ICdyb3VuZCcsXG59O1xuIl0sIm5hbWVzIjpbImRlZmF1bHRBdHRyaWJ1dGVzIiwieG1sbnMiLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/alert-triangle.js":
/*!********************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/alert-triangle.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AlertTriangle; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst AlertTriangle = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"AlertTriangle\", [\n    [\n        \"path\",\n        {\n            d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\",\n            key: \"c3ski4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 9v4\",\n            key: \"juzpu7\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 17h.01\",\n            key: \"p32p05\"\n        }\n    ]\n]);\n //# sourceMappingURL=alert-triangle.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvYWxlcnQtdHJpYW5nbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFhTSxNQUFBQSxnQkFBZ0JDLGdFQUFnQkEsQ0FBQyxpQkFBaUI7SUFDdEQ7UUFDRTtRQUNBO1lBQ0VDLEdBQUc7WUFDSEMsS0FBSztRQUNQO0tBQ0Y7SUFDQTtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFXQyxLQUFLO1FBQUE7S0FBVTtJQUN4QztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFjQyxLQUFLO1FBQUE7S0FBVTtDQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vc3JjL2ljb25zL2FsZXJ0LXRyaWFuZ2xlLnRzPzVlYzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBBbGVydFRyaWFuZ2xlXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSnRNakV1TnpNZ01UZ3RPQzB4TkdFeUlESWdNQ0F3SURBdE15NDBPQ0F3YkMwNElERTBRVElnTWlBd0lEQWdNQ0EwSURJeGFERTJZVElnTWlBd0lEQWdNQ0F4TGpjekxUTmFJaUF2UGdvZ0lEeHdZWFJvSUdROUlrMHhNaUE1ZGpRaUlDOCtDaUFnUEhCaGRHZ2daRDBpVFRFeUlERTNhQzR3TVNJZ0x6NEtQQzl6ZG1jK0NnPT0pIC0gaHR0cHM6Ly9sdWNpZGUuZGV2L2ljb25zL2FsZXJ0LXRyaWFuZ2xlXG4gKiBAc2VlIGh0dHBzOi8vbHVjaWRlLmRldi9ndWlkZS9wYWNrYWdlcy9sdWNpZGUtcmVhY3QgLSBEb2N1bWVudGF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gTHVjaWRlIGljb25zIHByb3BzIGFuZCBhbnkgdmFsaWQgU1ZHIGF0dHJpYnV0ZVxuICogQHJldHVybnMge0pTWC5FbGVtZW50fSBKU1ggRWxlbWVudFxuICpcbiAqL1xuY29uc3QgQWxlcnRUcmlhbmdsZSA9IGNyZWF0ZUx1Y2lkZUljb24oJ0FsZXJ0VHJpYW5nbGUnLCBbXG4gIFtcbiAgICAncGF0aCcsXG4gICAge1xuICAgICAgZDogJ20yMS43MyAxOC04LTE0YTIgMiAwIDAgMC0zLjQ4IDBsLTggMTRBMiAyIDAgMCAwIDQgMjFoMTZhMiAyIDAgMCAwIDEuNzMtM1onLFxuICAgICAga2V5OiAnYzNza2k0JyxcbiAgICB9LFxuICBdLFxuICBbJ3BhdGgnLCB7IGQ6ICdNMTIgOXY0Jywga2V5OiAnanV6cHU3JyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTEyIDE3aC4wMScsIGtleTogJ3AzMnAwNScgfV0sXG5dKTtcblxuZXhwb3J0IGRlZmF1bHQgQWxlcnRUcmlhbmdsZTtcbiJdLCJuYW1lcyI6WyJBbGVydFRyaWFuZ2xlIiwiY3JlYXRlTHVjaWRlSWNvbiIsImQiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/alert-triangle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/refresh-cw.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RefreshCw; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst RefreshCw = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"RefreshCw\", [\n    [\n        \"path\",\n        {\n            d: \"M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8\",\n            key: \"v9h5vc\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 3v5h-5\",\n            key: \"1q7to0\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16\",\n            key: \"3uifl3\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 16H3v5\",\n            key: \"1cv678\"\n        }\n    ]\n]);\n //# sourceMappingURL=refresh-cw.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcmVmcmVzaC1jdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWFNLE1BQUFBLFlBQVlDLGdFQUFnQkEsQ0FBQyxhQUFhO0lBQzlDO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQXNEQyxLQUFLO1FBQUE7S0FBVTtJQUNuRjtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFjQyxLQUFLO1FBQUE7S0FBVTtJQUMzQztRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUF1REMsS0FBSztRQUFBO0tBQVU7SUFDcEY7UUFBQztRQUFRO1lBQUVELEdBQUc7WUFBYUMsS0FBSztRQUFBO0tBQVU7Q0FDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL3NyYy9pY29ucy9yZWZyZXNoLWN3LnRzPzYyN2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbic7XG5cbi8qKlxuICogQGNvbXBvbmVudCBAbmFtZSBSZWZyZXNoQ3dcbiAqIEBkZXNjcmlwdGlvbiBMdWNpZGUgU1ZHIGljb24gY29tcG9uZW50LCByZW5kZXJzIFNWRyBFbGVtZW50IHdpdGggY2hpbGRyZW4uXG4gKlxuICogQHByZXZpZXcgIVtpbWddKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QWdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabklnb2dJSGRwWkhSb1BTSXlOQ0lLSUNCb1pXbG5hSFE5SWpJMElnb2dJSFpwWlhkQ2IzZzlJakFnTUNBeU5DQXlOQ0lLSUNCbWFXeHNQU0p1YjI1bElnb2dJSE4wY205clpUMGlJekF3TUNJZ2MzUjViR1U5SW1KaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptWTdJR0p2Y21SbGNpMXlZV1JwZFhNNklESndlQ0lLSUNCemRISnZhMlV0ZDJsa2RHZzlJaklpQ2lBZ2MzUnliMnRsTFd4cGJtVmpZWEE5SW5KdmRXNWtJZ29nSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBpY205MWJtUWlDajRLSUNBOGNHRjBhQ0JrUFNKTk15QXhNbUU1SURrZ01DQXdJREVnT1MwNUlEa3VOelVnT1M0M05TQXdJREFnTVNBMkxqYzBJREl1TnpSTU1qRWdPQ0lnTHo0S0lDQThjR0YwYUNCa1BTSk5NakVnTTNZMWFDMDFJaUF2UGdvZ0lEeHdZWFJvSUdROUlrMHlNU0F4TW1FNUlEa2dNQ0F3SURFdE9TQTVJRGt1TnpVZ09TNDNOU0F3SURBZ01TMDJMamMwTFRJdU56Uk1NeUF4TmlJZ0x6NEtJQ0E4Y0dGMGFDQmtQU0pOT0NBeE5rZ3pkalVpSUM4K0Nqd3ZjM1puUGdvPSkgLSBodHRwczovL2x1Y2lkZS5kZXYvaWNvbnMvcmVmcmVzaC1jd1xuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IFJlZnJlc2hDdyA9IGNyZWF0ZUx1Y2lkZUljb24oJ1JlZnJlc2hDdycsIFtcbiAgWydwYXRoJywgeyBkOiAnTTMgMTJhOSA5IDAgMCAxIDktOSA5Ljc1IDkuNzUgMCAwIDEgNi43NCAyLjc0TDIxIDgnLCBrZXk6ICd2OWg1dmMnIH1dLFxuICBbJ3BhdGgnLCB7IGQ6ICdNMjEgM3Y1aC01Jywga2V5OiAnMXE3dG8wJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTIxIDEyYTkgOSAwIDAgMS05IDkgOS43NSA5Ljc1IDAgMCAxLTYuNzQtMi43NEwzIDE2Jywga2V5OiAnM3VpZmwzJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTggMTZIM3Y1Jywga2V5OiAnMWN2Njc4JyB9XSxcbl0pO1xuXG5leHBvcnQgZGVmYXVsdCBSZWZyZXNoQ3c7XG4iXSwibmFtZXMiOlsiUmVmcmVzaEN3IiwiY3JlYXRlTHVjaWRlSWNvbiIsImQiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/wifi-off.js":
/*!**************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/wifi-off.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WifiOff; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst WifiOff = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"WifiOff\", [\n    [\n        \"line\",\n        {\n            x1: \"2\",\n            x2: \"22\",\n            y1: \"2\",\n            y2: \"22\",\n            key: \"a6p6uj\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 16.5a5 5 0 0 1 7 0\",\n            key: \"sej527\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 8.82a15 15 0 0 1 4.17-2.65\",\n            key: \"11utq1\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.66 5c4.01-.36 8.14.9 11.34 3.76\",\n            key: \"hxefdu\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M16.85 11.25a10 10 0 0 1 2.22 1.68\",\n            key: \"q734kn\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M5 13a10 10 0 0 1 5.24-2.76\",\n            key: \"piq4yl\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"of4bc4\"\n        }\n    ]\n]);\n //# sourceMappingURL=wifi-off.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvd2lmaS1vZmYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFhTSxNQUFBQSxVQUFVQyxnRUFBZ0JBLENBQUMsV0FBVztJQUMxQztRQUFDO1FBQVE7WUFBRUMsSUFBSTtZQUFLQyxJQUFJO1lBQU1DLElBQUk7WUFBS0MsSUFBSTtZQUFNQyxLQUFLO1FBQUE7S0FBVTtJQUNoRTtRQUFDO1FBQVE7WUFBRUMsR0FBRztZQUEyQkQsS0FBSztRQUFBO0tBQVU7SUFDeEQ7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBaUNELEtBQUs7UUFBQTtLQUFVO0lBQzlEO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQXVDRCxLQUFLO1FBQUE7S0FBVTtJQUNwRTtRQUFDO1FBQVE7WUFBRUMsR0FBRztZQUFzQ0QsS0FBSztRQUFBO0tBQVU7SUFDbkU7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBK0JELEtBQUs7UUFBQTtLQUFVO0lBQzVEO1FBQUM7UUFBUTtZQUFFSixJQUFJO1lBQU1DLElBQUk7WUFBU0MsSUFBSTtZQUFNQyxJQUFJO1lBQU1DLEtBQUs7UUFBQTtLQUFVO0NBQ3RFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvaWNvbnMvd2lmaS1vZmYudHM/YzNiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uJztcblxuLyoqXG4gKiBAY29tcG9uZW50IEBuYW1lIFdpZmlPZmZcbiAqIEBkZXNjcmlwdGlvbiBMdWNpZGUgU1ZHIGljb24gY29tcG9uZW50LCByZW5kZXJzIFNWRyBFbGVtZW50IHdpdGggY2hpbGRyZW4uXG4gKlxuICogQHByZXZpZXcgIVtpbWddKGRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEhOMlp5QWdlRzFzYm5NOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabklnb2dJSGRwWkhSb1BTSXlOQ0lLSUNCb1pXbG5hSFE5SWpJMElnb2dJSFpwWlhkQ2IzZzlJakFnTUNBeU5DQXlOQ0lLSUNCbWFXeHNQU0p1YjI1bElnb2dJSE4wY205clpUMGlJekF3TUNJZ2MzUjViR1U5SW1KaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptWTdJR0p2Y21SbGNpMXlZV1JwZFhNNklESndlQ0lLSUNCemRISnZhMlV0ZDJsa2RHZzlJaklpQ2lBZ2MzUnliMnRsTFd4cGJtVmpZWEE5SW5KdmRXNWtJZ29nSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBpY205MWJtUWlDajRLSUNBOGJHbHVaU0I0TVQwaU1pSWdlREk5SWpJeUlpQjVNVDBpTWlJZ2VUSTlJakl5SWlBdlBnb2dJRHh3WVhSb0lHUTlJazA0TGpVZ01UWXVOV0UxSURVZ01DQXdJREVnTnlBd0lpQXZQZ29nSUR4d1lYUm9JR1E5SWsweUlEZ3VPREpoTVRVZ01UVWdNQ0F3SURFZ05DNHhOeTB5TGpZMUlpQXZQZ29nSUR4d1lYUm9JR1E5SWsweE1DNDJOaUExWXpRdU1ERXRMak0ySURndU1UUXVPU0F4TVM0ek5DQXpMamMySWlBdlBnb2dJRHh3WVhSb0lHUTlJazB4Tmk0NE5TQXhNUzR5TldFeE1DQXhNQ0F3SURBZ01TQXlMakl5SURFdU5qZ2lJQzgrQ2lBZ1BIQmhkR2dnWkQwaVRUVWdNVE5oTVRBZ01UQWdNQ0F3SURFZ05TNHlOQzB5TGpjMklpQXZQZ29nSUR4c2FXNWxJSGd4UFNJeE1pSWdlREk5SWpFeUxqQXhJaUI1TVQwaU1qQWlJSGt5UFNJeU1DSWdMejRLUEM5emRtYytDZz09KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy93aWZpLW9mZlxuICogQHNlZSBodHRwczovL2x1Y2lkZS5kZXYvZ3VpZGUvcGFja2FnZXMvbHVjaWRlLXJlYWN0IC0gRG9jdW1lbnRhdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyAtIEx1Y2lkZSBpY29ucyBwcm9wcyBhbmQgYW55IHZhbGlkIFNWRyBhdHRyaWJ1dGVcbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudH0gSlNYIEVsZW1lbnRcbiAqXG4gKi9cbmNvbnN0IFdpZmlPZmYgPSBjcmVhdGVMdWNpZGVJY29uKCdXaWZpT2ZmJywgW1xuICBbJ2xpbmUnLCB7IHgxOiAnMicsIHgyOiAnMjInLCB5MTogJzInLCB5MjogJzIyJywga2V5OiAnYTZwNnVqJyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTguNSAxNi41YTUgNSAwIDAgMSA3IDAnLCBrZXk6ICdzZWo1MjcnIH1dLFxuICBbJ3BhdGgnLCB7IGQ6ICdNMiA4LjgyYTE1IDE1IDAgMCAxIDQuMTctMi42NScsIGtleTogJzExdXRxMScgfV0sXG4gIFsncGF0aCcsIHsgZDogJ00xMC42NiA1YzQuMDEtLjM2IDguMTQuOSAxMS4zNCAzLjc2Jywga2V5OiAnaHhlZmR1JyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTE2Ljg1IDExLjI1YTEwIDEwIDAgMCAxIDIuMjIgMS42OCcsIGtleTogJ3E3MzRrbicgfV0sXG4gIFsncGF0aCcsIHsgZDogJ001IDEzYTEwIDEwIDAgMCAxIDUuMjQtMi43NicsIGtleTogJ3BpcTR5bCcgfV0sXG4gIFsnbGluZScsIHsgeDE6ICcxMicsIHgyOiAnMTIuMDEnLCB5MTogJzIwJywgeTI6ICcyMCcsIGtleTogJ29mNGJjNCcgfV0sXG5dKTtcblxuZXhwb3J0IGRlZmF1bHQgV2lmaU9mZjtcbiJdLCJuYW1lcyI6WyJXaWZpT2ZmIiwiY3JlYXRlTHVjaWRlSWNvbiIsIngxIiwieDIiLCJ5MSIsInkyIiwia2V5IiwiZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/wifi-off.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/wifi.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/wifi.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Wifi; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Wifi = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Wifi\", [\n    [\n        \"path\",\n        {\n            d: \"M5 13a10 10 0 0 1 14 0\",\n            key: \"6v8j51\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8.5 16.5a5 5 0 0 1 7 0\",\n            key: \"sej527\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 8.82a15 15 0 0 1 20 0\",\n            key: \"dnpr2z\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"12\",\n            x2: \"12.01\",\n            y1: \"20\",\n            y2: \"20\",\n            key: \"of4bc4\"\n        }\n    ]\n]);\n //# sourceMappingURL=wifi.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvd2lmaS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWFNLE1BQUFBLE9BQU9DLGdFQUFnQkEsQ0FBQyxRQUFRO0lBQ3BDO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQTBCQyxLQUFLO1FBQUE7S0FBVTtJQUN2RDtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUEyQkMsS0FBSztRQUFBO0tBQVU7SUFDeEQ7UUFBQztRQUFRO1lBQUVELEdBQUc7WUFBNEJDLEtBQUs7UUFBQTtLQUFVO0lBQ3pEO1FBQUM7UUFBUTtZQUFFQyxJQUFJO1lBQU1DLElBQUk7WUFBU0MsSUFBSTtZQUFNQyxJQUFJO1lBQU1KLEtBQUs7UUFBQTtLQUFVO0NBQ3RFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9zcmMvaWNvbnMvd2lmaS50cz9mYjJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgV2lmaVxuICogQGRlc2NyaXB0aW9uIEx1Y2lkZSBTVkcgaWNvbiBjb21wb25lbnQsIHJlbmRlcnMgU1ZHIEVsZW1lbnQgd2l0aCBjaGlsZHJlbi5cbiAqXG4gKiBAcHJldmlldyAhW2ltZ10oZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQSE4yWnlBZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSWdvZ0lIZHBaSFJvUFNJeU5DSUtJQ0JvWldsbmFIUTlJakkwSWdvZ0lIWnBaWGRDYjNnOUlqQWdNQ0F5TkNBeU5DSUtJQ0JtYVd4c1BTSnViMjVsSWdvZ0lITjBjbTlyWlQwaUl6QXdNQ0lnYzNSNWJHVTlJbUpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN0lHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VDSUtJQ0J6ZEhKdmEyVXRkMmxrZEdnOUlqSWlDaUFnYzNSeWIydGxMV3hwYm1WallYQTlJbkp2ZFc1a0lnb2dJSE4wY205clpTMXNhVzVsYW05cGJqMGljbTkxYm1RaUNqNEtJQ0E4Y0dGMGFDQmtQU0pOTlNBeE0yRXhNQ0F4TUNBd0lEQWdNU0F4TkNBd0lpQXZQZ29nSUR4d1lYUm9JR1E5SWswNExqVWdNVFl1TldFMUlEVWdNQ0F3SURFZ055QXdJaUF2UGdvZ0lEeHdZWFJvSUdROUlrMHlJRGd1T0RKaE1UVWdNVFVnTUNBd0lERWdNakFnTUNJZ0x6NEtJQ0E4YkdsdVpTQjRNVDBpTVRJaUlIZ3lQU0l4TWk0d01TSWdlVEU5SWpJd0lpQjVNajBpTWpBaUlDOCtDand2YzNablBnbz0pIC0gaHR0cHM6Ly9sdWNpZGUuZGV2L2ljb25zL3dpZmlcbiAqIEBzZWUgaHR0cHM6Ly9sdWNpZGUuZGV2L2d1aWRlL3BhY2thZ2VzL2x1Y2lkZS1yZWFjdCAtIERvY3VtZW50YXRpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHMgLSBMdWNpZGUgaWNvbnMgcHJvcHMgYW5kIGFueSB2YWxpZCBTVkcgYXR0cmlidXRlXG4gKiBAcmV0dXJucyB7SlNYLkVsZW1lbnR9IEpTWCBFbGVtZW50XG4gKlxuICovXG5jb25zdCBXaWZpID0gY3JlYXRlTHVjaWRlSWNvbignV2lmaScsIFtcbiAgWydwYXRoJywgeyBkOiAnTTUgMTNhMTAgMTAgMCAwIDEgMTQgMCcsIGtleTogJzZ2OGo1MScgfV0sXG4gIFsncGF0aCcsIHsgZDogJ004LjUgMTYuNWE1IDUgMCAwIDEgNyAwJywga2V5OiAnc2VqNTI3JyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTIgOC44MmExNSAxNSAwIDAgMSAyMCAwJywga2V5OiAnZG5wcjJ6JyB9XSxcbiAgWydsaW5lJywgeyB4MTogJzEyJywgeDI6ICcxMi4wMScsIHkxOiAnMjAnLCB5MjogJzIwJywga2V5OiAnb2Y0YmM0JyB9XSxcbl0pO1xuXG5leHBvcnQgZGVmYXVsdCBXaWZpO1xuIl0sIm5hbWVzIjpbIldpZmkiLCJjcmVhdGVMdWNpZGVJY29uIiwiZCIsImtleSIsIngxIiwieDIiLCJ5MSIsInkyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/wifi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"89ef926b9e53\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzP2I2OWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI4OWVmOTI2YjllNTNcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ConnectionStatus.tsx":
/*!*****************************************!*\
  !*** ./components/ConnectionStatus.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ConnectionStatus; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(app-pages-browser)/./node_modules/.pnpm/styled-jsx@5.1.1_react@18.3.1/node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _barrel_optimize_names_AlertTriangle_Wifi_WifiOff_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=AlertTriangle,Wifi,WifiOff!=!lucide-react */ \"(app-pages-browser)/__barrel_optimize__?names=AlertTriangle,Wifi,WifiOff!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* harmony import */ var _lib_fetch_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/fetch-utils */ \"(app-pages-browser)/./lib/fetch-utils.ts\");\n/* harmony import */ var _lib_runtime_error_handler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/runtime-error-handler */ \"(app-pages-browser)/./lib/runtime-error-handler.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction ConnectionStatus(param) {\n    let { showDetails = false } = param;\n    _s();\n    const [isOnline, setIsOnline] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [serverReachable, setServerReachable] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [lastCheck, setLastCheck] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [checking, setChecking] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isMounted, setIsMounted] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const checkServerConnectivity = async ()=>{\n        if (!isMounted || checking) return;\n        // Skip server connectivity checks in production environments\n        if ( true && (window.location.hostname.includes(\".fly.dev\") || window.location.hostname.includes(\".vercel.app\") || window.location.hostname.includes(\".netlify.app\") || window.location.hostname !== \"localhost\")) {\n            // In production, just rely on browser online status\n            if (isMounted) {\n                setServerReachable(navigator.onLine);\n                setLastCheck(new Date());\n            }\n            return;\n        }\n        setChecking(true);\n        const controller = new _lib_runtime_error_handler__WEBPACK_IMPORTED_MODULE_5__.SafeAbortController(\"connectivity-check\");\n        try {\n            const reachable = await (0,_lib_fetch_utils__WEBPACK_IMPORTED_MODULE_4__.checkConnectivity)(controller.signal);\n            // Only update state if component is mounted and request wasn't aborted\n            if (isMounted && !controller.aborted) {\n                setServerReachable(reachable);\n                setLastCheck(new Date());\n            }\n        } catch (error) {\n            // Handle production fetch errors gracefully\n            if (error instanceof Error && (error.message.includes(\"Failed to fetch\") || error.message.includes(\"TypeError: Failed to fetch\"))) {\n                console.debug(\"Production connectivity check skipped due to fetch restrictions\");\n                // In production, assume server is reachable if browser is online\n                if (isMounted && !controller.aborted) {\n                    setServerReachable(navigator.onLine);\n                    setLastCheck(new Date());\n                }\n            } else if (isMounted && !controller.aborted && error instanceof Error && !error.message.includes(\"cancelled\") && !error.message.includes(\"aborted\")) {\n                setServerReachable(false);\n                setLastCheck(new Date());\n            }\n        } finally{\n            controller.cleanup();\n            // Only update loading state if component is mounted\n            if (isMounted) {\n                setChecking(false);\n            }\n        }\n    };\n    // Check connectivity on mount and set up periodic checks\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        let interval;\n        let isCleanedUp = false;\n        const componentId = \"connection-status-component\";\n        const updateOnlineStatus = ()=>{\n            if (isCleanedUp || !isMounted) return;\n            setIsOnline(navigator.onLine);\n            if (navigator.onLine) {\n                checkServerConnectivity();\n            }\n        };\n        // Initial check\n        checkServerConnectivity();\n        // Set up periodic checks (reduced frequency to minimize load)\n        interval = setInterval(()=>{\n            if (!isCleanedUp && isMounted) {\n                checkServerConnectivity();\n            }\n        }, 60000); // Check every 60 seconds instead of 30\n        // Listen for online/offline events\n        window.addEventListener(\"online\", updateOnlineStatus);\n        window.addEventListener(\"offline\", updateOnlineStatus);\n        setIsOnline(navigator.onLine);\n        // Register cleanup task\n        _lib_runtime_error_handler__WEBPACK_IMPORTED_MODULE_5__.runtimeErrorHandler.registerCleanup(componentId, ()=>{\n            isCleanedUp = true;\n            if (interval) {\n                clearInterval(interval);\n            }\n            try {\n                window.removeEventListener(\"online\", updateOnlineStatus);\n                window.removeEventListener(\"offline\", updateOnlineStatus);\n            } catch (error) {\n            // Ignore cleanup errors\n            }\n        }, 5);\n        return ()=>{\n            isCleanedUp = true;\n            setIsMounted(false);\n            _lib_runtime_error_handler__WEBPACK_IMPORTED_MODULE_5__.runtimeErrorHandler.executeCleanup(componentId);\n        };\n    }, []);\n    const getStatusColor = ()=>{\n        if (!isOnline) return \"#ef4444\"; // red\n        if (!serverReachable) return \"#f59e0b\"; // orange\n        return \"#10b981\"; // green\n    };\n    const getStatusIcon = ()=>{\n        if (!isOnline) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertTriangle_Wifi_WifiOff_lucide_react__WEBPACK_IMPORTED_MODULE_3__.WifiOff, {\n            size: 16\n        }, void 0, false, {\n            fileName: \"/app/code/components/ConnectionStatus.tsx\",\n            lineNumber: 131,\n            columnNumber: 27\n        }, this);\n        if (!serverReachable) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertTriangle_Wifi_WifiOff_lucide_react__WEBPACK_IMPORTED_MODULE_3__.AlertTriangle, {\n            size: 16\n        }, void 0, false, {\n            fileName: \"/app/code/components/ConnectionStatus.tsx\",\n            lineNumber: 132,\n            columnNumber: 34\n        }, this);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertTriangle_Wifi_WifiOff_lucide_react__WEBPACK_IMPORTED_MODULE_3__.Wifi, {\n            size: 16\n        }, void 0, false, {\n            fileName: \"/app/code/components/ConnectionStatus.tsx\",\n            lineNumber: 133,\n            columnNumber: 12\n        }, this);\n    };\n    const getStatusText = ()=>{\n        if (!isOnline) return \"Offline\";\n        if (!serverReachable) return \"Server Unreachable\";\n        return \"Connected\";\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jsx-8c475a6a901fbb3b\" + \" \" + \"connection-status\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    color: getStatusColor()\n                },\n                title: getStatusText(),\n                className: \"jsx-8c475a6a901fbb3b\" + \" \" + \"status-indicator\",\n                children: [\n                    getStatusIcon(),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"jsx-8c475a6a901fbb3b\" + \" \" + \"status-text\",\n                        children: getStatusText()\n                    }, void 0, false, {\n                        fileName: \"/app/code/components/ConnectionStatus.tsx\",\n                        lineNumber: 150,\n                        columnNumber: 9\n                    }, this),\n                    checking && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"jsx-8c475a6a901fbb3b\" + \" \" + \"checking\",\n                        children: \"...\"\n                    }, void 0, false, {\n                        fileName: \"/app/code/components/ConnectionStatus.tsx\",\n                        lineNumber: 151,\n                        columnNumber: 22\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/code/components/ConnectionStatus.tsx\",\n                lineNumber: 144,\n                columnNumber: 7\n            }, this),\n            showDetails && lastCheck && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-8c475a6a901fbb3b\" + \" \" + \"status-details\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"small\", {\n                    className: \"jsx-8c475a6a901fbb3b\",\n                    children: [\n                        \"Last checked: \",\n                        lastCheck.toLocaleTimeString()\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/code/components/ConnectionStatus.tsx\",\n                    lineNumber: 156,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/app/code/components/ConnectionStatus.tsx\",\n                lineNumber: 155,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"8c475a6a901fbb3b\",\n                children: \".connection-status.jsx-8c475a6a901fbb3b{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-webkit-align-items:flex-end;-moz-box-align:end;-ms-flex-align:end;align-items:flex-end;gap:.25rem}.status-indicator.jsx-8c475a6a901fbb3b{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:.5rem;font-size:.875rem;font-weight:500}.status-text.jsx-8c475a6a901fbb3b{-webkit-transition:color.3s ease;-moz-transition:color.3s ease;-o-transition:color.3s ease;transition:color.3s ease}.checking.jsx-8c475a6a901fbb3b{opacity:.7;-webkit-animation:pulse 1s infinite;-moz-animation:pulse 1s infinite;-o-animation:pulse 1s infinite;animation:pulse 1s infinite}.status-details.jsx-8c475a6a901fbb3b{font-size:.75rem;color:#6b7280}@-webkit-keyframes pulse{0%,100%{opacity:.7}50%{opacity:.3}}@-moz-keyframes pulse{0%,100%{opacity:.7}50%{opacity:.3}}@-o-keyframes pulse{0%,100%{opacity:.7}50%{opacity:.3}}@keyframes pulse{0%,100%{opacity:.7}50%{opacity:.3}}@media(max-width:768px){.status-text.jsx-8c475a6a901fbb3b{display:none}}\"\n            }, void 0, false, void 0, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/code/components/ConnectionStatus.tsx\",\n        lineNumber: 143,\n        columnNumber: 5\n    }, this);\n}\n_s(ConnectionStatus, \"8qHYwvgHcRHQ9coaozxb3tOjDmQ=\");\n_c = ConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatus\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ConnectionStatus.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/DevErrorBoundary.tsx":
/*!*****************************************!*\
  !*** ./components/DevErrorBoundary.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DevErrorBoundary: function() { return /* binding */ DevErrorBoundary; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ DevErrorBoundary auto */ \n\nclass DevErrorBoundary extends (react__WEBPACK_IMPORTED_MODULE_1___default().Component) {\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI\n        return {\n            hasError: true,\n            error\n        };\n    }\n    componentDidCatch(error, errorInfo) {\n        // Log the error for debugging\n        console.error(\"Development Error Boundary caught an error:\", error, errorInfo);\n        // Check if this is a fetch/network error\n        if (error.message.includes(\"Failed to fetch\") || error.message.includes(\"NetworkError\")) {\n            console.warn(\"Network error detected - likely dev server connectivity issue\");\n            // Auto-reload in development after a short delay\n            if (true) {\n                setTimeout(()=>{\n                    window.location.reload();\n                }, 2000);\n            }\n        }\n        this.setState({\n            error,\n            errorInfo\n        });\n    }\n    render() {\n        if (this.state.hasError) {\n            var _this_state_error, _this_state_error1;\n            // Custom fallback UI\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-md w-full bg-white shadow-lg rounded-lg p-6\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center justify-center w-12 h-12 mx-auto bg-red-100 rounded-full mb-4\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                className: \"w-6 h-6 text-red-600\",\n                                fill: \"none\",\n                                stroke: \"currentColor\",\n                                viewBox: \"0 0 24 24\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: \"2\",\n                                    d: \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.502 0L4.732 15.5c-.77.833.192 2.5 1.732 2.5z\"\n                                }, void 0, false, {\n                                    fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                                    lineNumber: 56,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                                lineNumber: 55,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                            lineNumber: 54,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-xl font-semibold text-gray-900 text-center mb-2\",\n                            children: \"Development Server Issue\"\n                        }, void 0, false, {\n                            fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                            lineNumber: 60,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-600 text-center mb-4\",\n                            children: ((_this_state_error = this.state.error) === null || _this_state_error === void 0 ? void 0 : _this_state_error.message.includes(\"Failed to fetch\")) ? \"Network connectivity issue detected. Reloading automatically...\" : \"An unexpected error occurred during development.\"\n                        }, void 0, false, {\n                            fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                            lineNumber: 64,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>window.location.reload(),\n                                    className: \"w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\",\n                                    children: \"Reload Page\"\n                                }, void 0, false, {\n                                    fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                                    lineNumber: 72,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>this.setState({\n                                            hasError: false\n                                        }),\n                                    className: \"w-full px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors\",\n                                    children: \"Try Again\"\n                                }, void 0, false, {\n                                    fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                                    lineNumber: 79,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                            lineNumber: 71,\n                            columnNumber: 13\n                        }, this),\n                         true && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"details\", {\n                            className: \"mt-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"summary\", {\n                                    className: \"text-sm text-gray-500 cursor-pointer\",\n                                    children: \"Technical Details (Development Only)\"\n                                }, void 0, false, {\n                                    fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                                    lineNumber: 89,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                    className: \"mt-2 text-xs text-gray-600 bg-gray-100 p-2 rounded overflow-auto max-h-32\",\n                                    children: (_this_state_error1 = this.state.error) === null || _this_state_error1 === void 0 ? void 0 : _this_state_error1.stack\n                                }, void 0, false, {\n                                    fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                                    lineNumber: 92,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                            lineNumber: 88,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                    lineNumber: 53,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/app/code/components/DevErrorBoundary.tsx\",\n                lineNumber: 52,\n                columnNumber: 9\n            }, this);\n        }\n        return this.props.children;\n    }\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvRGV2RXJyb3JCb3VuZGFyeS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRTBCO0FBWW5CLE1BQU1DLHlCQUF5QkQsd0RBQWU7SUFNbkQsT0FBT0cseUJBQXlCQyxLQUFZLEVBQXlCO1FBQ25FLDREQUE0RDtRQUM1RCxPQUFPO1lBQUVDLFVBQVU7WUFBTUQ7UUFBTTtJQUNqQztJQUVBRSxrQkFBa0JGLEtBQVksRUFBRUcsU0FBMEIsRUFBRTtRQUMxRCw4QkFBOEI7UUFDOUJDLFFBQVFKLEtBQUssQ0FBQywrQ0FBK0NBLE9BQU9HO1FBRXBFLHlDQUF5QztRQUN6QyxJQUFJSCxNQUFNSyxPQUFPLENBQUNDLFFBQVEsQ0FBQyxzQkFBc0JOLE1BQU1LLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLGlCQUFpQjtZQUN2RkYsUUFBUUcsSUFBSSxDQUFDO1lBRWIsaURBQWlEO1lBQ2pELElBQUlDLElBQXlCLEVBQWU7Z0JBQzFDQyxXQUFXO29CQUNUQyxPQUFPQyxRQUFRLENBQUNDLE1BQU07Z0JBQ3hCLEdBQUc7WUFDTDtRQUNGO1FBRUEsSUFBSSxDQUFDQyxRQUFRLENBQUM7WUFDWmI7WUFDQUc7UUFDRjtJQUNGO0lBRUFXLFNBQVM7UUFDUCxJQUFJLElBQUksQ0FBQ0MsS0FBSyxDQUFDZCxRQUFRLEVBQUU7Z0JBZ0JkLG1CQTRCSTtZQTNDYixxQkFBcUI7WUFDckIscUJBQ0UsOERBQUNlO2dCQUFJQyxXQUFVOzBCQUNiLDRFQUFDRDtvQkFBSUMsV0FBVTs7c0NBQ2IsOERBQUNEOzRCQUFJQyxXQUFVO3NDQUNiLDRFQUFDQztnQ0FBSUQsV0FBVTtnQ0FBdUJFLE1BQUs7Z0NBQU9DLFFBQU87Z0NBQWVDLFNBQVE7MENBQzlFLDRFQUFDQztvQ0FBS0MsZUFBYztvQ0FBUUMsZ0JBQWU7b0NBQVFDLGFBQVk7b0NBQUlDLEdBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7c0NBSXpFLDhEQUFDQzs0QkFBR1YsV0FBVTtzQ0FBdUQ7Ozs7OztzQ0FJckUsOERBQUNXOzRCQUFFWCxXQUFVO3NDQUNWLDBCQUFJLENBQUNGLEtBQUssQ0FBQ2YsS0FBSyxjQUFoQiwwREFBa0JLLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLHNCQUNoQyxvRUFDQTs7Ozs7O3NDQUlOLDhEQUFDVTs0QkFBSUMsV0FBVTs7OENBQ2IsOERBQUNZO29DQUNDQyxTQUFTLElBQU1wQixPQUFPQyxRQUFRLENBQUNDLE1BQU07b0NBQ3JDSyxXQUFVOzhDQUNYOzs7Ozs7OENBSUQsOERBQUNZO29DQUNDQyxTQUFTLElBQU0sSUFBSSxDQUFDakIsUUFBUSxDQUFDOzRDQUFFWixVQUFVO3dDQUFNO29DQUMvQ2dCLFdBQVU7OENBQ1g7Ozs7Ozs7Ozs7Ozt3QkFqRmYsS0FzRnNDLGtCQUN4Qiw4REFBQ2M7NEJBQVFkLFdBQVU7OzhDQUNqQiw4REFBQ2U7b0NBQVFmLFdBQVU7OENBQXVDOzs7Ozs7OENBRzFELDhEQUFDZ0I7b0NBQUloQixXQUFVOytDQUNaLHlCQUFJLENBQUNGLEtBQUssQ0FBQ2YsS0FBSyxjQUFoQiw0REFBa0JrQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztRQU90QztRQUVBLE9BQU8sSUFBSSxDQUFDQyxLQUFLLENBQUNDLFFBQVE7SUFDNUI7SUF2RkFDLFlBQVlGLEtBQTRCLENBQUU7UUFDeEMsS0FBSyxDQUFDQTtRQUNOLElBQUksQ0FBQ3BCLEtBQUssR0FBRztZQUFFZCxVQUFVO1FBQU07SUFDakM7QUFxRkYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9EZXZFcnJvckJvdW5kYXJ5LnRzeD80OTg0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbnRlcmZhY2UgRGV2RXJyb3JCb3VuZGFyeVN0YXRlIHtcbiAgaGFzRXJyb3I6IGJvb2xlYW47XG4gIGVycm9yPzogRXJyb3I7XG4gIGVycm9ySW5mbz86IFJlYWN0LkVycm9ySW5mbztcbn1cblxuaW50ZXJmYWNlIERldkVycm9yQm91bmRhcnlQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59XG5cbmV4cG9ydCBjbGFzcyBEZXZFcnJvckJvdW5kYXJ5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PERldkVycm9yQm91bmRhcnlQcm9wcywgRGV2RXJyb3JCb3VuZGFyeVN0YXRlPiB7XG4gIGNvbnN0cnVjdG9yKHByb3BzOiBEZXZFcnJvckJvdW5kYXJ5UHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHsgaGFzRXJyb3I6IGZhbHNlIH07XG4gIH1cblxuICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yKGVycm9yOiBFcnJvcik6IERldkVycm9yQm91bmRhcnlTdGF0ZSB7XG4gICAgLy8gVXBkYXRlIHN0YXRlIHNvIHRoZSBuZXh0IHJlbmRlciB3aWxsIHNob3cgdGhlIGZhbGxiYWNrIFVJXG4gICAgcmV0dXJuIHsgaGFzRXJyb3I6IHRydWUsIGVycm9yIH07XG4gIH1cblxuICBjb21wb25lbnREaWRDYXRjaChlcnJvcjogRXJyb3IsIGVycm9ySW5mbzogUmVhY3QuRXJyb3JJbmZvKSB7XG4gICAgLy8gTG9nIHRoZSBlcnJvciBmb3IgZGVidWdnaW5nXG4gICAgY29uc29sZS5lcnJvcignRGV2ZWxvcG1lbnQgRXJyb3IgQm91bmRhcnkgY2F1Z2h0IGFuIGVycm9yOicsIGVycm9yLCBlcnJvckluZm8pO1xuICAgIFxuICAgIC8vIENoZWNrIGlmIHRoaXMgaXMgYSBmZXRjaC9uZXR3b3JrIGVycm9yXG4gICAgaWYgKGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ0ZhaWxlZCB0byBmZXRjaCcpIHx8IGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ05ldHdvcmtFcnJvcicpKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ05ldHdvcmsgZXJyb3IgZGV0ZWN0ZWQgLSBsaWtlbHkgZGV2IHNlcnZlciBjb25uZWN0aXZpdHkgaXNzdWUnKTtcbiAgICAgIFxuICAgICAgLy8gQXV0by1yZWxvYWQgaW4gZGV2ZWxvcG1lbnQgYWZ0ZXIgYSBzaG9ydCBkZWxheVxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgfSwgMjAwMCk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZXJyb3IsXG4gICAgICBlcnJvckluZm9cbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5oYXNFcnJvcikge1xuICAgICAgLy8gQ3VzdG9tIGZhbGxiYWNrIFVJXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBiZy1ncmF5LTUwXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy1tZCB3LWZ1bGwgYmctd2hpdGUgc2hhZG93LWxnIHJvdW5kZWQtbGcgcC02XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHctMTIgaC0xMiBteC1hdXRvIGJnLXJlZC0xMDAgcm91bmRlZC1mdWxsIG1iLTRcIj5cbiAgICAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJ3LTYgaC02IHRleHQtcmVkLTYwMFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZUxpbmVqb2luPVwicm91bmRcIiBzdHJva2VXaWR0aD1cIjJcIiBkPVwiTTEyIDl2Mm0wIDRoLjAxbS02LjkzOCA0aDEzLjg1NmMxLjU0IDAgMi41MDItMS42NjcgMS43MzItMi41TDEzLjczMiA0Yy0uNzctLjgzMy0xLjczMi0uODMzLTIuNTAyIDBMNC43MzIgMTUuNWMtLjc3LjgzMy4xOTIgMi41IDEuNzMyIDIuNXpcIiAvPlxuICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC14bCBmb250LXNlbWlib2xkIHRleHQtZ3JheS05MDAgdGV4dC1jZW50ZXIgbWItMlwiPlxuICAgICAgICAgICAgICBEZXZlbG9wbWVudCBTZXJ2ZXIgSXNzdWVcbiAgICAgICAgICAgIDwvaDI+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtZ3JheS02MDAgdGV4dC1jZW50ZXIgbWItNFwiPlxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5lcnJvcj8ubWVzc2FnZS5pbmNsdWRlcygnRmFpbGVkIHRvIGZldGNoJykgXG4gICAgICAgICAgICAgICAgPyAnTmV0d29yayBjb25uZWN0aXZpdHkgaXNzdWUgZGV0ZWN0ZWQuIFJlbG9hZGluZyBhdXRvbWF0aWNhbGx5Li4uJ1xuICAgICAgICAgICAgICAgIDogJ0FuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQgZHVyaW5nIGRldmVsb3BtZW50LidcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktM1wiPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBweC00IHB5LTIgYmctYmx1ZS02MDAgdGV4dC13aGl0ZSByb3VuZGVkLW1kIGhvdmVyOmJnLWJsdWUtNzAwIHRyYW5zaXRpb24tY29sb3JzXCJcbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIFJlbG9hZCBQYWdlXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHRoaXMuc2V0U3RhdGUoeyBoYXNFcnJvcjogZmFsc2UgfSl9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHB4LTQgcHktMiBiZy1ncmF5LTYwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtbWQgaG92ZXI6YmctZ3JheS03MDAgdHJhbnNpdGlvbi1jb2xvcnNcIlxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgVHJ5IEFnYWluXG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHtwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyAmJiAoXG4gICAgICAgICAgICAgIDxkZXRhaWxzIGNsYXNzTmFtZT1cIm10LTZcIj5cbiAgICAgICAgICAgICAgICA8c3VtbWFyeSBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgY3Vyc29yLXBvaW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIFRlY2huaWNhbCBEZXRhaWxzIChEZXZlbG9wbWVudCBPbmx5KVxuICAgICAgICAgICAgICAgIDwvc3VtbWFyeT5cbiAgICAgICAgICAgICAgICA8cHJlIGNsYXNzTmFtZT1cIm10LTIgdGV4dC14cyB0ZXh0LWdyYXktNjAwIGJnLWdyYXktMTAwIHAtMiByb3VuZGVkIG92ZXJmbG93LWF1dG8gbWF4LWgtMzJcIj5cbiAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmVycm9yPy5zdGFja31cbiAgICAgICAgICAgICAgICA8L3ByZT5cbiAgICAgICAgICAgICAgPC9kZXRhaWxzPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICB9XG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJEZXZFcnJvckJvdW5kYXJ5IiwiQ29tcG9uZW50IiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZXJyb3IiLCJoYXNFcnJvciIsImNvbXBvbmVudERpZENhdGNoIiwiZXJyb3JJbmZvIiwiY29uc29sZSIsIm1lc3NhZ2UiLCJpbmNsdWRlcyIsIndhcm4iLCJwcm9jZXNzIiwic2V0VGltZW91dCIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVsb2FkIiwic2V0U3RhdGUiLCJyZW5kZXIiLCJzdGF0ZSIsImRpdiIsImNsYXNzTmFtZSIsInN2ZyIsImZpbGwiLCJzdHJva2UiLCJ2aWV3Qm94IiwicGF0aCIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2VMaW5lam9pbiIsInN0cm9rZVdpZHRoIiwiZCIsImgyIiwicCIsImJ1dHRvbiIsIm9uQ2xpY2siLCJkZXRhaWxzIiwic3VtbWFyeSIsInByZSIsInN0YWNrIiwicHJvcHMiLCJjaGlsZHJlbiIsImNvbnN0cnVjdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/DevErrorBoundary.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/ErrorBoundary.tsx":
/*!**************************************!*\
  !*** ./components/ErrorBoundary.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchErrorFallback: function() { return /* binding */ FetchErrorFallback; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(app-pages-browser)/./node_modules/.pnpm/styled-jsx@5.1.1_react@18.3.1/node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _barrel_optimize_names_AlertTriangle_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=AlertTriangle,RefreshCw!=!lucide-react */ \"(app-pages-browser)/__barrel_optimize__?names=AlertTriangle,RefreshCw!=!./node_modules/lucide-react/dist/esm/lucide-react.js\");\n/* __next_internal_client_entry_do_not_use__ FetchErrorFallback,default auto */ \n\n\n\nclass ErrorBoundary extends (react__WEBPACK_IMPORTED_MODULE_2___default().Component) {\n    static getDerivedStateFromError(error) {\n        return {\n            hasError: true,\n            error\n        };\n    }\n    componentDidCatch(error, errorInfo) {\n        console.error(\"ErrorBoundary caught an error:\", error, errorInfo);\n        // Log to external service in production\n        if (false) {}\n        this.setState({\n            error,\n            errorInfo\n        });\n    }\n    render() {\n        if (this.state.hasError) {\n            var _this_state_error;\n            const { fallback: Fallback } = this.props;\n            if (Fallback && this.state.error) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Fallback, {\n                    error: this.state.error,\n                    retry: this.retry\n                }, void 0, false, {\n                    fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                    lineNumber: 53,\n                    columnNumber: 16\n                }, this);\n            }\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-5c7a54c79949de53\" + \" \" + \"error-boundary-container\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"jsx-5c7a54c79949de53\" + \" \" + \"error-boundary-content\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"jsx-5c7a54c79949de53\" + \" \" + \"error-icon\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertTriangle_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_3__.AlertTriangle, {\n                                    size: 48\n                                }, void 0, false, {\n                                    fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                    lineNumber: 60,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                lineNumber: 59,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"jsx-5c7a54c79949de53\",\n                                children: \"Something went wrong\"\n                            }, void 0, false, {\n                                fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                lineNumber: 62,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"jsx-5c7a54c79949de53\" + \" \" + \"error-message\",\n                                children: ((_this_state_error = this.state.error) === null || _this_state_error === void 0 ? void 0 : _this_state_error.message) || \"An unexpected error occurred\"\n                            }, void 0, false, {\n                                fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                lineNumber: 63,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: this.retry,\n                                className: \"jsx-5c7a54c79949de53\" + \" \" + \"retry-button\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertTriangle_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_3__.RefreshCw, {\n                                        size: 16\n                                    }, void 0, false, {\n                                        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                        lineNumber: 67,\n                                        columnNumber: 15\n                                    }, this),\n                                    \"Try Again\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                lineNumber: 66,\n                                columnNumber: 13\n                            }, this),\n                             true && this.state.error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"details\", {\n                                className: \"jsx-5c7a54c79949de53\" + \" \" + \"error-details\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"summary\", {\n                                        className: \"jsx-5c7a54c79949de53\",\n                                        children: \"Error Details (Development)\"\n                                    }, void 0, false, {\n                                        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                        lineNumber: 73,\n                                        columnNumber: 17\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"jsx-5c7a54c79949de53\",\n                                        children: this.state.error.stack\n                                    }, void 0, false, {\n                                        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                        lineNumber: 74,\n                                        columnNumber: 17\n                                    }, this),\n                                    this.state.errorInfo && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"jsx-5c7a54c79949de53\",\n                                        children: this.state.errorInfo.componentStack\n                                    }, void 0, false, {\n                                        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                        lineNumber: 76,\n                                        columnNumber: 19\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                lineNumber: 72,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                        lineNumber: 58,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                        id: \"5c7a54c79949de53\",\n                        children: \".error-boundary-container.jsx-5c7a54c79949de53{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;min-height:400px;padding:2rem;background:#fef2f2;border:1px solid#fecaca;-webkit-border-radius:.5rem;-moz-border-radius:.5rem;border-radius:.5rem;margin:1rem}.error-boundary-content.jsx-5c7a54c79949de53{text-align:center;max-width:500px}.error-icon.jsx-5c7a54c79949de53{color:#dc2626;margin-bottom:1rem}h2.jsx-5c7a54c79949de53{color:#991b1b;margin-bottom:.5rem;font-size:1.5rem;font-weight:600}.error-message.jsx-5c7a54c79949de53{color:#7f1d1d;margin-bottom:1.5rem;font-size:1rem;line-height:1.5}.retry-button.jsx-5c7a54c79949de53{display:-webkit-inline-box;display:-webkit-inline-flex;display:-moz-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:.5rem;padding:.75rem 1.5rem;background:#dc2626;color:white;border:none;-webkit-border-radius:.375rem;-moz-border-radius:.375rem;border-radius:.375rem;font-weight:500;cursor:pointer;-webkit-transition:background-color.2s;-moz-transition:background-color.2s;-o-transition:background-color.2s;transition:background-color.2s}.retry-button.jsx-5c7a54c79949de53:hover{background:#b91c1c}.error-details.jsx-5c7a54c79949de53{margin-top:2rem;text-align:left;background:white;border:1px solid#d1d5db;-webkit-border-radius:.375rem;-moz-border-radius:.375rem;border-radius:.375rem;padding:1rem}.error-details.jsx-5c7a54c79949de53 summary.jsx-5c7a54c79949de53{cursor:pointer;font-weight:500;margin-bottom:.5rem;color:#374151}.error-details.jsx-5c7a54c79949de53 pre.jsx-5c7a54c79949de53{background:#f9fafb;border:1px solid#e5e7eb;-webkit-border-radius:.25rem;-moz-border-radius:.25rem;border-radius:.25rem;padding:.75rem;font-size:.75rem;line-height:1.4;color:#374151;overflow-x:auto;white-space:pre-wrap;word-break:break-all}\"\n                    }, void 0, false, void 0, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                lineNumber: 57,\n                columnNumber: 9\n            }, this);\n        }\n        return this.props.children;\n    }\n    constructor(props){\n        super(props);\n        this.retry = ()=>{\n            this.setState({\n                hasError: false,\n                error: undefined,\n                errorInfo: undefined\n            });\n        };\n        this.state = {\n            hasError: false\n        };\n    }\n}\n// Simple fallback component for fetch errors\nconst FetchErrorFallback = (param)=>{\n    let { error, retry } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jsx-ba80e6749f7b8557\" + \" \" + \"fetch-error-container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-ba80e6749f7b8557\" + \" \" + \"fetch-error-content\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertTriangle_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_3__.AlertTriangle, {\n                        size: 32,\n                        className: \"fetch-error-icon\"\n                    }, void 0, false, {\n                        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                        lineNumber: 178,\n                        columnNumber: 7\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"jsx-ba80e6749f7b8557\",\n                        children: \"Network Error\"\n                    }, void 0, false, {\n                        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                        lineNumber: 179,\n                        columnNumber: 7\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"jsx-ba80e6749f7b8557\",\n                        children: error.message.includes(\"fetch\") ? \"Unable to connect to the server. Please check your connection and try again.\" : error.message\n                    }, void 0, false, {\n                        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                        lineNumber: 180,\n                        columnNumber: 7\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: retry,\n                        className: \"jsx-ba80e6749f7b8557\" + \" \" + \"fetch-retry-button\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_AlertTriangle_RefreshCw_lucide_react__WEBPACK_IMPORTED_MODULE_3__.RefreshCw, {\n                                size: 16\n                            }, void 0, false, {\n                                fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                                lineNumber: 187,\n                                columnNumber: 9\n                            }, undefined),\n                            \"Retry\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                        lineNumber: 186,\n                        columnNumber: 7\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/code/components/ErrorBoundary.tsx\",\n                lineNumber: 177,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"ba80e6749f7b8557\",\n                children: \".fetch-error-container.jsx-ba80e6749f7b8557{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:2rem;background:#fef3c7;border:1px solid#fcd34d;-webkit-border-radius:.5rem;-moz-border-radius:.5rem;border-radius:.5rem;margin:1rem 0}.fetch-error-content.jsx-ba80e6749f7b8557{text-align:center;max-width:400px}.fetch-error-icon.jsx-ba80e6749f7b8557{color:#d97706;margin-bottom:.75rem}h3.jsx-ba80e6749f7b8557{color:#92400e;margin-bottom:.5rem;font-size:1.25rem;font-weight:600}p.jsx-ba80e6749f7b8557{color:#78350f;margin-bottom:1rem;font-size:.875rem;line-height:1.4}.fetch-retry-button.jsx-ba80e6749f7b8557{display:-webkit-inline-box;display:-webkit-inline-flex;display:-moz-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;gap:.5rem;padding:.5rem 1rem;background:#d97706;color:white;border:none;-webkit-border-radius:.25rem;-moz-border-radius:.25rem;border-radius:.25rem;font-weight:500;cursor:pointer;-webkit-transition:background-color.2s;-moz-transition:background-color.2s;-o-transition:background-color.2s;transition:background-color.2s}.fetch-retry-button.jsx-ba80e6749f7b8557:hover{background:#b45309}\"\n            }, void 0, false, void 0, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/code/components/ErrorBoundary.tsx\",\n        lineNumber: 176,\n        columnNumber: 3\n    }, undefined);\n};\n_c = FetchErrorFallback;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ErrorBoundary);\nvar _c;\n$RefreshReg$(_c, \"FetchErrorFallback\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ErrorBoundary.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/GlobalErrorHandler.tsx":
/*!*******************************************!*\
  !*** ./components/GlobalErrorHandler.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GlobalErrorHandler; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_runtime_error_handler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/runtime-error-handler */ \"(app-pages-browser)/./lib/runtime-error-handler.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction GlobalErrorHandler(param) {\n    let { children } = param;\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleError = (error)=>{\n            // Filter out known safe errors that can be ignored\n            const ignorableErrors = [\n                \"cancelled\",\n                \"aborted\",\n                \"Request was cancelled\",\n                \"signal is aborted without reason\",\n                \"Non-Error promise rejection captured\",\n                \"ResizeObserver loop limit exceeded\",\n                \"Failed to fetch\",\n                \"NetworkError\",\n                \"fetch\",\n                \"Network request failed\",\n                \"TypeError: Failed to fetch\",\n                \"AbortError\",\n                \"The user aborted a request\"\n            ];\n            const shouldIgnore = ignorableErrors.some((ignorable)=>{\n                var _error_message, _error_name;\n                return ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes(ignorable)) || ((_error_name = error.name) === null || _error_name === void 0 ? void 0 : _error_name.includes(ignorable));\n            });\n            if (shouldIgnore) {\n                return; // Silently ignore these errors\n            }\n            // Log other errors for debugging\n            console.error(\"Global error caught:\", {\n                message: error.message,\n                name: error.name,\n                stack: error.stack,\n                timestamp: new Date().toISOString()\n            });\n            // In development, we can be more verbose\n            if (true) {\n                console.group(\"Error Details\");\n                console.error(\"Error object:\", error);\n                console.error(\"Stack trace:\", error.stack);\n                console.groupEnd();\n            }\n        };\n        // Register the error handler\n        _lib_runtime_error_handler__WEBPACK_IMPORTED_MODULE_2__.runtimeErrorHandler.addErrorListener(handleError);\n        // Cleanup on unmount\n        return ()=>{\n            _lib_runtime_error_handler__WEBPACK_IMPORTED_MODULE_2__.runtimeErrorHandler.removeErrorListener(handleError);\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: children\n    }, void 0, false);\n}\n_s(GlobalErrorHandler, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GlobalErrorHandler;\nvar _c;\n$RefreshReg$(_c, \"GlobalErrorHandler\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvR2xvYmFsRXJyb3JIYW5kbGVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUVrQztBQUNnQztBQU1uRCxTQUFTRSxtQkFBbUIsS0FBcUM7UUFBckMsRUFBRUMsUUFBUSxFQUEyQixHQUFyQzs7SUFDekNILGdEQUFTQSxDQUFDO1FBQ1IsTUFBTUksY0FBYyxDQUFDQztZQUNuQixtREFBbUQ7WUFDbkQsTUFBTUMsa0JBQWtCO2dCQUN0QjtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTthQUNEO1lBRUQsTUFBTUMsZUFBZUQsZ0JBQWdCRSxJQUFJLENBQUNDLENBQUFBO29CQUN4Q0osZ0JBQXNDQTt1QkFBdENBLEVBQUFBLGlCQUFBQSxNQUFNSyxPQUFPLGNBQWJMLHFDQUFBQSxlQUFlTSxRQUFRLENBQUNGLGlCQUFjSixjQUFBQSxNQUFNTyxJQUFJLGNBQVZQLGtDQUFBQSxZQUFZTSxRQUFRLENBQUNGOztZQUc3RCxJQUFJRixjQUFjO2dCQUNoQixRQUFRLCtCQUErQjtZQUN6QztZQUVBLGlDQUFpQztZQUNqQ00sUUFBUVIsS0FBSyxDQUFDLHdCQUF3QjtnQkFDcENLLFNBQVNMLE1BQU1LLE9BQU87Z0JBQ3RCRSxNQUFNUCxNQUFNTyxJQUFJO2dCQUNoQkUsT0FBT1QsTUFBTVMsS0FBSztnQkFDbEJDLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztZQUNuQztZQUVBLHlDQUF5QztZQUN6QyxJQUFJQyxJQUF5QixFQUFlO2dCQUMxQ0wsUUFBUU0sS0FBSyxDQUFDO2dCQUNkTixRQUFRUixLQUFLLENBQUMsaUJBQWlCQTtnQkFDL0JRLFFBQVFSLEtBQUssQ0FBQyxnQkFBZ0JBLE1BQU1TLEtBQUs7Z0JBQ3pDRCxRQUFRTyxRQUFRO1lBQ2xCO1FBQ0Y7UUFFQSw2QkFBNkI7UUFDN0JuQiwyRUFBbUJBLENBQUNvQixnQkFBZ0IsQ0FBQ2pCO1FBRXJDLHFCQUFxQjtRQUNyQixPQUFPO1lBQ0xILDJFQUFtQkEsQ0FBQ3FCLG1CQUFtQixDQUFDbEI7UUFDMUM7SUFDRixHQUFHLEVBQUU7SUFFTCxxQkFBTztrQkFBR0Q7O0FBQ1o7R0F2RHdCRDtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0dsb2JhbEVycm9ySGFuZGxlci50c3g/M2MyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJ1bnRpbWVFcnJvckhhbmRsZXIgfSBmcm9tICdAL2xpYi9ydW50aW1lLWVycm9yLWhhbmRsZXInO1xuXG5pbnRlcmZhY2UgR2xvYmFsRXJyb3JIYW5kbGVyUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHbG9iYWxFcnJvckhhbmRsZXIoeyBjaGlsZHJlbiB9OiBHbG9iYWxFcnJvckhhbmRsZXJQcm9wcykge1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGhhbmRsZUVycm9yID0gKGVycm9yOiBFcnJvcikgPT4ge1xuICAgICAgLy8gRmlsdGVyIG91dCBrbm93biBzYWZlIGVycm9ycyB0aGF0IGNhbiBiZSBpZ25vcmVkXG4gICAgICBjb25zdCBpZ25vcmFibGVFcnJvcnMgPSBbXG4gICAgICAgICdjYW5jZWxsZWQnLFxuICAgICAgICAnYWJvcnRlZCcsXG4gICAgICAgICdSZXF1ZXN0IHdhcyBjYW5jZWxsZWQnLFxuICAgICAgICAnc2lnbmFsIGlzIGFib3J0ZWQgd2l0aG91dCByZWFzb24nLFxuICAgICAgICAnTm9uLUVycm9yIHByb21pc2UgcmVqZWN0aW9uIGNhcHR1cmVkJyxcbiAgICAgICAgJ1Jlc2l6ZU9ic2VydmVyIGxvb3AgbGltaXQgZXhjZWVkZWQnLFxuICAgICAgICAnRmFpbGVkIHRvIGZldGNoJyxcbiAgICAgICAgJ05ldHdvcmtFcnJvcicsXG4gICAgICAgICdmZXRjaCcsXG4gICAgICAgICdOZXR3b3JrIHJlcXVlc3QgZmFpbGVkJyxcbiAgICAgICAgJ1R5cGVFcnJvcjogRmFpbGVkIHRvIGZldGNoJyxcbiAgICAgICAgJ0Fib3J0RXJyb3InLFxuICAgICAgICAnVGhlIHVzZXIgYWJvcnRlZCBhIHJlcXVlc3QnXG4gICAgICBdO1xuXG4gICAgICBjb25zdCBzaG91bGRJZ25vcmUgPSBpZ25vcmFibGVFcnJvcnMuc29tZShpZ25vcmFibGUgPT4gXG4gICAgICAgIGVycm9yLm1lc3NhZ2U/LmluY2x1ZGVzKGlnbm9yYWJsZSkgfHwgZXJyb3IubmFtZT8uaW5jbHVkZXMoaWdub3JhYmxlKVxuICAgICAgKTtcblxuICAgICAgaWYgKHNob3VsZElnbm9yZSkge1xuICAgICAgICByZXR1cm47IC8vIFNpbGVudGx5IGlnbm9yZSB0aGVzZSBlcnJvcnNcbiAgICAgIH1cblxuICAgICAgLy8gTG9nIG90aGVyIGVycm9ycyBmb3IgZGVidWdnaW5nXG4gICAgICBjb25zb2xlLmVycm9yKCdHbG9iYWwgZXJyb3IgY2F1Z2h0OicsIHtcbiAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgbmFtZTogZXJyb3IubmFtZSxcbiAgICAgICAgc3RhY2s6IGVycm9yLnN0YWNrLFxuICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgfSk7XG5cbiAgICAgIC8vIEluIGRldmVsb3BtZW50LCB3ZSBjYW4gYmUgbW9yZSB2ZXJib3NlXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgICAgY29uc29sZS5ncm91cCgnRXJyb3IgRGV0YWlscycpO1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvYmplY3Q6JywgZXJyb3IpO1xuICAgICAgICBjb25zb2xlLmVycm9yKCdTdGFjayB0cmFjZTonLCBlcnJvci5zdGFjayk7XG4gICAgICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gUmVnaXN0ZXIgdGhlIGVycm9yIGhhbmRsZXJcbiAgICBydW50aW1lRXJyb3JIYW5kbGVyLmFkZEVycm9yTGlzdGVuZXIoaGFuZGxlRXJyb3IpO1xuXG4gICAgLy8gQ2xlYW51cCBvbiB1bm1vdW50XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHJ1bnRpbWVFcnJvckhhbmRsZXIucmVtb3ZlRXJyb3JMaXN0ZW5lcihoYW5kbGVFcnJvcik7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiA8PntjaGlsZHJlbn08Lz47XG59XG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwicnVudGltZUVycm9ySGFuZGxlciIsIkdsb2JhbEVycm9ySGFuZGxlciIsImNoaWxkcmVuIiwiaGFuZGxlRXJyb3IiLCJlcnJvciIsImlnbm9yYWJsZUVycm9ycyIsInNob3VsZElnbm9yZSIsInNvbWUiLCJpZ25vcmFibGUiLCJtZXNzYWdlIiwiaW5jbHVkZXMiLCJuYW1lIiwiY29uc29sZSIsInN0YWNrIiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwicHJvY2VzcyIsImdyb3VwIiwiZ3JvdXBFbmQiLCJhZGRFcnJvckxpc3RlbmVyIiwicmVtb3ZlRXJyb3JMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/GlobalErrorHandler.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/SafeNavigation.tsx":
/*!***************************************!*\
  !*** ./components/SafeNavigation.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SafeNavigation: function() { return /* binding */ SafeNavigation; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ SafeNavigation auto */ var _s = $RefreshSig$();\n\nfunction SafeNavigation() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Override problematic navigation that causes fetch failures\n        const handleNavigation = (e)=>{\n            // Prevent default navigation that causes RSC fetch failures\n            if (window.location.pathname.includes(\"reload=\")) {\n                e.preventDefault();\n                // Force a full page reload instead of trying to fetch RSC payload\n                window.location.href = window.location.pathname;\n                return false;\n            }\n        };\n        // Handle navigation safely\n        window.addEventListener(\"popstate\", handleNavigation);\n        // Override Next.js router if it exists\n        if ( true && window.__NEXT_DATA__) {\n            var _window_next;\n            // Prevent automatic RSC fetching\n            const router = (_window_next = window.next) === null || _window_next === void 0 ? void 0 : _window_next.router;\n            if (router) {\n                const originalPush = router.push;\n                router.push = function() {\n                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                        args[_key] = arguments[_key];\n                    }\n                    // Force full page navigation instead of client-side routing\n                    const url = args[0];\n                    if (typeof url === \"string\") {\n                        window.location.href = url;\n                        return Promise.resolve(true);\n                    }\n                    return originalPush.apply(this, args);\n                };\n            }\n        }\n        return ()=>{\n            window.removeEventListener(\"popstate\", handleNavigation);\n        };\n    }, []);\n    return null; // This component doesn't render anything\n}\n_s(SafeNavigation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SafeNavigation;\nvar _c;\n$RefreshReg$(_c, \"SafeNavigation\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvU2FmZU5hdmlnYXRpb24udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFa0M7QUFFM0IsU0FBU0M7O0lBQ2RELGdEQUFTQSxDQUFDO1FBQ1IsNkRBQTZEO1FBQzdELE1BQU1FLG1CQUFtQixDQUFDQztZQUN4Qiw0REFBNEQ7WUFDNUQsSUFBSUMsT0FBT0MsUUFBUSxDQUFDQyxRQUFRLENBQUNDLFFBQVEsQ0FBQyxZQUFZO2dCQUNoREosRUFBRUssY0FBYztnQkFDaEIsa0VBQWtFO2dCQUNsRUosT0FBT0MsUUFBUSxDQUFDSSxJQUFJLEdBQUdMLE9BQU9DLFFBQVEsQ0FBQ0MsUUFBUTtnQkFDL0MsT0FBTztZQUNUO1FBQ0Y7UUFFQSwyQkFBMkI7UUFDM0JGLE9BQU9NLGdCQUFnQixDQUFDLFlBQVlSO1FBRXBDLHVDQUF1QztRQUN2QyxJQUFJLEtBQWtCLElBQWUsT0FBZ0JTLGFBQWEsRUFBRTtnQkFFbkQ7WUFEZixpQ0FBaUM7WUFDakMsTUFBTUMsVUFBUyxzQkFBZ0JDLElBQUksY0FBcEIsZ0RBQXNCRCxNQUFNO1lBQzNDLElBQUlBLFFBQVE7Z0JBQ1YsTUFBTUUsZUFBZUYsT0FBT0csSUFBSTtnQkFDaENILE9BQU9HLElBQUksR0FBRztvQkFBUzt3QkFBR0MsS0FBSCx1QkFBYzs7b0JBQ25DLDREQUE0RDtvQkFDNUQsTUFBTUMsTUFBTUQsSUFBSSxDQUFDLEVBQUU7b0JBQ25CLElBQUksT0FBT0MsUUFBUSxVQUFVO3dCQUMzQmIsT0FBT0MsUUFBUSxDQUFDSSxJQUFJLEdBQUdRO3dCQUN2QixPQUFPQyxRQUFRQyxPQUFPLENBQUM7b0JBQ3pCO29CQUNBLE9BQU9MLGFBQWFNLEtBQUssQ0FBQyxJQUFJLEVBQUVKO2dCQUNsQztZQUNGO1FBQ0Y7UUFFQSxPQUFPO1lBQ0xaLE9BQU9pQixtQkFBbUIsQ0FBQyxZQUFZbkI7UUFDekM7SUFDRixHQUFHLEVBQUU7SUFFTCxPQUFPLE1BQU0seUNBQXlDO0FBQ3hEO0dBeENnQkQ7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9TYWZlTmF2aWdhdGlvbi50c3g/MjExNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZnVuY3Rpb24gU2FmZU5hdmlnYXRpb24oKSB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gT3ZlcnJpZGUgcHJvYmxlbWF0aWMgbmF2aWdhdGlvbiB0aGF0IGNhdXNlcyBmZXRjaCBmYWlsdXJlc1xuICAgIGNvbnN0IGhhbmRsZU5hdmlnYXRpb24gPSAoZTogUG9wU3RhdGVFdmVudCkgPT4ge1xuICAgICAgLy8gUHJldmVudCBkZWZhdWx0IG5hdmlnYXRpb24gdGhhdCBjYXVzZXMgUlNDIGZldGNoIGZhaWx1cmVzXG4gICAgICBpZiAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLmluY2x1ZGVzKCdyZWxvYWQ9JykpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAvLyBGb3JjZSBhIGZ1bGwgcGFnZSByZWxvYWQgaW5zdGVhZCBvZiB0cnlpbmcgdG8gZmV0Y2ggUlNDIHBheWxvYWRcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIG5hdmlnYXRpb24gc2FmZWx5XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3BvcHN0YXRlJywgaGFuZGxlTmF2aWdhdGlvbik7XG4gICAgXG4gICAgLy8gT3ZlcnJpZGUgTmV4dC5qcyByb3V0ZXIgaWYgaXQgZXhpc3RzXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICh3aW5kb3cgYXMgYW55KS5fX05FWFRfREFUQV9fKSB7XG4gICAgICAvLyBQcmV2ZW50IGF1dG9tYXRpYyBSU0MgZmV0Y2hpbmdcbiAgICAgIGNvbnN0IHJvdXRlciA9ICh3aW5kb3cgYXMgYW55KS5uZXh0Py5yb3V0ZXI7XG4gICAgICBpZiAocm91dGVyKSB7XG4gICAgICAgIGNvbnN0IG9yaWdpbmFsUHVzaCA9IHJvdXRlci5wdXNoO1xuICAgICAgICByb3V0ZXIucHVzaCA9IGZ1bmN0aW9uKC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgICAgICAgLy8gRm9yY2UgZnVsbCBwYWdlIG5hdmlnYXRpb24gaW5zdGVhZCBvZiBjbGllbnQtc2lkZSByb3V0aW5nXG4gICAgICAgICAgY29uc3QgdXJsID0gYXJnc1swXTtcbiAgICAgICAgICBpZiAodHlwZW9mIHVybCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gdXJsO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG9yaWdpbmFsUHVzaC5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvcHN0YXRlJywgaGFuZGxlTmF2aWdhdGlvbik7XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiBudWxsOyAvLyBUaGlzIGNvbXBvbmVudCBkb2Vzbid0IHJlbmRlciBhbnl0aGluZ1xufVxuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsIlNhZmVOYXZpZ2F0aW9uIiwiaGFuZGxlTmF2aWdhdGlvbiIsImUiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwiaW5jbHVkZXMiLCJwcmV2ZW50RGVmYXVsdCIsImhyZWYiLCJhZGRFdmVudExpc3RlbmVyIiwiX19ORVhUX0RBVEFfXyIsInJvdXRlciIsIm5leHQiLCJvcmlnaW5hbFB1c2giLCJwdXNoIiwiYXJncyIsInVybCIsIlByb21pc2UiLCJyZXNvbHZlIiwiYXBwbHkiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/SafeNavigation.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./context/DataContext.tsx":
/*!*********************************!*\
  !*** ./context/DataContext.tsx ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataProvider: function() { return /* binding */ DataProvider; },\n/* harmony export */   useData: function() { return /* binding */ useData; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js\");\n/* __next_internal_client_entry_do_not_use__ DataProvider,useData auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n// Create context\nconst DataContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Provider component\nfunction DataProvider(param) {\n    let { children } = param;\n    _s();\n    const [processedData, setProcessedData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [marketData, setMarketData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [transportResults, setTransportResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [warehouseResults, setWarehouseResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [inventoryResults, setInventoryResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [lockedLocations, setLockedLocations] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [financialParams, setFinancialParams] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        discountRate: 0.1,\n        analysisYears: 5,\n        currentStateBaseline: {\n            totalCost: 0,\n            totalInvestment: 0\n        },\n        futureStateProjections: {\n            totalCost: 0,\n            totalInvestment: 0,\n            annualSavings: 0\n        }\n    });\n    // Helper function to extract transportation data\n    const getTransportationData = ()=>{\n        return processedData.transportation_costs || [];\n    };\n    // Helper function to extract warehouse data\n    const getWarehouseData = ()=>{\n        return processedData.warehouse_inputs || [];\n    };\n    // Helper function to extract SKU data\n    const getSKUData = ()=>{\n        return processedData.sku_data || [];\n    };\n    // Perplexity API integration for real-time warehouse cost data\n    const fetchMarketDataFromPerplexity = async (location)=>{\n        try {\n            var _data_choices__message, _data_choices_, _data_choices;\n            const apiKey = process.env.NEXT_PUBLIC_PERPLEXITY_API_KEY || process.env.PERPLEXITY_API_KEY;\n            if (!apiKey) {\n                console.warn(\"Perplexity API key not found, using fallback data\");\n                return {};\n            }\n            const query = \"Current warehouse labor costs and industrial lease rates for \".concat(location, \":\\n\\n      Please provide specific data for:\\n      1. Straight warehouse labor rate (base hourly wage for warehouse workers)\\n      2. Fully burdened warehouse labor rate (including benefits, taxes, worker's comp, overhead - typically 1.3-1.6x base rate)\\n      3. Industrial warehouse lease rates per square foot annually\\n      4. 3PL fulfillment costs per unit/shipment\\n\\n      Focus on 2024 current market rates for distribution and fulfillment operations. Provide numerical values in USD.\");\n            const response = await fetch(\"https://api.perplexity.ai/chat/completions\", {\n                method: \"POST\",\n                headers: {\n                    Authorization: \"Bearer \".concat(apiKey),\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    model: \"llama-3.1-sonar-small-128k-online\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: \"You are a warehouse cost analytics expert. Provide current, accurate cost data for warehouse operations. Return specific numerical values for labor rates, lease costs, and 3PL pricing.\"\n                        },\n                        {\n                            role: \"user\",\n                            content: query\n                        }\n                    ],\n                    max_tokens: 1000,\n                    temperature: 0.1,\n                    top_p: 0.9,\n                    search_domain_filter: [\n                        \"perplexity.ai\"\n                    ],\n                    return_images: false,\n                    return_related_questions: false,\n                    search_recency_filter: \"month\"\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Perplexity API error: \".concat(response.status));\n            }\n            const data = await response.json();\n            const content = ((_data_choices = data.choices) === null || _data_choices === void 0 ? void 0 : (_data_choices_ = _data_choices[0]) === null || _data_choices_ === void 0 ? void 0 : (_data_choices__message = _data_choices_.message) === null || _data_choices__message === void 0 ? void 0 : _data_choices__message.content) || \"\";\n            // Parse the response to extract numerical values\n            const parseRateFromText = (text, patterns)=>{\n                for (const pattern of patterns){\n                    const regex = new RegExp(pattern, \"i\");\n                    const match = text.match(regex);\n                    if (match) {\n                        const value = parseFloat(match[1]);\n                        if (!isNaN(value)) return value;\n                    }\n                }\n                return null;\n            };\n            // Extract straight labor rate\n            const straightLaborRate = parseRateFromText(content, [\n                \"straight.*?labor.*?rate.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"base.*?wage.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"hourly.*?wage.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"warehouse.*?worker.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\"\n            ]);\n            // Extract fully burdened labor rate\n            const fullyBurdendedLaborRate = parseRateFromText(content, [\n                \"fully.*?burdened.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"total.*?labor.*?cost.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"burdened.*?rate.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"fully.*?loaded.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\"\n            ]);\n            // Extract lease rate\n            const leaseRate = parseRateFromText(content, [\n                \"lease.*?rate.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"industrial.*?lease.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"warehouse.*?rent.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"per.*?square.*?foot.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\"\n            ]);\n            // Extract 3PL costs\n            const threePLCost = parseRateFromText(content, [\n                \"3pl.*?cost.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"fulfillment.*?cost.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"per.*?unit.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\",\n                \"per.*?shipment.*?\\\\$?(\\\\d+\\\\.?\\\\d*)\"\n            ]);\n            return {\n                straightLaborRate: straightLaborRate || undefined,\n                fullyBurdendedLaborRate: fullyBurdendedLaborRate || (straightLaborRate ? straightLaborRate * 1.4 : undefined),\n                leaseRatePerSqFt: leaseRate || undefined,\n                threePLCostPerUnit: threePLCost || undefined,\n                laborCostPerHour: fullyBurdendedLaborRate || (straightLaborRate ? straightLaborRate * 1.4 : undefined)\n            };\n        } catch (error) {\n            console.error(\"Failed to fetch Perplexity data for \".concat(location, \":\"), error);\n            return {};\n        }\n    };\n    // API function to fetch market data for proposed locations\n    const fetchMarketData = async (locations)=>{\n        try {\n            console.log(\"Fetching real-time market data from Perplexity API...\");\n            // Comprehensive fallback data with both straight and fully burdened rates\n            const marketDataBase = {\n                // Major Metropolitan Areas\n                \"Chicago, IL\": {\n                    straightLaborRate: 16.5,\n                    fullyBurdendedLaborRate: 23.1,\n                    leaseRatePerSqFt: 12.25,\n                    threePLCostPerUnit: 3.8\n                },\n                \"Dallas, TX\": {\n                    straightLaborRate: 15.25,\n                    fullyBurdendedLaborRate: 21.35,\n                    leaseRatePerSqFt: 8.9,\n                    threePLCostPerUnit: 3.2\n                },\n                \"Los Angeles, CA\": {\n                    straightLaborRate: 18.5,\n                    fullyBurdendedLaborRate: 25.9,\n                    leaseRatePerSqFt: 18.5,\n                    threePLCostPerUnit: 4.6\n                },\n                \"Atlanta, GA\": {\n                    straightLaborRate: 14.8,\n                    fullyBurdendedLaborRate: 20.72,\n                    leaseRatePerSqFt: 9.8,\n                    threePLCostPerUnit: 3.4\n                },\n                \"Phoenix, AZ\": {\n                    straightLaborRate: 15.5,\n                    fullyBurdendedLaborRate: 21.7,\n                    leaseRatePerSqFt: 10.2,\n                    threePLCostPerUnit: 3.5\n                },\n                \"Memphis, TN\": {\n                    straightLaborRate: 14.25,\n                    fullyBurdendedLaborRate: 19.95,\n                    leaseRatePerSqFt: 7.6,\n                    threePLCostPerUnit: 2.9\n                },\n                \"Indianapolis, IN\": {\n                    straightLaborRate: 14.75,\n                    fullyBurdendedLaborRate: 20.65,\n                    leaseRatePerSqFt: 8.2,\n                    threePLCostPerUnit: 3.1\n                },\n                \"Columbus, OH\": {\n                    straightLaborRate: 15.25,\n                    fullyBurdendedLaborRate: 21.35,\n                    leaseRatePerSqFt: 9.4,\n                    threePLCostPerUnit: 3.25\n                },\n                \"Kansas City, MO\": {\n                    straightLaborRate: 14.9,\n                    fullyBurdendedLaborRate: 20.86,\n                    leaseRatePerSqFt: 8.7,\n                    threePLCostPerUnit: 3.0\n                },\n                \"Nashville, TN\": {\n                    straightLaborRate: 15.0,\n                    fullyBurdendedLaborRate: 21.0,\n                    leaseRatePerSqFt: 9.2,\n                    threePLCostPerUnit: 3.15\n                },\n                \"Denver, CO\": {\n                    straightLaborRate: 16.8,\n                    fullyBurdendedLaborRate: 23.52,\n                    leaseRatePerSqFt: 11.8,\n                    threePLCostPerUnit: 3.7\n                },\n                \"Seattle, WA\": {\n                    straightLaborRate: 19.5,\n                    fullyBurdendedLaborRate: 27.3,\n                    leaseRatePerSqFt: 16.4,\n                    threePLCostPerUnit: 4.3\n                },\n                \"New York, NY\": {\n                    straightLaborRate: 21.0,\n                    fullyBurdendedLaborRate: 29.4,\n                    leaseRatePerSqFt: 22.5,\n                    threePLCostPerUnit: 5.2\n                },\n                \"Miami, FL\": {\n                    straightLaborRate: 16.2,\n                    fullyBurdendedLaborRate: 22.68,\n                    leaseRatePerSqFt: 13.7,\n                    threePLCostPerUnit: 4.1\n                },\n                \"Houston, TX\": {\n                    straightLaborRate: 15.75,\n                    fullyBurdendedLaborRate: 22.05,\n                    leaseRatePerSqFt: 9.5,\n                    threePLCostPerUnit: 3.3\n                },\n                // Additional Comprehensive US Markets\n                \"Birmingham, AL\": {\n                    straightLaborRate: 13.5,\n                    fullyBurdendedLaborRate: 18.9,\n                    leaseRatePerSqFt: 6.8,\n                    threePLCostPerUnit: 2.75\n                },\n                \"Little Rock, AR\": {\n                    straightLaborRate: 13.25,\n                    fullyBurdendedLaborRate: 18.55,\n                    leaseRatePerSqFt: 6.5,\n                    threePLCostPerUnit: 2.65\n                },\n                \"Tucson, AZ\": {\n                    straightLaborRate: 14.75,\n                    fullyBurdendedLaborRate: 20.65,\n                    leaseRatePerSqFt: 8.9,\n                    threePLCostPerUnit: 3.2\n                },\n                \"Fresno, CA\": {\n                    straightLaborRate: 16.25,\n                    fullyBurdendedLaborRate: 22.75,\n                    leaseRatePerSqFt: 11.2,\n                    threePLCostPerUnit: 3.85\n                },\n                \"Sacramento, CA\": {\n                    straightLaborRate: 17.5,\n                    fullyBurdendedLaborRate: 24.5,\n                    leaseRatePerSqFt: 13.8,\n                    threePLCostPerUnit: 4.2\n                },\n                \"San Francisco, CA\": {\n                    straightLaborRate: 22.0,\n                    fullyBurdendedLaborRate: 30.8,\n                    leaseRatePerSqFt: 28.5,\n                    threePLCostPerUnit: 5.8\n                },\n                \"Colorado Springs, CO\": {\n                    straightLaborRate: 15.75,\n                    fullyBurdendedLaborRate: 22.05,\n                    leaseRatePerSqFt: 9.8,\n                    threePLCostPerUnit: 3.45\n                },\n                \"Hartford, CT\": {\n                    straightLaborRate: 18.25,\n                    fullyBurdendedLaborRate: 25.55,\n                    leaseRatePerSqFt: 14.2,\n                    threePLCostPerUnit: 4.35\n                },\n                \"Jacksonville, FL\": {\n                    straightLaborRate: 15.5,\n                    fullyBurdendedLaborRate: 21.7,\n                    leaseRatePerSqFt: 9.8,\n                    threePLCostPerUnit: 3.4\n                },\n                \"Tampa, FL\": {\n                    straightLaborRate: 15.75,\n                    fullyBurdendedLaborRate: 22.05,\n                    leaseRatePerSqFt: 10.5,\n                    threePLCostPerUnit: 3.6\n                },\n                \"Orlando, FL\": {\n                    straightLaborRate: 15.25,\n                    fullyBurdendedLaborRate: 21.35,\n                    leaseRatePerSqFt: 9.9,\n                    threePLCostPerUnit: 3.5\n                },\n                \"Savannah, GA\": {\n                    straightLaborRate: 14.5,\n                    fullyBurdendedLaborRate: 20.3,\n                    leaseRatePerSqFt: 8.4,\n                    threePLCostPerUnit: 3.15\n                },\n                \"Boise, ID\": {\n                    straightLaborRate: 14.8,\n                    fullyBurdendedLaborRate: 20.72,\n                    leaseRatePerSqFt: 8.6,\n                    threePLCostPerUnit: 3.2\n                },\n                \"Rockford, IL\": {\n                    straightLaborRate: 15.25,\n                    fullyBurdendedLaborRate: 21.35,\n                    leaseRatePerSqFt: 7.8,\n                    threePLCostPerUnit: 2.95\n                },\n                \"Fort Wayne, IN\": {\n                    straightLaborRate: 14.25,\n                    fullyBurdendedLaborRate: 19.95,\n                    leaseRatePerSqFt: 7.5,\n                    threePLCostPerUnit: 2.85\n                },\n                \"Des Moines, IA\": {\n                    straightLaborRate: 14.5,\n                    fullyBurdendedLaborRate: 20.3,\n                    leaseRatePerSqFt: 7.9,\n                    threePLCostPerUnit: 2.95\n                },\n                \"Wichita, KS\": {\n                    straightLaborRate: 13.75,\n                    fullyBurdendedLaborRate: 19.25,\n                    leaseRatePerSqFt: 7.2,\n                    threePLCostPerUnit: 2.8\n                },\n                \"Louisville, KY\": {\n                    straightLaborRate: 14.5,\n                    fullyBurdendedLaborRate: 20.3,\n                    leaseRatePerSqFt: 8.1,\n                    threePLCostPerUnit: 3.05\n                },\n                \"New Orleans, LA\": {\n                    straightLaborRate: 14.25,\n                    fullyBurdendedLaborRate: 19.95,\n                    leaseRatePerSqFt: 8.5,\n                    threePLCostPerUnit: 3.2\n                },\n                \"Baton Rouge, LA\": {\n                    straightLaborRate: 13.75,\n                    fullyBurdendedLaborRate: 19.25,\n                    leaseRatePerSqFt: 7.8,\n                    threePLCostPerUnit: 2.95\n                },\n                \"Portland, ME\": {\n                    straightLaborRate: 16.5,\n                    fullyBurdendedLaborRate: 23.1,\n                    leaseRatePerSqFt: 11.2,\n                    threePLCostPerUnit: 3.85\n                },\n                \"Baltimore, MD\": {\n                    straightLaborRate: 17.25,\n                    fullyBurdendedLaborRate: 24.15,\n                    leaseRatePerSqFt: 12.8,\n                    threePLCostPerUnit: 4.05\n                },\n                \"Boston, MA\": {\n                    straightLaborRate: 19.75,\n                    fullyBurdendedLaborRate: 27.65,\n                    leaseRatePerSqFt: 19.5,\n                    threePLCostPerUnit: 4.95\n                },\n                \"Detroit, MI\": {\n                    straightLaborRate: 16.25,\n                    fullyBurdendedLaborRate: 22.75,\n                    leaseRatePerSqFt: 9.2,\n                    threePLCostPerUnit: 3.35\n                },\n                \"Grand Rapids, MI\": {\n                    straightLaborRate: 15.5,\n                    fullyBurdendedLaborRate: 21.7,\n                    leaseRatePerSqFt: 8.4,\n                    threePLCostPerUnit: 3.1\n                },\n                \"Minneapolis, MN\": {\n                    straightLaborRate: 17.0,\n                    fullyBurdendedLaborRate: 23.8,\n                    leaseRatePerSqFt: 10.8,\n                    threePLCostPerUnit: 3.65\n                },\n                \"Jackson, MS\": {\n                    straightLaborRate: 12.75,\n                    fullyBurdendedLaborRate: 17.85,\n                    leaseRatePerSqFt: 6.2,\n                    threePLCostPerUnit: 2.55\n                },\n                \"St. Louis, MO\": {\n                    straightLaborRate: 15.25,\n                    fullyBurdendedLaborRate: 21.35,\n                    leaseRatePerSqFt: 8.6,\n                    threePLCostPerUnit: 3.15\n                },\n                \"Billings, MT\": {\n                    straightLaborRate: 14.5,\n                    fullyBurdendedLaborRate: 20.3,\n                    leaseRatePerSqFt: 7.8,\n                    threePLCostPerUnit: 3.05\n                },\n                \"Omaha, NE\": {\n                    straightLaborRate: 14.75,\n                    fullyBurdendedLaborRate: 20.65,\n                    leaseRatePerSqFt: 8.2,\n                    threePLCostPerUnit: 3.0\n                },\n                \"Las Vegas, NV\": {\n                    straightLaborRate: 16.5,\n                    fullyBurdendedLaborRate: 23.1,\n                    leaseRatePerSqFt: 11.5,\n                    threePLCostPerUnit: 3.75\n                },\n                \"Reno, NV\": {\n                    straightLaborRate: 16.25,\n                    fullyBurdendedLaborRate: 22.75,\n                    leaseRatePerSqFt: 10.8,\n                    threePLCostPerUnit: 3.6\n                },\n                \"Manchester, NH\": {\n                    straightLaborRate: 17.0,\n                    fullyBurdendedLaborRate: 23.8,\n                    leaseRatePerSqFt: 11.8,\n                    threePLCostPerUnit: 3.9\n                },\n                \"Newark, NJ\": {\n                    straightLaborRate: 18.75,\n                    fullyBurdendedLaborRate: 26.25,\n                    leaseRatePerSqFt: 16.2,\n                    threePLCostPerUnit: 4.65\n                },\n                \"Albuquerque, NM\": {\n                    straightLaborRate: 14.25,\n                    fullyBurdendedLaborRate: 19.95,\n                    leaseRatePerSqFt: 8.4,\n                    threePLCostPerUnit: 3.15\n                },\n                \"Albany, NY\": {\n                    straightLaborRate: 17.5,\n                    fullyBurdendedLaborRate: 24.5,\n                    leaseRatePerSqFt: 12.2,\n                    threePLCostPerUnit: 3.95\n                },\n                \"Buffalo, NY\": {\n                    straightLaborRate: 16.5,\n                    fullyBurdendedLaborRate: 23.1,\n                    leaseRatePerSqFt: 9.8,\n                    threePLCostPerUnit: 3.45\n                },\n                \"Charlotte, NC\": {\n                    straightLaborRate: 15.25,\n                    fullyBurdendedLaborRate: 21.35,\n                    leaseRatePerSqFt: 9.6,\n                    threePLCostPerUnit: 3.35\n                },\n                \"Raleigh, NC\": {\n                    straightLaborRate: 15.5,\n                    fullyBurdendedLaborRate: 21.7,\n                    leaseRatePerSqFt: 9.8,\n                    threePLCostPerUnit: 3.4\n                },\n                \"Fargo, ND\": {\n                    straightLaborRate: 15.0,\n                    fullyBurdendedLaborRate: 21.0,\n                    leaseRatePerSqFt: 7.6,\n                    threePLCostPerUnit: 2.9\n                },\n                \"Cleveland, OH\": {\n                    straightLaborRate: 15.75,\n                    fullyBurdendedLaborRate: 22.05,\n                    leaseRatePerSqFt: 8.8,\n                    threePLCostPerUnit: 3.2\n                },\n                \"Cincinnati, OH\": {\n                    straightLaborRate: 15.25,\n                    fullyBurdendedLaborRate: 21.35,\n                    leaseRatePerSqFt: 8.4,\n                    threePLCostPerUnit: 3.1\n                },\n                \"Toledo, OH\": {\n                    straightLaborRate: 14.75,\n                    fullyBurdendedLaborRate: 20.65,\n                    leaseRatePerSqFt: 7.8,\n                    threePLCostPerUnit: 2.95\n                },\n                \"Oklahoma City, OK\": {\n                    straightLaborRate: 13.75,\n                    fullyBurdendedLaborRate: 19.25,\n                    leaseRatePerSqFt: 7.4,\n                    threePLCostPerUnit: 2.85\n                },\n                \"Tulsa, OK\": {\n                    straightLaborRate: 13.5,\n                    fullyBurdendedLaborRate: 18.9,\n                    leaseRatePerSqFt: 7.2,\n                    threePLCostPerUnit: 2.8\n                },\n                \"Portland, OR\": {\n                    straightLaborRate: 18.25,\n                    fullyBurdendedLaborRate: 25.55,\n                    leaseRatePerSqFt: 13.6,\n                    threePLCostPerUnit: 4.15\n                },\n                \"Philadelphia, PA\": {\n                    straightLaborRate: 17.75,\n                    fullyBurdendedLaborRate: 24.85,\n                    leaseRatePerSqFt: 13.2,\n                    threePLCostPerUnit: 4.1\n                },\n                \"Pittsburgh, PA\": {\n                    straightLaborRate: 16.5,\n                    fullyBurdendedLaborRate: 23.1,\n                    leaseRatePerSqFt: 9.6,\n                    threePLCostPerUnit: 3.4\n                },\n                \"Providence, RI\": {\n                    straightLaborRate: 17.25,\n                    fullyBurdendedLaborRate: 24.15,\n                    leaseRatePerSqFt: 12.4,\n                    threePLCostPerUnit: 3.95\n                },\n                \"Charleston, SC\": {\n                    straightLaborRate: 14.25,\n                    fullyBurdendedLaborRate: 19.95,\n                    leaseRatePerSqFt: 8.6,\n                    threePLCostPerUnit: 3.2\n                },\n                \"Columbia, SC\": {\n                    straightLaborRate: 13.75,\n                    fullyBurdendedLaborRate: 19.25,\n                    leaseRatePerSqFt: 7.8,\n                    threePLCostPerUnit: 2.95\n                },\n                \"Sioux Falls, SD\": {\n                    straightLaborRate: 14.25,\n                    fullyBurdendedLaborRate: 19.95,\n                    leaseRatePerSqFt: 7.4,\n                    threePLCostPerUnit: 2.85\n                },\n                \"Knoxville, TN\": {\n                    straightLaborRate: 14.0,\n                    fullyBurdendedLaborRate: 19.6,\n                    leaseRatePerSqFt: 7.8,\n                    threePLCostPerUnit: 2.95\n                },\n                \"Chattanooga, TN\": {\n                    straightLaborRate: 13.75,\n                    fullyBurdendedLaborRate: 19.25,\n                    leaseRatePerSqFt: 7.6,\n                    threePLCostPerUnit: 2.9\n                },\n                \"San Antonio, TX\": {\n                    straightLaborRate: 14.5,\n                    fullyBurdendedLaborRate: 20.3,\n                    leaseRatePerSqFt: 8.2,\n                    threePLCostPerUnit: 3.05\n                },\n                \"Austin, TX\": {\n                    straightLaborRate: 16.0,\n                    fullyBurdendedLaborRate: 22.4,\n                    leaseRatePerSqFt: 11.4,\n                    threePLCostPerUnit: 3.75\n                },\n                \"Fort Worth, TX\": {\n                    straightLaborRate: 15.0,\n                    fullyBurdendedLaborRate: 21.0,\n                    leaseRatePerSqFt: 8.6,\n                    threePLCostPerUnit: 3.15\n                },\n                \"El Paso, TX\": {\n                    straightLaborRate: 13.25,\n                    fullyBurdendedLaborRate: 18.55,\n                    leaseRatePerSqFt: 7.2,\n                    threePLCostPerUnit: 2.8\n                },\n                \"Salt Lake City, UT\": {\n                    straightLaborRate: 15.75,\n                    fullyBurdendedLaborRate: 22.05,\n                    leaseRatePerSqFt: 9.8,\n                    threePLCostPerUnit: 3.45\n                },\n                \"Burlington, VT\": {\n                    straightLaborRate: 17.0,\n                    fullyBurdendedLaborRate: 23.8,\n                    leaseRatePerSqFt: 11.6,\n                    threePLCostPerUnit: 3.85\n                },\n                \"Virginia Beach, VA\": {\n                    straightLaborRate: 15.5,\n                    fullyBurdendedLaborRate: 21.7,\n                    leaseRatePerSqFt: 9.4,\n                    threePLCostPerUnit: 3.35\n                },\n                \"Richmond, VA\": {\n                    straightLaborRate: 15.25,\n                    fullyBurdendedLaborRate: 21.35,\n                    leaseRatePerSqFt: 9.2,\n                    threePLCostPerUnit: 3.3\n                },\n                \"Norfolk, VA\": {\n                    straightLaborRate: 15.0,\n                    fullyBurdendedLaborRate: 21.0,\n                    leaseRatePerSqFt: 8.8,\n                    threePLCostPerUnit: 3.25\n                },\n                \"Spokane, WA\": {\n                    straightLaborRate: 16.75,\n                    fullyBurdendedLaborRate: 23.45,\n                    leaseRatePerSqFt: 10.2,\n                    threePLCostPerUnit: 3.55\n                },\n                \"Charleston, WV\": {\n                    straightLaborRate: 14.0,\n                    fullyBurdendedLaborRate: 19.6,\n                    leaseRatePerSqFt: 7.4,\n                    threePLCostPerUnit: 2.85\n                },\n                \"Milwaukee, WI\": {\n                    straightLaborRate: 16.0,\n                    fullyBurdendedLaborRate: 22.4,\n                    leaseRatePerSqFt: 9.4,\n                    threePLCostPerUnit: 3.35\n                },\n                \"Green Bay, WI\": {\n                    straightLaborRate: 15.25,\n                    fullyBurdendedLaborRate: 21.35,\n                    leaseRatePerSqFt: 8.2,\n                    threePLCostPerUnit: 3.05\n                },\n                \"Cheyenne, WY\": {\n                    straightLaborRate: 14.5,\n                    fullyBurdendedLaborRate: 20.3,\n                    leaseRatePerSqFt: 7.6,\n                    threePLCostPerUnit: 2.95\n                }\n            };\n            // Fetch data from Perplexity API for each location in parallel\n            const perplexityPromises = locations.map((location)=>fetchMarketDataFromPerplexity(location).catch((error)=>{\n                    console.warn(\"Perplexity API failed for \".concat(location, \":\"), error);\n                    return {};\n                }));\n            // Wait for all API calls to complete (with timeout)\n            const perplexityResults = await Promise.allSettled(perplexityPromises.map((promise)=>Promise.race([\n                    promise,\n                    new Promise((_, reject)=>setTimeout(()=>reject(new Error(\"Timeout\")), 10000))\n                ])));\n            const marketData = locations.map((location, index)=>{\n                const state = location.split(\", \")[1] || \"\";\n                const baseData = marketDataBase[location];\n                // Get Perplexity data if available\n                const perplexityResult = perplexityResults[index];\n                const perplexityData = perplexityResult.status === \"fulfilled\" ? perplexityResult.value : {};\n                // Determine final values (Perplexity API first, then fallback, then regional estimates)\n                const typedPerplexityData = perplexityData;\n                let straightLaborRate = (typedPerplexityData === null || typedPerplexityData === void 0 ? void 0 : typedPerplexityData.straightLaborRate) || (baseData === null || baseData === void 0 ? void 0 : baseData.straightLaborRate);\n                let fullyBurdendedLaborRate = (typedPerplexityData === null || typedPerplexityData === void 0 ? void 0 : typedPerplexityData.fullyBurdendedLaborRate) || (baseData === null || baseData === void 0 ? void 0 : baseData.fullyBurdendedLaborRate);\n                let leaseRate = (typedPerplexityData === null || typedPerplexityData === void 0 ? void 0 : typedPerplexityData.leaseRatePerSqFt) || (baseData === null || baseData === void 0 ? void 0 : baseData.leaseRatePerSqFt);\n                let threePLCost = (typedPerplexityData === null || typedPerplexityData === void 0 ? void 0 : typedPerplexityData.threePLCostPerUnit) || (baseData === null || baseData === void 0 ? void 0 : baseData.threePLCostPerUnit);\n                // If no data available, generate realistic regional estimates\n                if (!straightLaborRate || !fullyBurdendedLaborRate || !leaseRate || !threePLCost) {\n                    const baseStraightRate = 15;\n                    const baseLeaseRate = 8;\n                    const baseThreePLCost = 2.5;\n                    // Apply regional adjustments\n                    let regionalMultiplier = 1.0;\n                    if ([\n                        \"CA\",\n                        \"WA\",\n                        \"OR\"\n                    ].includes(state)) {\n                        regionalMultiplier = 1.25; // West Coast premium\n                    } else if ([\n                        \"NY\",\n                        \"NJ\",\n                        \"CT\",\n                        \"MA\"\n                    ].includes(state)) {\n                        regionalMultiplier = 1.3; // Northeast premium\n                    } else if ([\n                        \"AL\",\n                        \"MS\",\n                        \"SC\",\n                        \"AR\",\n                        \"KY\"\n                    ].includes(state)) {\n                        regionalMultiplier = 0.85; // Southeast discount\n                    } else if ([\n                        \"OH\",\n                        \"IN\",\n                        \"MI\",\n                        \"WI\",\n                        \"IA\"\n                    ].includes(state)) {\n                        regionalMultiplier = 0.95; // Midwest moderate\n                    }\n                    straightLaborRate = straightLaborRate || Math.round(baseStraightRate * regionalMultiplier * 100) / 100;\n                    fullyBurdendedLaborRate = fullyBurdendedLaborRate || Math.round(straightLaborRate * 1.4 * 100) / 100;\n                    leaseRate = leaseRate || Math.round(baseLeaseRate * regionalMultiplier * 1.2 * 100) / 100;\n                    threePLCost = threePLCost || Math.round(baseThreePLCost * regionalMultiplier * 100) / 100;\n                }\n                return {\n                    location,\n                    state,\n                    straightLaborRate: straightLaborRate,\n                    fullyBurdendedLaborRate: fullyBurdendedLaborRate,\n                    leaseRatePerSqFt: leaseRate,\n                    threePLCostPerUnit: threePLCost,\n                    laborCostPerHour: fullyBurdendedLaborRate,\n                    lastUpdated: new Date().toISOString()\n                };\n            });\n            setMarketData(marketData);\n            const perplexitySuccessCount = perplexityResults.filter((r)=>r.status === \"fulfilled\").length;\n            console.log(\"Market data fetched for \".concat(locations.length, \" locations. Perplexity API: \").concat(perplexitySuccessCount, \"/\").concat(locations.length, \" successful.\"));\n        } catch (error) {\n            console.error(\"Failed to fetch market data:\", error);\n        }\n    };\n    // Financial metrics calculation\n    const calculateFinancialMetrics = ()=>{\n        const { currentStateBaseline, futureStateProjections, discountRate, analysisYears } = financialParams;\n        // Calculate annual cash flows\n        const initialInvestment = futureStateProjections.totalInvestment - currentStateBaseline.totalInvestment;\n        const annualSavings = futureStateProjections.annualSavings;\n        // NPV calculation\n        let npv = -initialInvestment;\n        for(let year = 1; year <= analysisYears; year++){\n            npv += annualSavings / Math.pow(1 + discountRate, year);\n        }\n        // IRR calculation (simplified Newton-Raphson method)\n        let irr = 0.1; // Starting guess\n        for(let i = 0; i < 100; i++){\n            let f = -initialInvestment;\n            let df = 0;\n            for(let year = 1; year <= analysisYears; year++){\n                const factor = Math.pow(1 + irr, year);\n                f += annualSavings / factor;\n                df -= year * annualSavings / (factor * (1 + irr));\n            }\n            const newIrr = irr - f / df;\n            if (Math.abs(newIrr - irr) < 0.0001) break;\n            irr = newIrr;\n        }\n        // ROIC calculation\n        const averageInvestedCapital = initialInvestment / 2;\n        const roic = averageInvestedCapital > 0 ? annualSavings / averageInvestedCapital : 0;\n        // Payback period\n        const paybackPeriod = initialInvestment > 0 ? initialInvestment / annualSavings : 0;\n        return {\n            roic: roic * 100,\n            npv: npv,\n            irr: irr * 100,\n            paybackPeriod\n        };\n    };\n    const value = {\n        processedData,\n        setProcessedData,\n        marketData,\n        setMarketData,\n        financialParams,\n        setFinancialParams,\n        transportResults,\n        setTransportResults,\n        warehouseResults,\n        setWarehouseResults,\n        inventoryResults,\n        setInventoryResults,\n        lockedLocations,\n        setLockedLocations,\n        getTransportationData,\n        getWarehouseData,\n        getSKUData,\n        fetchMarketData,\n        calculateFinancialMetrics\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DataContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/app/code/context/DataContext.tsx\",\n        lineNumber: 949,\n        columnNumber: 10\n    }, this);\n}\n_s(DataProvider, \"AwC9TY1V3lSsHwHC7BsbLkN9heI=\");\n_c = DataProvider;\n// Custom hook to use the data context\nfunction useData() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(DataContext);\n    if (context === undefined) {\n        throw new Error(\"useData must be used within a DataProvider\");\n    }\n    return context;\n}\n_s1(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbnRleHQvRGF0YUNvbnRleHQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUU4RTtBQXNGOUUsaUJBQWlCO0FBQ2pCLE1BQU1JLDRCQUFjSCxvREFBYUEsQ0FBOEJJO0FBRS9ELHFCQUFxQjtBQUNkLFNBQVNDLGFBQWEsS0FBcUM7UUFBckMsRUFBRUMsUUFBUSxFQUEyQixHQUFyQzs7SUFDM0IsTUFBTSxDQUFDQyxlQUFlQyxpQkFBaUIsR0FBR04sK0NBQVFBLENBQWdCLENBQUM7SUFDbkUsTUFBTSxDQUFDTyxZQUFZQyxjQUFjLEdBQUdSLCtDQUFRQSxDQUFlLEVBQUU7SUFDN0QsTUFBTSxDQUFDUyxrQkFBa0JDLG9CQUFvQixHQUFHViwrQ0FBUUEsQ0FBTTtJQUM5RCxNQUFNLENBQUNXLGtCQUFrQkMsb0JBQW9CLEdBQUdaLCtDQUFRQSxDQUFNO0lBQzlELE1BQU0sQ0FBQ2Esa0JBQWtCQyxvQkFBb0IsR0FBR2QsK0NBQVFBLENBQU07SUFDOUQsTUFBTSxDQUFDZSxpQkFBaUJDLG1CQUFtQixHQUFHaEIsK0NBQVFBLENBQVcsRUFBRTtJQUVuRSxNQUFNLENBQUNpQixpQkFBaUJDLG1CQUFtQixHQUFHbEIsK0NBQVFBLENBQXNCO1FBQzFFbUIsY0FBYztRQUNkQyxlQUFlO1FBQ2ZDLHNCQUFzQjtZQUNwQkMsV0FBVztZQUNYQyxpQkFBaUI7UUFDbkI7UUFDQUMsd0JBQXdCO1lBQ3RCRixXQUFXO1lBQ1hDLGlCQUFpQjtZQUNqQkUsZUFBZTtRQUNqQjtJQUNGO0lBRUEsaURBQWlEO0lBQ2pELE1BQU1DLHdCQUF3QjtRQUM1QixPQUFPckIsY0FBY3NCLG9CQUFvQixJQUFJLEVBQUU7SUFDakQ7SUFFQSw0Q0FBNEM7SUFDNUMsTUFBTUMsbUJBQW1CO1FBQ3ZCLE9BQU92QixjQUFjd0IsZ0JBQWdCLElBQUksRUFBRTtJQUM3QztJQUVBLHNDQUFzQztJQUN0QyxNQUFNQyxhQUFhO1FBQ2pCLE9BQU96QixjQUFjMEIs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QUNBQztRQUNBVDtRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBVTtRQUNBRTtRQUNBRTtRQUNBd0Q7UUFDQW9DO0lBQ0Y7SUFFQSxxQkFBTyw4REFBQ3pILFlBQVl3SSxRQUFRO1FBQUM5RCxPQUFPQTtrQkFBUXZFOzs7Ozs7QUFDOUM7R0F6MUJnQkQ7S0FBQUE7QUEyMUJoQixzQ0FBc0M7QUFDL0IsU0FBU3VJOztJQUNkLE1BQU1DLFVBQVU1SSxpREFBVUEsQ0FBQ0U7SUFDM0IsSUFBSTBJLFlBQVl6SSxXQUFXO1FBQ3pCLE1BQU0sSUFBSTZELE1BQU07SUFDbEI7SUFDQSxPQUFPNEU7QUFDVDtJQU5nQkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29udGV4dC9EYXRhQ29udGV4dC50c3g/ZTQ5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IFJlYWN0LCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZVN0YXRlLCBSZWFjdE5vZGUgfSBmcm9tIFwicmVhY3RcIjtcblxuLy8gRGF0YSBzdHJ1Y3R1cmUgZm9yIHByb2Nlc3NlZCBkYXRhIGZyb20gRGF0YSBQcm9jZXNzb3JcbmludGVyZmFjZSBQcm9jZXNzZWREYXRhIHtcbiAgdHJhbnNwb3J0YXRpb25fY29zdHM/OiBhbnlbXTtcbiAgd2FyZWhvdXNlX2lucHV0cz86IGFueVtdO1xuICBza3VfZGF0YT86IGFueVtdO1xuICBzYWxlc19vcmRlcnM/OiBhbnlbXTtcbiAgbmV0d29ya19kYXRhPzogYW55W107XG4gIGZvcmVjYXN0X2RhdGE/OiBhbnlbXTtcbiAgZGF0YVF1YWxpdHk/OiBhbnk7XG4gIGNvbnZlcnNpb25SZXN1bHRzPzogYW55O1xuICBsYXN0UHJvY2Vzc2VkPzogc3RyaW5nO1xuICBkYXRhVHlwZT86IHN0cmluZztcbn1cblxuLy8gTWFya2V0IGRhdGEgZm9yIGZpbmFuY2lhbCBhbmFseXNpc1xuaW50ZXJmYWNlIE1hcmtldERhdGEge1xuICBsb2NhdGlvbjogc3RyaW5nO1xuICBzdGF0ZTogc3RyaW5nO1xuICBzdHJhaWdodExhYm9yUmF0ZTogbnVtYmVyOyAvLyBCYXNlIGhvdXJseSB3YWdlXG4gIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiBudW1iZXI7IC8vIEluY2x1ZGluZyBiZW5lZml0cywgdGF4ZXMsIG92ZXJoZWFkXG4gIGxlYXNlUmF0ZVBlclNxRnQ6IG51bWJlcjtcbiAgdGhyZWVQTENvc3RQZXJVbml0OiBudW1iZXI7XG4gIGxhYm9yQ29zdFBlckhvdXI6IG51bWJlcjsgLy8gTGVnYWN5IGZpZWxkIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG4gIGxhc3RVcGRhdGVkOiBzdHJpbmc7XG59XG5cbi8vIEZpbmFuY2lhbCBhbmFseXNpcyBwYXJhbWV0ZXJzXG5pbnRlcmZhY2UgRmluYW5jaWFsUGFyYW1ldGVycyB7XG4gIGRpc2NvdW50UmF0ZTogbnVtYmVyO1xuICBhbmFseXNpc1llYXJzOiBudW1iZXI7XG4gIGN1cnJlbnRTdGF0ZUJhc2VsaW5lOiB7XG4gICAgdG90YWxDb3N0OiBudW1iZXI7XG4gICAgdG90YWxJbnZlc3RtZW50OiBudW1iZXI7XG4gIH07XG4gIGZ1dHVyZVN0YXRlUHJvamVjdGlvbnM6IHtcbiAgICB0b3RhbENvc3Q6IG51bWJlcjtcbiAgICB0b3RhbEludmVzdG1lbnQ6IG51bWJlcjtcbiAgICBhbm51YWxTYXZpbmdzOiBudW1iZXI7XG4gIH07XG59XG5cbi8vIENvbnRleHQgaW50ZXJmYWNlXG5pbnRlcmZhY2UgRGF0YUNvbnRleHRUeXBlIHtcbiAgLy8gUHJvY2Vzc2VkIGRhdGEgZnJvbSBEYXRhIFByb2Nlc3NvclxuICBwcm9jZXNzZWREYXRhOiBQcm9jZXNzZWREYXRhO1xuICBzZXRQcm9jZXNzZWREYXRhOiAoZGF0YTogUHJvY2Vzc2VkRGF0YSkgPT4gdm9pZDtcblxuICAvLyBNYXJrZXQgZGF0YSBmb3IgbG9jYXRpb25zXG4gIG1hcmtldERhdGE6IE1hcmtldERhdGFbXTtcbiAgc2V0TWFya2V0RGF0YTogKGRhdGE6IE1hcmtldERhdGFbXSkgPT4gdm9pZDtcblxuICAvLyBGaW5hbmNpYWwgcGFyYW1ldGVyc1xuICBmaW5hbmNpYWxQYXJhbXM6IEZpbmFuY2lhbFBhcmFtZXRlcnM7XG4gIHNldEZpbmFuY2lhbFBhcmFtczogKHBhcmFtczogRmluYW5jaWFsUGFyYW1ldGVycykgPT4gdm9pZDtcblxuICAvLyBPcHRpbWl6YXRpb24gcmVzdWx0c1xuICB0cmFuc3BvcnRSZXN1bHRzOiBhbnk7XG4gIHNldFRyYW5zcG9ydFJlc3VsdHM6IChyZXN1bHRzOiBhbnkpID0+IHZvaWQ7XG5cbiAgd2FyZWhvdXNlUmVzdWx0czogYW55O1xuICBzZXRXYXJlaG91c2VSZXN1bHRzOiAocmVzdWx0czogYW55KSA9PiB2b2lkO1xuXG4gIGludmVudG9yeVJlc3VsdHM6IGFueTtcbiAgc2V0SW52ZW50b3J5UmVzdWx0czogKHJlc3VsdHM6IGFueSkgPT4gdm9pZDtcblxuICAvLyBMb2NhdGlvbiBsb2NraW5nIGZvciBzY2VuYXJpb3NcbiAgbG9ja2VkTG9jYXRpb25zOiBzdHJpbmdbXTtcbiAgc2V0TG9ja2VkTG9jYXRpb25zOiAobG9jYXRpb25zOiBzdHJpbmdbXSkgPT4gdm9pZDtcblxuICAvLyBIZWxwZXIgZnVuY3Rpb25zXG4gIGdldFRyYW5zcG9ydGF0aW9uRGF0YTogKCkgPT4gYW55W107XG4gIGdldFdhcmVob3VzZURhdGE6ICgpID0+IGFueVtdO1xuICBnZXRTS1VEYXRhOiAoKSA9PiBhbnlbXTtcblxuICAvLyBBUEkgZnVuY3Rpb25zXG4gIGZldGNoTWFya2V0RGF0YTogKGxvY2F0aW9uczogc3RyaW5nW10pID0+IFByb21pc2U8dm9pZD47XG4gIGNhbGN1bGF0ZUZpbmFuY2lhbE1ldHJpY3M6ICgpID0+IHtcbiAgICByb2ljOiBudW1iZXI7XG4gICAgbnB2OiBudW1iZXI7XG4gICAgaXJyOiBudW1iZXI7XG4gICAgcGF5YmFja1BlcmlvZDogbnVtYmVyO1xuICB9O1xufVxuXG4vLyBDcmVhdGUgY29udGV4dFxuY29uc3QgRGF0YUNvbnRleHQgPSBjcmVhdGVDb250ZXh0PERhdGFDb250ZXh0VHlwZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcblxuLy8gUHJvdmlkZXIgY29tcG9uZW50XG5leHBvcnQgZnVuY3Rpb24gRGF0YVByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3ROb2RlIH0pIHtcbiAgY29uc3QgW3Byb2Nlc3NlZERhdGEsIHNldFByb2Nlc3NlZERhdGFdID0gdXNlU3RhdGU8UHJvY2Vzc2VkRGF0YT4oe30pO1xuICBjb25zdCBbbWFya2V0RGF0YSwgc2V0TWFya2V0RGF0YV0gPSB1c2VTdGF0ZTxNYXJrZXREYXRhW10+KFtdKTtcbiAgY29uc3QgW3RyYW5zcG9ydFJlc3VsdHMsIHNldFRyYW5zcG9ydFJlc3VsdHNdID0gdXNlU3RhdGU8YW55PihudWxsKTtcbiAgY29uc3QgW3dhcmVob3VzZVJlc3VsdHMsIHNldFdhcmVob3VzZVJlc3VsdHNdID0gdXNlU3RhdGU8YW55PihudWxsKTtcbiAgY29uc3QgW2ludmVudG9yeVJlc3VsdHMsIHNldEludmVudG9yeVJlc3VsdHNdID0gdXNlU3RhdGU8YW55PihudWxsKTtcbiAgY29uc3QgW2xvY2tlZExvY2F0aW9ucywgc2V0TG9ja2VkTG9jYXRpb25zXSA9IHVzZVN0YXRlPHN0cmluZ1tdPihbXSk7XG5cbiAgY29uc3QgW2ZpbmFuY2lhbFBhcmFtcywgc2V0RmluYW5jaWFsUGFyYW1zXSA9IHVzZVN0YXRlPEZpbmFuY2lhbFBhcmFtZXRlcnM+KHtcbiAgICBkaXNjb3VudFJhdGU6IDAuMSwgLy8gMTAlIGRlZmF1bHQgZGlzY291bnQgcmF0ZVxuICAgIGFuYWx5c2lzWWVhcnM6IDUsXG4gICAgY3VycmVudFN0YXRlQmFzZWxpbmU6IHtcbiAgICAgIHRvdGFsQ29zdDogMCxcbiAgICAgIHRvdGFsSW52ZXN0bWVudDogMCxcbiAgICB9LFxuICAgIGZ1dHVyZVN0YXRlUHJvamVjdGlvbnM6IHtcbiAgICAgIHRvdGFsQ29zdDogMCxcbiAgICAgIHRvdGFsSW52ZXN0bWVudDogMCxcbiAgICAgIGFubnVhbFNhdmluZ3M6IDAsXG4gICAgfSxcbiAgfSk7XG5cbiAgLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGV4dHJhY3QgdHJhbnNwb3J0YXRpb24gZGF0YVxuICBjb25zdCBnZXRUcmFuc3BvcnRhdGlvbkRhdGEgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHByb2Nlc3NlZERhdGEudHJhbnNwb3J0YXRpb25fY29zdHMgfHwgW107XG4gIH07XG5cbiAgLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGV4dHJhY3Qgd2FyZWhvdXNlIGRhdGFcbiAgY29uc3QgZ2V0V2FyZWhvdXNlRGF0YSA9ICgpID0+IHtcbiAgICByZXR1cm4gcHJvY2Vzc2VkRGF0YS53YXJlaG91c2VfaW5wdXRzIHx8IFtdO1xuICB9O1xuXG4gIC8vIEhlbHBlciBmdW5jdGlvbiB0byBleHRyYWN0IFNLVSBkYXRhXG4gIGNvbnN0IGdldFNLVURhdGEgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHByb2Nlc3NlZERhdGEuc2t1X2RhdGEgfHwgW107XG4gIH07XG5cbiAgLy8gUGVycGxleGl0eSBBUEkgaW50ZWdyYXRpb24gZm9yIHJlYWwtdGltZSB3YXJlaG91c2UgY29zdCBkYXRhXG4gIGNvbnN0IGZldGNoTWFya2V0RGF0YUZyb21QZXJwbGV4aXR5ID0gYXN5bmMgKFxuICAgIGxvY2F0aW9uOiBzdHJpbmcsXG4gICk6IFByb21pc2U8UGFydGlhbDxNYXJrZXREYXRhPj4gPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBhcGlLZXkgPVxuICAgICAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19QRVJQTEVYSVRZX0FQSV9LRVkgfHxcbiAgICAgICAgcHJvY2Vzcy5lbnYuUEVSUExFWElUWV9BUElfS0VZO1xuXG4gICAgICBpZiAoIWFwaUtleSkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJQZXJwbGV4aXR5IEFQSSBrZXkgbm90IGZvdW5kLCB1c2luZyBmYWxsYmFjayBkYXRhXCIpO1xuICAgICAgICByZXR1cm4ge307XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHF1ZXJ5ID0gYEN1cnJlbnQgd2FyZWhvdXNlIGxhYm9yIGNvc3RzIGFuZCBpbmR1c3RyaWFsIGxlYXNlIHJhdGVzIGZvciAke2xvY2F0aW9ufTpcblxuICAgICAgUGxlYXNlIHByb3ZpZGUgc3BlY2lmaWMgZGF0YSBmb3I6XG4gICAgICAxLiBTdHJhaWdodCB3YXJlaG91c2UgbGFib3IgcmF0ZSAoYmFzZSBob3VybHkgd2FnZSBmb3Igd2FyZWhvdXNlIHdvcmtlcnMpXG4gICAgICAyLiBGdWxseSBidXJkZW5lZCB3YXJlaG91c2UgbGFib3IgcmF0ZSAoaW5jbHVkaW5nIGJlbmVmaXRzLCB0YXhlcywgd29ya2VyJ3MgY29tcCwgb3ZlcmhlYWQgLSB0eXBpY2FsbHkgMS4zLTEuNnggYmFzZSByYXRlKVxuICAgICAgMy4gSW5kdXN0cmlhbCB3YXJlaG91c2UgbGVhc2UgcmF0ZXMgcGVyIHNxdWFyZSBmb290IGFubnVhbGx5XG4gICAgICA0LiAzUEwgZnVsZmlsbG1lbnQgY29zdHMgcGVyIHVuaXQvc2hpcG1lbnRcblxuICAgICAgRm9jdXMgb24gMjAyNCBjdXJyZW50IG1hcmtldCByYXRlcyBmb3IgZGlzdHJpYnV0aW9uIGFuZCBmdWxmaWxsbWVudCBvcGVyYXRpb25zLiBQcm92aWRlIG51bWVyaWNhbCB2YWx1ZXMgaW4gVVNELmA7XG5cbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG4gICAgICAgIFwiaHR0cHM6Ly9hcGkucGVycGxleGl0eS5haS9jaGF0L2NvbXBsZXRpb25zXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHthcGlLZXl9YCxcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgbW9kZWw6IFwibGxhbWEtMy4xLXNvbmFyLXNtYWxsLTEyOGstb25saW5lXCIsXG4gICAgICAgICAgICBtZXNzYWdlczogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcm9sZTogXCJzeXN0ZW1cIixcbiAgICAgICAgICAgICAgICBjb250ZW50OlxuICAgICAgICAgICAgICAgICAgXCJZb3UgYXJlIGEgd2FyZWhvdXNlIGNvc3QgYW5hbHl0aWNzIGV4cGVydC4gUHJvdmlkZSBjdXJyZW50LCBhY2N1cmF0ZSBjb3N0IGRhdGEgZm9yIHdhcmVob3VzZSBvcGVyYXRpb25zLiBSZXR1cm4gc3BlY2lmaWMgbnVtZXJpY2FsIHZhbHVlcyBmb3IgbGFib3IgcmF0ZXMsIGxlYXNlIGNvc3RzLCBhbmQgM1BMIHByaWNpbmcuXCIsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICByb2xlOiBcInVzZXJcIixcbiAgICAgICAgICAgICAgICBjb250ZW50OiBxdWVyeSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBtYXhfdG9rZW5zOiAxMDAwLFxuICAgICAgICAgICAgdGVtcGVyYXR1cmU6IDAuMSxcbiAgICAgICAgICAgIHRvcF9wOiAwLjksXG4gICAgICAgICAgICBzZWFyY2hfZG9tYWluX2ZpbHRlcjogW1wicGVycGxleGl0eS5haVwiXSxcbiAgICAgICAgICAgIHJldHVybl9pbWFnZXM6IGZhbHNlLFxuICAgICAgICAgICAgcmV0dXJuX3JlbGF0ZWRfcXVlc3Rpb25zOiBmYWxzZSxcbiAgICAgICAgICAgIHNlYXJjaF9yZWNlbmN5X2ZpbHRlcjogXCJtb250aFwiLFxuICAgICAgICAgIH0pLFxuICAgICAgICB9LFxuICAgICAgKTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFBlcnBsZXhpdHkgQVBJIGVycm9yOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIGNvbnN0IGNvbnRlbnQgPSBkYXRhLmNob2ljZXM/LlswXT8ubWVzc2FnZT8uY29udGVudCB8fCBcIlwiO1xuXG4gICAgICAvLyBQYXJzZSB0aGUgcmVzcG9uc2UgdG8gZXh0cmFjdCBudW1lcmljYWwgdmFsdWVzXG4gICAgICBjb25zdCBwYXJzZVJhdGVGcm9tVGV4dCA9IChcbiAgICAgICAgdGV4dDogc3RyaW5nLFxuICAgICAgICBwYXR0ZXJuczogc3RyaW5nW10sXG4gICAgICApOiBudW1iZXIgfCBudWxsID0+IHtcbiAgICAgICAgZm9yIChjb25zdCBwYXR0ZXJuIG9mIHBhdHRlcm5zKSB7XG4gICAgICAgICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKHBhdHRlcm4sIFwiaVwiKTtcbiAgICAgICAgICBjb25zdCBtYXRjaCA9IHRleHQubWF0Y2gocmVnZXgpO1xuICAgICAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBwYXJzZUZsb2F0KG1hdGNoWzFdKTtcbiAgICAgICAgICAgIGlmICghaXNOYU4odmFsdWUpKSByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfTtcblxuICAgICAgLy8gRXh0cmFjdCBzdHJhaWdodCBsYWJvciByYXRlXG4gICAgICBjb25zdCBzdHJhaWdodExhYm9yUmF0ZSA9IHBhcnNlUmF0ZUZyb21UZXh0KGNvbnRlbnQsIFtcbiAgICAgICAgXCJzdHJhaWdodC4qP2xhYm9yLio/cmF0ZS4qP1xcXFwkPyhcXFxcZCtcXFxcLj9cXFxcZCopXCIsXG4gICAgICAgIFwiYmFzZS4qP3dhZ2UuKj9cXFxcJD8oXFxcXGQrXFxcXC4/XFxcXGQqKVwiLFxuICAgICAgICBcImhvdXJseS4qP3dhZ2UuKj9cXFxcJD8oXFxcXGQrXFxcXC4/XFxcXGQqKVwiLFxuICAgICAgICBcIndhcmVob3VzZS4qP3dvcmtlci4qP1xcXFwkPyhcXFxcZCtcXFxcLj9cXFxcZCopXCIsXG4gICAgICBdKTtcblxuICAgICAgLy8gRXh0cmFjdCBmdWxseSBidXJkZW5lZCBsYWJvciByYXRlXG4gICAgICBjb25zdCBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZSA9IHBhcnNlUmF0ZUZyb21UZXh0KGNvbnRlbnQsIFtcbiAgICAgICAgXCJmdWxseS4qP2J1cmRlbmVkLio/XFxcXCQ/KFxcXFxkK1xcXFwuP1xcXFxkKilcIixcbiAgICAgICAgXCJ0b3RhbC4qP2xhYm9yLio/Y29zdC4qP1xcXFwkPyhcXFxcZCtcXFxcLj9cXFxcZCopXCIsXG4gICAgICAgIFwiYnVyZGVuZWQuKj9yYXRlLio/XFxcXCQ/KFxcXFxkK1xcXFwuP1xcXFxkKilcIixcbiAgICAgICAgXCJmdWxseS4qP2xvYWRlZC4qP1xcXFwkPyhcXFxcZCtcXFxcLj9cXFxcZCopXCIsXG4gICAgICBdKTtcblxuICAgICAgLy8gRXh0cmFjdCBsZWFzZSByYXRlXG4gICAgICBjb25zdCBsZWFzZVJhdGUgPSBwYXJzZVJhdGVGcm9tVGV4dChjb250ZW50LCBbXG4gICAgICAgIFwibGVhc2UuKj9yYXRlLio/XFxcXCQ/KFxcXFxkK1xcXFwuP1xcXFxkKilcIixcbiAgICAgICAgXCJpbmR1c3RyaWFsLio/bGVhc2UuKj9cXFxcJD8oXFxcXGQrXFxcXC4/XFxcXGQqKVwiLFxuICAgICAgICBcIndhcmVob3VzZS4qP3JlbnQuKj9cXFxcJD8oXFxcXGQrXFxcXC4/XFxcXGQqKVwiLFxuICAgICAgICBcInBlci4qP3NxdWFyZS4qP2Zvb3QuKj9cXFxcJD8oXFxcXGQrXFxcXC4/XFxcXGQqKVwiLFxuICAgICAgXSk7XG5cbiAgICAgIC8vIEV4dHJhY3QgM1BMIGNvc3RzXG4gICAgICBjb25zdCB0aHJlZVBMQ29zdCA9IHBhcnNlUmF0ZUZyb21UZXh0KGNvbnRlbnQsIFtcbiAgICAgICAgXCIzcGwuKj9jb3N0Lio/XFxcXCQ/KFxcXFxkK1xcXFwuP1xcXFxkKilcIixcbiAgICAgICAgXCJmdWxmaWxsbWVudC4qP2Nvc3QuKj9cXFxcJD8oXFxcXGQrXFxcXC4/XFxcXGQqKVwiLFxuICAgICAgICBcInBlci4qP3VuaXQuKj9cXFxcJD8oXFxcXGQrXFxcXC4/XFxcXGQqKVwiLFxuICAgICAgICBcInBlci4qP3NoaXBtZW50Lio/XFxcXCQ/KFxcXFxkK1xcXFwuP1xcXFxkKilcIixcbiAgICAgIF0pO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogc3RyYWlnaHRMYWJvclJhdGUgfHwgdW5kZWZpbmVkLFxuICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTpcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZSB8fFxuICAgICAgICAgIChzdHJhaWdodExhYm9yUmF0ZSA/IHN0cmFpZ2h0TGFib3JSYXRlICogMS40IDogdW5kZWZpbmVkKSxcbiAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogbGVhc2VSYXRlIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiB0aHJlZVBMQ29zdCB8fCB1bmRlZmluZWQsXG4gICAgICAgIGxhYm9yQ29zdFBlckhvdXI6XG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGUgfHxcbiAgICAgICAgICAoc3RyYWlnaHRMYWJvclJhdGUgPyBzdHJhaWdodExhYm9yUmF0ZSAqIDEuNCA6IHVuZGVmaW5lZCksXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggUGVycGxleGl0eSBkYXRhIGZvciAke2xvY2F0aW9ufTpgLCBlcnJvcik7XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuICB9O1xuXG4gIC8vIEFQSSBmdW5jdGlvbiB0byBmZXRjaCBtYXJrZXQgZGF0YSBmb3IgcHJvcG9zZWQgbG9jYXRpb25zXG4gIGNvbnN0IGZldGNoTWFya2V0RGF0YSA9IGFzeW5jIChsb2NhdGlvbnM6IHN0cmluZ1tdKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKFwiRmV0Y2hpbmcgcmVhbC10aW1lIG1hcmtldCBkYXRhIGZyb20gUGVycGxleGl0eSBBUEkuLi5cIik7XG5cbiAgICAgIC8vIENvbXByZWhlbnNpdmUgZmFsbGJhY2sgZGF0YSB3aXRoIGJvdGggc3RyYWlnaHQgYW5kIGZ1bGx5IGJ1cmRlbmVkIHJhdGVzXG4gICAgICBjb25zdCBtYXJrZXREYXRhQmFzZTogeyBba2V5OiBzdHJpbmddOiBQYXJ0aWFsPE1hcmtldERhdGE+IH0gPSB7XG4gICAgICAgIC8vIE1ham9yIE1ldHJvcG9saXRhbiBBcmVhc1xuICAgICAgICBcIkNoaWNhZ28sIElMXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTYuNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjMuMSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMi4yNSxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuOCxcbiAgICAgICAgfSxcbiAgICAgICAgXCJEYWxsYXMsIFRYXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTUuMjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIxLjM1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDguOSxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuMixcbiAgICAgICAgfSxcbiAgICAgICAgXCJMb3MgQW5nZWxlcywgQ0FcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxOC41LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyNS45LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDE4LjUsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiA0LjYsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQXRsYW50YSwgR0FcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNC44LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMC43MixcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA5LjgsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjQsXG4gICAgICAgIH0sXG4gICAgICAgIFwiUGhvZW5peCwgQVpcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNS41LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMS43LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDEwLjIsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiTWVtcGhpcywgVE5cIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNC4yNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMTkuOTUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogNy42LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMi45LFxuICAgICAgICB9LFxuICAgICAgICBcIkluZGlhbmFwb2xpcywgSU5cIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNC43NSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjAuNjUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOC4yLFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4xLFxuICAgICAgICB9LFxuICAgICAgICBcIkNvbHVtYnVzLCBPSFwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE1LjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMS4zNSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA5LjQsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjI1LFxuICAgICAgICB9LFxuICAgICAgICBcIkthbnNhcyBDaXR5LCBNT1wiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE0LjksXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIwLjg2LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDguNyxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuMCxcbiAgICAgICAgfSxcbiAgICAgICAgXCJOYXNodmlsbGUsIFROXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTUuMCxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjEuMCxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA5LjIsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjE1LFxuICAgICAgICB9LFxuICAgICAgICBcIkRlbnZlciwgQ09cIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNi44LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMy41MixcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMS44LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy43LFxuICAgICAgICB9LFxuICAgICAgICBcIlNlYXR0bGUsIFdBXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTkuNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjcuMyxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxNi40LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogNC4zLFxuICAgICAgICB9LFxuICAgICAgICBcIk5ldyBZb3JrLCBOWVwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDIxLjAsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDI5LjQsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogMjIuNSxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDUuMixcbiAgICAgICAgfSxcbiAgICAgICAgXCJNaWFtaSwgRkxcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNi4yLFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMi42OCxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMy43LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogNC4xLFxuICAgICAgICB9LFxuICAgICAgICBcIkhvdXN0b24sIFRYXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTUuNzUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIyLjA1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDkuNSxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuMyxcbiAgICAgICAgfSxcblxuICAgICAgICAvLyBBZGRpdGlvbmFsIENvbXByZWhlbnNpdmUgVVMgTWFya2V0c1xuICAgICAgICBcIkJpcm1pbmdoYW0sIEFMXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTMuNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMTguOSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA2LjgsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAyLjc1LFxuICAgICAgICB9LFxuICAgICAgICBcIkxpdHRsZSBSb2NrLCBBUlwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDEzLjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAxOC41NSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA2LjUsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAyLjY1LFxuICAgICAgICB9LFxuICAgICAgICBcIlR1Y3NvbiwgQVpcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNC43NSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjAuNjUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOC45LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4yLFxuICAgICAgICB9LFxuICAgICAgICBcIkZyZXNubywgQ0FcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNi4yNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjIuNzUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogMTEuMixcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuODUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiU2FjcmFtZW50bywgQ0FcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNy41LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyNC41LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDEzLjgsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiA0LjIsXG4gICAgICAgIH0sXG4gICAgICAgIFwiU2FuIEZyYW5jaXNjbywgQ0FcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAyMi4wLFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAzMC44LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDI4LjUsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiA1LjgsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQ29sb3JhZG8gU3ByaW5ncywgQ09cIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNS43NSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjIuMDUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOS44LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy40NSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJIYXJ0Zm9yZCwgQ1RcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxOC4yNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjUuNTUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogMTQuMixcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDQuMzUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiSmFja3NvbnZpbGxlLCBGTFwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE1LjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIxLjcsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOS44LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy40LFxuICAgICAgICB9LFxuICAgICAgICBcIlRhbXBhLCBGTFwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE1Ljc1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMi4wNSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMC41LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy42LFxuICAgICAgICB9LFxuICAgICAgICBcIk9ybGFuZG8sIEZMXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTUuMjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIxLjM1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDkuOSxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuNSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJTYXZhbm5haCwgR0FcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNC41LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMC4zLFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDguNCxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuMTUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQm9pc2UsIElEXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTQuOCxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjAuNzIsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOC42LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4yLFxuICAgICAgICB9LFxuICAgICAgICBcIlJvY2tmb3JkLCBJTFwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE1LjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMS4zNSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA3LjgsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAyLjk1LFxuICAgICAgICB9LFxuICAgICAgICBcIkZvcnQgV2F5bmUsIElOXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTQuMjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDE5Ljk1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDcuNSxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDIuODUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiRGVzIE1vaW5lcywgSUFcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNC41LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMC4zLFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDcuOSxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDIuOTUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiV2ljaGl0YSwgS1NcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxMy43NSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMTkuMjUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogNy4yLFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMi44LFxuICAgICAgICB9LFxuICAgICAgICBcIkxvdWlzdmlsbGUsIEtZXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTQuNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjAuMyxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA4LjEsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjA1LFxuICAgICAgICB9LFxuICAgICAgICBcIk5ldyBPcmxlYW5zLCBMQVwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE0LjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAxOS45NSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA4LjUsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjIsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQmF0b24gUm91Z2UsIExBXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTMuNzUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDE5LjI1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDcuOCxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDIuOTUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiUG9ydGxhbmQsIE1FXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTYuNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjMuMSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMS4yLFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy44NSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJCYWx0aW1vcmUsIE1EXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTcuMjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDI0LjE1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDEyLjgsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiA0LjA1LFxuICAgICAgICB9LFxuICAgICAgICBcIkJvc3RvbiwgTUFcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxOS43NSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjcuNjUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogMTkuNSxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDQuOTUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiRGV0cm9pdCwgTUlcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNi4yNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjIuNzUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOS4yLFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4zNSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJHcmFuZCBSYXBpZHMsIE1JXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTUuNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjEuNyxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA4LjQsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjEsXG4gICAgICAgIH0sXG4gICAgICAgIFwiTWlubmVhcG9saXMsIE1OXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTcuMCxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjMuOCxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMC44LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy42NSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJKYWNrc29uLCBNU1wiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDEyLjc1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAxNy44NSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA2LjIsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAyLjU1LFxuICAgICAgICB9LFxuICAgICAgICBcIlN0LiBMb3VpcywgTU9cIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNS4yNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjEuMzUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOC42LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4xNSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJCaWxsaW5ncywgTVRcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNC41LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMC4zLFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDcuOCxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuMDUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiT21haGEsIE5FXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTQuNzUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIwLjY1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDguMixcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuMCxcbiAgICAgICAgfSxcbiAgICAgICAgXCJMYXMgVmVnYXMsIE5WXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTYuNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjMuMSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMS41LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy43NSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJSZW5vLCBOVlwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE2LjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMi43NSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMC44LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy42LFxuICAgICAgICB9LFxuICAgICAgICBcIk1hbmNoZXN0ZXIsIE5IXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTcuMCxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjMuOCxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMS44LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy45LFxuICAgICAgICB9LFxuICAgICAgICBcIk5ld2FyaywgTkpcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxOC43NSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjYuMjUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogMTYuMixcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDQuNjUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQWxidXF1ZXJxdWUsIE5NXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTQuMjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDE5Ljk1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDguNCxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuMTUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQWxiYW55LCBOWVwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE3LjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDI0LjUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogMTIuMixcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuOTUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQnVmZmFsbywgTllcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNi41LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMy4xLFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDkuOCxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuNDUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQ2hhcmxvdHRlLCBOQ1wiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE1LjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMS4zNSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA5LjYsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjM1LFxuICAgICAgICB9LFxuICAgICAgICBcIlJhbGVpZ2gsIE5DXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTUuNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjEuNyxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA5LjgsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjQsXG4gICAgICAgIH0sXG4gICAgICAgIFwiRmFyZ28sIE5EXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTUuMCxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjEuMCxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA3LjYsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAyLjksXG4gICAgICAgIH0sXG4gICAgICAgIFwiQ2xldmVsYW5kLCBPSFwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE1Ljc1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMi4wNSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA4LjgsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjIsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQ2luY2lubmF0aSwgT0hcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNS4yNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjEuMzUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOC40LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4xLFxuICAgICAgICB9LFxuICAgICAgICBcIlRvbGVkbywgT0hcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNC43NSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjAuNjUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogNy44LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMi45NSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJPa2xhaG9tYSBDaXR5LCBPS1wiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDEzLjc1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAxOS4yNSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA3LjQsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAyLjg1LFxuICAgICAgICB9LFxuICAgICAgICBcIlR1bHNhLCBPS1wiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDEzLjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDE4LjksXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogNy4yLFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMi44LFxuICAgICAgICB9LFxuICAgICAgICBcIlBvcnRsYW5kLCBPUlwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE4LjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyNS41NSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMy42LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogNC4xNSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJQaGlsYWRlbHBoaWEsIFBBXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTcuNzUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDI0Ljg1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDEzLjIsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiA0LjEsXG4gICAgICAgIH0sXG4gICAgICAgIFwiUGl0dHNidXJnaCwgUEFcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNi41LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMy4xLFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDkuNixcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuNCxcbiAgICAgICAgfSxcbiAgICAgICAgXCJQcm92aWRlbmNlLCBSSVwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE3LjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyNC4xNSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMi40LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy45NSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJDaGFybGVzdG9uLCBTQ1wiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE0LjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAxOS45NSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA4LjYsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjIsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQ29sdW1iaWEsIFNDXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTMuNzUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDE5LjI1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDcuOCxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDIuOTUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiU2lvdXggRmFsbHMsIFNEXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTQuMjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDE5Ljk1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDcuNCxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDIuODUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiS25veHZpbGxlLCBUTlwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE0LjAsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDE5LjYsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogNy44LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMi45NSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJDaGF0dGFub29nYSwgVE5cIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxMy43NSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMTkuMjUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogNy42LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMi45LFxuICAgICAgICB9LFxuICAgICAgICBcIlNhbiBBbnRvbmlvLCBUWFwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE0LjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIwLjMsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOC4yLFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4wNSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJBdXN0aW4sIFRYXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTYuMCxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjIuNCxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiAxMS40LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy43NSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJGb3J0IFdvcnRoLCBUWFwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE1LjAsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIxLjAsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOC42LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4xNSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJFbCBQYXNvLCBUWFwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDEzLjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAxOC41NSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA3LjIsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAyLjgsXG4gICAgICAgIH0sXG4gICAgICAgIFwiU2FsdCBMYWtlIENpdHksIFVUXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTUuNzUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIyLjA1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDkuOCxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuNDUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiQnVybGluZ3RvbiwgVlRcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNy4wLFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMy44LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDExLjYsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjg1LFxuICAgICAgICB9LFxuICAgICAgICBcIlZpcmdpbmlhIEJlYWNoLCBWQVwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE1LjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIxLjcsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOS40LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4zNSxcbiAgICAgICAgfSxcbiAgICAgICAgXCJSaWNobW9uZCwgVkFcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNS4yNSxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjEuMzUsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogOS4yLFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMy4zLFxuICAgICAgICB9LFxuICAgICAgICBcIk5vcmZvbGssIFZBXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTUuMCxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMjEuMCxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA4LjgsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjI1LFxuICAgICAgICB9LFxuICAgICAgICBcIlNwb2thbmUsIFdBXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTYuNzUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIzLjQ1LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDEwLjIsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjU1LFxuICAgICAgICB9LFxuICAgICAgICBcIkNoYXJsZXN0b24sIFdWXCI6IHtcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogMTQuMCxcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTogMTkuNixcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA3LjQsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAyLjg1LFxuICAgICAgICB9LFxuICAgICAgICBcIk1pbHdhdWtlZSwgV0lcIjoge1xuICAgICAgICAgIHN0cmFpZ2h0TGFib3JSYXRlOiAxNi4wLFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMi40LFxuICAgICAgICAgIGxlYXNlUmF0ZVBlclNxRnQ6IDkuNCxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IDMuMzUsXG4gICAgICAgIH0sXG4gICAgICAgIFwiR3JlZW4gQmF5LCBXSVwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE1LjI1LFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiAyMS4zNSxcbiAgICAgICAgICBsZWFzZVJhdGVQZXJTcUZ0OiA4LjIsXG4gICAgICAgICAgdGhyZWVQTENvc3RQZXJVbml0OiAzLjA1LFxuICAgICAgICB9LFxuICAgICAgICBcIkNoZXllbm5lLCBXWVwiOiB7XG4gICAgICAgICAgc3RyYWlnaHRMYWJvclJhdGU6IDE0LjUsXG4gICAgICAgICAgZnVsbHlCdXJkZW5kZWRMYWJvclJhdGU6IDIwLjMsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogNy42LFxuICAgICAgICAgIHRocmVlUExDb3N0UGVyVW5pdDogMi45NSxcbiAgICAgICAgfSxcbiAgICAgIH07XG5cbiAgICAgIC8vIEZldGNoIGRhdGEgZnJvbSBQZXJwbGV4aXR5IEFQSSBmb3IgZWFjaCBsb2NhdGlvbiBpbiBwYXJhbGxlbFxuICAgICAgY29uc3QgcGVycGxleGl0eVByb21pc2VzID0gbG9jYXRpb25zLm1hcCgobG9jYXRpb24pID0+XG4gICAgICAgIGZldGNoTWFya2V0RGF0YUZyb21QZXJwbGV4aXR5KGxvY2F0aW9uKS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oYFBlcnBsZXhpdHkgQVBJIGZhaWxlZCBmb3IgJHtsb2NhdGlvbn06YCwgZXJyb3IpO1xuICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgfSksXG4gICAgICApO1xuXG4gICAgICAvLyBXYWl0IGZvciBhbGwgQVBJIGNhbGxzIHRvIGNvbXBsZXRlICh3aXRoIHRpbWVvdXQpXG4gICAgICBjb25zdCBwZXJwbGV4aXR5UmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsU2V0dGxlZChcbiAgICAgICAgcGVycGxleGl0eVByb21pc2VzLm1hcCgocHJvbWlzZSkgPT5cbiAgICAgICAgICBQcm9taXNlLnJhY2UoW1xuICAgICAgICAgICAgcHJvbWlzZSxcbiAgICAgICAgICAgIG5ldyBQcm9taXNlKFxuICAgICAgICAgICAgICAoXywgcmVqZWN0KSA9PlxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBFcnJvcihcIlRpbWVvdXRcIikpLCAxMDAwMCksIC8vIDEwIHNlY29uZCB0aW1lb3V0XG4gICAgICAgICAgICApLFxuICAgICAgICAgIF0pLFxuICAgICAgICApLFxuICAgICAgKTtcblxuICAgICAgY29uc3QgbWFya2V0RGF0YTogTWFya2V0RGF0YVtdID0gbG9jYXRpb25zLm1hcCgobG9jYXRpb24sIGluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IHN0YXRlID0gbG9jYXRpb24uc3BsaXQoXCIsIFwiKVsxXSB8fCBcIlwiO1xuICAgICAgICBjb25zdCBiYXNlRGF0YSA9IG1hcmtldERhdGFCYXNlW2xvY2F0aW9uXTtcblxuICAgICAgICAvLyBHZXQgUGVycGxleGl0eSBkYXRhIGlmIGF2YWlsYWJsZVxuICAgICAgICBjb25zdCBwZXJwbGV4aXR5UmVzdWx0ID0gcGVycGxleGl0eVJlc3VsdHNbaW5kZXhdO1xuICAgICAgICBjb25zdCBwZXJwbGV4aXR5RGF0YSA9XG4gICAgICAgICAgcGVycGxleGl0eVJlc3VsdC5zdGF0dXMgPT09IFwiZnVsZmlsbGVkXCIgPyBwZXJwbGV4aXR5UmVzdWx0LnZhbHVlIDoge307XG5cbiAgICAgICAgLy8gRGV0ZXJtaW5lIGZpbmFsIHZhbHVlcyAoUGVycGxleGl0eSBBUEkgZmlyc3QsIHRoZW4gZmFsbGJhY2ssIHRoZW4gcmVnaW9uYWwgZXN0aW1hdGVzKVxuICAgICAgICBjb25zdCB0eXBlZFBlcnBsZXhpdHlEYXRhID0gcGVycGxleGl0eURhdGEgYXMgYW55O1xuICAgICAgICBsZXQgc3RyYWlnaHRMYWJvclJhdGUgPVxuICAgICAgICAgIHR5cGVkUGVycGxleGl0eURhdGE/LnN0cmFpZ2h0TGFib3JSYXRlIHx8IGJhc2VEYXRhPy5zdHJhaWdodExhYm9yUmF0ZTtcbiAgICAgICAgbGV0IGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlID1cbiAgICAgICAgICB0eXBlZFBlcnBsZXhpdHlEYXRhPy5mdWxseUJ1cmRlbmRlZExhYm9yUmF0ZSB8fFxuICAgICAgICAgIGJhc2VEYXRhPy5mdWxseUJ1cmRlbmRlZExhYm9yUmF0ZTtcbiAgICAgICAgbGV0IGxlYXNlUmF0ZSA9XG4gICAgICAgICAgdHlwZWRQZXJwbGV4aXR5RGF0YT8ubGVhc2VSYXRlUGVyU3FGdCB8fCBiYXNlRGF0YT8ubGVhc2VSYXRlUGVyU3FGdDtcbiAgICAgICAgbGV0IHRocmVlUExDb3N0ID1cbiAgICAgICAgICB0eXBlZFBlcnBsZXhpdHlEYXRhPy50aHJlZVBMQ29zdFBlclVuaXQgfHwgYmFzZURhdGE/LnRocmVlUExDb3N0UGVyVW5pdDtcblxuICAgICAgICAvLyBJZiBubyBkYXRhIGF2YWlsYWJsZSwgZ2VuZXJhdGUgcmVhbGlzdGljIHJlZ2lvbmFsIGVzdGltYXRlc1xuICAgICAgICBpZiAoXG4gICAgICAgICAgIXN0cmFpZ2h0TGFib3JSYXRlIHx8XG4gICAgICAgICAgIWZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlIHx8XG4gICAgICAgICAgIWxlYXNlUmF0ZSB8fFxuICAgICAgICAgICF0aHJlZVBMQ29zdFxuICAgICAgICApIHtcbiAgICAgICAgICBjb25zdCBiYXNlU3RyYWlnaHRSYXRlID0gMTU7XG4gICAgICAgICAgY29uc3QgYmFzZUxlYXNlUmF0ZSA9IDg7XG4gICAgICAgICAgY29uc3QgYmFzZVRocmVlUExDb3N0ID0gMi41O1xuXG4gICAgICAgICAgLy8gQXBwbHkgcmVnaW9uYWwgYWRqdXN0bWVudHNcbiAgICAgICAgICBsZXQgcmVnaW9uYWxNdWx0aXBsaWVyID0gMS4wO1xuICAgICAgICAgIGlmIChbXCJDQVwiLCBcIldBXCIsIFwiT1JcIl0uaW5jbHVkZXMoc3RhdGUpKSB7XG4gICAgICAgICAgICByZWdpb25hbE11bHRpcGxpZXIgPSAxLjI1OyAvLyBXZXN0IENvYXN0IHByZW1pdW1cbiAgICAgICAgICB9IGVsc2UgaWYgKFtcIk5ZXCIsIFwiTkpcIiwgXCJDVFwiLCBcIk1BXCJdLmluY2x1ZGVzKHN0YXRlKSkge1xuICAgICAgICAgICAgcmVnaW9uYWxNdWx0aXBsaWVyID0gMS4zOyAvLyBOb3J0aGVhc3QgcHJlbWl1bVxuICAgICAgICAgIH0gZWxzZSBpZiAoW1wiQUxcIiwgXCJNU1wiLCBcIlNDXCIsIFwiQVJcIiwgXCJLWVwiXS5pbmNsdWRlcyhzdGF0ZSkpIHtcbiAgICAgICAgICAgIHJlZ2lvbmFsTXVsdGlwbGllciA9IDAuODU7IC8vIFNvdXRoZWFzdCBkaXNjb3VudFxuICAgICAgICAgIH0gZWxzZSBpZiAoW1wiT0hcIiwgXCJJTlwiLCBcIk1JXCIsIFwiV0lcIiwgXCJJQVwiXS5pbmNsdWRlcyhzdGF0ZSkpIHtcbiAgICAgICAgICAgIHJlZ2lvbmFsTXVsdGlwbGllciA9IDAuOTU7IC8vIE1pZHdlc3QgbW9kZXJhdGVcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZSA9XG4gICAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZSB8fFxuICAgICAgICAgICAgTWF0aC5yb3VuZChiYXNlU3RyYWlnaHRSYXRlICogcmVnaW9uYWxNdWx0aXBsaWVyICogMTAwKSAvIDEwMDtcbiAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZSA9XG4gICAgICAgICAgICBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZSB8fFxuICAgICAgICAgICAgTWF0aC5yb3VuZChzdHJhaWdodExhYm9yUmF0ZSAqIDEuNCAqIDEwMCkgLyAxMDA7XG4gICAgICAgICAgbGVhc2VSYXRlID1cbiAgICAgICAgICAgIGxlYXNlUmF0ZSB8fFxuICAgICAgICAgICAgTWF0aC5yb3VuZChiYXNlTGVhc2VSYXRlICogcmVnaW9uYWxNdWx0aXBsaWVyICogMS4yICogMTAwKSAvIDEwMDtcbiAgICAgICAgICB0aHJlZVBMQ29zdCA9XG4gICAgICAgICAgICB0aHJlZVBMQ29zdCB8fFxuICAgICAgICAgICAgTWF0aC5yb3VuZChiYXNlVGhyZWVQTENvc3QgKiByZWdpb25hbE11bHRpcGxpZXIgKiAxMDApIC8gMTAwO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBsb2NhdGlvbixcbiAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICBzdHJhaWdodExhYm9yUmF0ZTogc3RyYWlnaHRMYWJvclJhdGUhLFxuICAgICAgICAgIGZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlOiBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZSEsXG4gICAgICAgICAgbGVhc2VSYXRlUGVyU3FGdDogbGVhc2VSYXRlISxcbiAgICAgICAgICB0aHJlZVBMQ29zdFBlclVuaXQ6IHRocmVlUExDb3N0ISxcbiAgICAgICAgICBsYWJvckNvc3RQZXJIb3VyOiBmdWxseUJ1cmRlbmRlZExhYm9yUmF0ZSEsIC8vIEZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG4gICAgICAgICAgbGFzdFVwZGF0ZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuXG4gICAgICBzZXRNYXJrZXREYXRhKG1hcmtldERhdGEpO1xuXG4gICAgICBjb25zdCBwZXJwbGV4aXR5U3VjY2Vzc0NvdW50ID0gcGVycGxleGl0eVJlc3VsdHMuZmlsdGVyKFxuICAgICAgICAocikgPT4gci5zdGF0dXMgPT09IFwiZnVsZmlsbGVkXCIsXG4gICAgICApLmxlbmd0aDtcbiAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICBgTWFya2V0IGRhdGEgZmV0Y2hlZCBmb3IgJHtsb2NhdGlvbnMubGVuZ3RofSBsb2NhdGlvbnMuIFBlcnBsZXhpdHkgQVBJOiAke3BlcnBsZXhpdHlTdWNjZXNzQ291bnR9LyR7bG9jYXRpb25zLmxlbmd0aH0gc3VjY2Vzc2Z1bC5gLFxuICAgICAgKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBmZXRjaCBtYXJrZXQgZGF0YTpcIiwgZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICAvLyBGaW5hbmNpYWwgbWV0cmljcyBjYWxjdWxhdGlvblxuICBjb25zdCBjYWxjdWxhdGVGaW5hbmNpYWxNZXRyaWNzID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGN1cnJlbnRTdGF0ZUJhc2VsaW5lLFxuICAgICAgZnV0dXJlU3RhdGVQcm9qZWN0aW9ucyxcbiAgICAgIGRpc2NvdW50UmF0ZSxcbiAgICAgIGFuYWx5c2lzWWVhcnMsXG4gICAgfSA9IGZpbmFuY2lhbFBhcmFtcztcblxuICAgIC8vIENhbGN1bGF0ZSBhbm51YWwgY2FzaCBmbG93c1xuICAgIGNvbnN0IGluaXRpYWxJbnZlc3RtZW50ID1cbiAgICAgIGZ1dHVyZVN0YXRlUHJvamVjdGlvbnMudG90YWxJbnZlc3RtZW50IC1cbiAgICAgIGN1cnJlbnRTdGF0ZUJhc2VsaW5lLnRvdGFsSW52ZXN0bWVudDtcbiAgICBjb25zdCBhbm51YWxTYXZpbmdzID0gZnV0dXJlU3RhdGVQcm9qZWN0aW9ucy5hbm51YWxTYXZpbmdzO1xuXG4gICAgLy8gTlBWIGNhbGN1bGF0aW9uXG4gICAgbGV0IG5wdiA9IC1pbml0aWFsSW52ZXN0bWVudDtcbiAgICBmb3IgKGxldCB5ZWFyID0gMTsgeWVhciA8PSBhbmFseXNpc1llYXJzOyB5ZWFyKyspIHtcbiAgICAgIG5wdiArPSBhbm51YWxTYXZpbmdzIC8gTWF0aC5wb3coMSArIGRpc2NvdW50UmF0ZSwgeWVhcik7XG4gICAgfVxuXG4gICAgLy8gSVJSIGNhbGN1bGF0aW9uIChzaW1wbGlmaWVkIE5ld3Rvbi1SYXBoc29uIG1ldGhvZClcbiAgICBsZXQgaXJyID0gMC4xOyAvLyBTdGFydGluZyBndWVzc1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTAwOyBpKyspIHtcbiAgICAgIGxldCBmID0gLWluaXRpYWxJbnZlc3RtZW50O1xuICAgICAgbGV0IGRmID0gMDtcblxuICAgICAgZm9yIChsZXQgeWVhciA9IDE7IHllYXIgPD0gYW5hbHlzaXNZZWFyczsgeWVhcisrKSB7XG4gICAgICAgIGNvbnN0IGZhY3RvciA9IE1hdGgucG93KDEgKyBpcnIsIHllYXIpO1xuICAgICAgICBmICs9IGFubnVhbFNhdmluZ3MgLyBmYWN0b3I7XG4gICAgICAgIGRmIC09ICh5ZWFyICogYW5udWFsU2F2aW5ncykgLyAoZmFjdG9yICogKDEgKyBpcnIpKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgbmV3SXJyID0gaXJyIC0gZiAvIGRmO1xuICAgICAgaWYgKE1hdGguYWJzKG5ld0lyciAtIGlycikgPCAwLjAwMDEpIGJyZWFrO1xuICAgICAgaXJyID0gbmV3SXJyO1xuICAgIH1cblxuICAgIC8vIFJPSUMgY2FsY3VsYXRpb25cbiAgICBjb25zdCBhdmVyYWdlSW52ZXN0ZWRDYXBpdGFsID0gaW5pdGlhbEludmVzdG1lbnQgLyAyO1xuICAgIGNvbnN0IHJvaWMgPVxuICAgICAgYXZlcmFnZUludmVzdGVkQ2FwaXRhbCA+IDAgPyBhbm51YWxTYXZpbmdzIC8gYXZlcmFnZUludmVzdGVkQ2FwaXRhbCA6IDA7XG5cbiAgICAvLyBQYXliYWNrIHBlcmlvZFxuICAgIGNvbnN0IHBheWJhY2tQZXJpb2QgPVxuICAgICAgaW5pdGlhbEludmVzdG1lbnQgPiAwID8gaW5pdGlhbEludmVzdG1lbnQgLyBhbm51YWxTYXZpbmdzIDogMDtcblxuICAgIHJldHVybiB7XG4gICAgICByb2ljOiByb2ljICogMTAwLCAvLyBDb252ZXJ0IHRvIHBlcmNlbnRhZ2VcbiAgICAgIG5wdjogbnB2LFxuICAgICAgaXJyOiBpcnIgKiAxMDAsIC8vIENvbnZlcnQgdG8gcGVyY2VudGFnZVxuICAgICAgcGF5YmFja1BlcmlvZCxcbiAgICB9O1xuICB9O1xuXG4gIGNvbnN0IHZhbHVlOiBEYXRhQ29udGV4dFR5cGUgPSB7XG4gICAgcHJvY2Vzc2VkRGF0YSxcbiAgICBzZXRQcm9jZXNzZWREYXRhLFxuICAgIG1hcmtldERhdGEsXG4gICAgc2V0TWFya2V0RGF0YSxcbiAgICBmaW5hbmNpYWxQYXJhbXMsXG4gICAgc2V0RmluYW5jaWFsUGFyYW1zLFxuICAgIHRyYW5zcG9ydFJlc3VsdHMsXG4gICAgc2V0VHJhbnNwb3J0UmVzdWx0cyxcbiAgICB3YXJlaG91c2VSZXN1bHRzLFxuICAgIHNldFdhcmVob3VzZVJlc3VsdHMsXG4gICAgaW52ZW50b3J5UmVzdWx0cyxcbiAgICBzZXRJbnZlbnRvcnlSZXN1bHRzLFxuICAgIGxvY2tlZExvY2F0aW9ucyxcbiAgICBzZXRMb2NrZWRMb2NhdGlvbnMsXG4gICAgZ2V0VHJhbnNwb3J0YXRpb25EYXRhLFxuICAgIGdldFdhcmVob3VzZURhdGEsXG4gICAgZ2V0U0tVRGF0YSxcbiAgICBmZXRjaE1hcmtldERhdGEsXG4gICAgY2FsY3VsYXRlRmluYW5jaWFsTWV0cmljcyxcbiAgfTtcblxuICByZXR1cm4gPERhdGFDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt2YWx1ZX0+e2NoaWxkcmVufTwvRGF0YUNvbnRleHQuUHJvdmlkZXI+O1xufVxuXG4vLyBDdXN0b20gaG9vayB0byB1c2UgdGhlIGRhdGEgY29udGV4dFxuZXhwb3J0IGZ1bmN0aW9uIHVzZURhdGEoKSB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KERhdGFDb250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInVzZURhdGEgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIERhdGFQcm92aWRlclwiKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn1cblxuZXhwb3J0IHR5cGUgeyBQcm9jZXNzZWREYXRhLCBNYXJrZXREYXRhLCBGaW5hbmNpYWxQYXJhbWV0ZXJzIH07XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVN0YXRlIiwiRGF0YUNvbnRleHQiLCJ1bmRlZmluZWQiLCJEYXRhUHJvdmlkZXIiLCJjaGlsZHJlbiIsInByb2Nlc3NlZERhdGEiLCJzZXRQcm9jZXNzZWREYXRhIiwibWFya2V0RGF0YSIsInNldE1hcmtldERhdGEiLCJ0cmFuc3BvcnRSZXN1bHRzIiwic2V0VHJhbnNwb3J0UmVzdWx0cyIsIndhcmVob3VzZVJlc3VsdHMiLCJzZXRXYXJlaG91c2VSZXN1bHRzIiwiaW52ZW50b3J5UmVzdWx0cyIsInNldEludmVudG9yeVJlc3VsdHMiLCJsb2NrZWRMb2NhdGlvbnMiLCJzZXRMb2NrZWRMb2NhdGlvbnMiLCJmaW5hbmNpYWxQYXJhbXMiLCJzZXRGaW5hbmNpYWxQYXJhbXMiLCJkaXNjb3VudFJhdGUiLCJhbmFseXNpc1llYXJzIiwiY3VycmVudFN0YXRlQmFzZWxpbmUiLCJ0b3RhbENvc3QiLCJ0b3RhbEludmVzdG1lbnQiLCJmdXR1cmVTdGF0ZVByb2plY3Rpb25zIiwiYW5udWFsU2F2aW5ncyIsImdldFRyYW5zcG9ydGF0aW9uRGF0YSIsInRyYW5zcG9ydGF0aW9uX2Nvc3RzIiwiZ2V0V2FyZWhvdXNlRGF0YSIsIndhcmVob3VzZV9pbnB1dHMiLCJnZXRTS1VEYXRhIiwic2t1X2RhdGEiLCJmZXRjaE1hcmtldERhdGFGcm9tUGVycGxleGl0eSIsImxvY2F0aW9uIiwiZGF0YSIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19QRVJQTEVYSVRZX0FQSV9LRVkiLCJQRVJQTEVYSVRZX0FQSV9LRVkiLCJjb25zb2xlIiwid2FybiIsInF1ZXJ5IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJtb2RlbCIsIm1lc3NhZ2VzIiwicm9sZSIsImNvbnRlbnQiLCJtYXhfdG9rZW5zIiwidGVtcGVyYXR1cmUiLCJ0b3BfcCIsInNlYXJjaF9kb21haW5fZmlsdGVyIiwicmV0dXJuX2ltYWdlcyIsInJldHVybl9yZWxhdGVkX3F1ZXN0aW9ucyIsInNlYXJjaF9yZWNlbmN5X2ZpbHRlciIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJqc29uIiwiY2hvaWNlcyIsIm1lc3NhZ2UiLCJwYXJzZVJhdGVGcm9tVGV4dCIsInRleHQiLCJwYXR0ZXJucyIsInBhdHRlcm4iLCJyZWdleCIsIlJlZ0V4cCIsIm1hdGNoIiwidmFsdWUiLCJwYXJzZUZsb2F0IiwiaXNOYU4iLCJzdHJhaWdodExhYm9yUmF0ZSIsImZ1bGx5QnVyZGVuZGVkTGFib3JSYXRlIiwibGVhc2VSYXRlIiwidGhyZWVQTENvc3QiLCJsZWFzZVJhdGVQZXJTcUZ0IiwidGhyZWVQTENvc3RQZXJVbml0IiwibGFib3JDb3N0UGVySG91ciIsImVycm9yIiwiZmV0Y2hNYXJrZXREYXRhIiwibG9jYXRpb25zIiwibG9nIiwibWFya2V0RGF0YUJhc2UiLCJwZXJwbGV4aXR5UHJvbWlzZXMiLCJtYXAiLCJjYXRjaCIsInBlcnBsZXhpdHlSZXN1bHRzIiwiUHJvbWlzZSIsImFsbFNldHRsZWQiLCJwcm9taXNlIiwicmFjZSIsIl8iLCJyZWplY3QiLCJzZXRUaW1lb3V0IiwiaW5kZXgiLCJzdGF0ZSIsInNwbGl0IiwiYmFzZURhdGEiLCJwZXJwbGV4aXR5UmVzdWx0IiwicGVycGxleGl0eURhdGEiLCJ0eXBlZFBlcnBsZXhpdHlEYXRhIiwiYmFzZVN0cmFpZ2h0UmF0ZSIsImJhc2VMZWFzZVJhdGUiLCJiYXNlVGhyZWVQTENvc3QiLCJyZWdpb25hbE11bHRpcGxpZXIiLCJpbmNsdWRlcyIsIk1hdGgiLCJyb3VuZCIsImxhc3RVcGRhdGVkIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwicGVycGxleGl0eVN1Y2Nlc3NDb3VudCIsImZpbHRlciIsInIiLCJsZW5ndGgiLCJjYWxjdWxhdGVGaW5hbmNpYWxNZXRyaWNzIiwiaW5pdGlhbEludmVzdG1lbnQiLCJucHYiLCJ5ZWFyIiwicG93IiwiaXJyIiwiaSIsImYiLCJkZiIsImZhY3RvciIsIm5ld0lyciIsImFicyIsImF2ZXJhZ2VJbnZlc3RlZENhcGl0YWwiLCJyb2ljIiwicGF5YmFja1BlcmlvZCIsIlByb3ZpZGVyIiwidXNlRGF0YSIsImNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./context/DataContext.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/fetch-utils.ts":
/*!****************************!*\
  !*** ./lib/fetch-utils.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchError: function() { return /* binding */ FetchError; },\n/* harmony export */   checkConnectivity: function() { return /* binding */ checkConnectivity; },\n/* harmony export */   createHealthEndpoint: function() { return /* binding */ createHealthEndpoint; },\n/* harmony export */   robustFetch: function() { return /* binding */ robustFetch; },\n/* harmony export */   robustFetchJson: function() { return /* binding */ robustFetchJson; },\n/* harmony export */   robustPost: function() { return /* binding */ robustPost; }\n/* harmony export */ });\n// Robust fetch utility with retry logic and error handling\nconst DEFAULT_RETRY_CONFIG = {\n    maxRetries: 0,\n    baseDelay: 1000,\n    maxDelay: 5000,\n    exponentialBackoff: false\n};\nconst DEFAULT_TIMEOUT = 90000; // 90 seconds - increased for development environments\nclass FetchError extends Error {\n    constructor(message, status, statusText, isNetworkError = false, isTimeoutError = false){\n        super(message);\n        this.name = \"FetchError\";\n        this.status = status;\n        this.statusText = statusText;\n        this.isNetworkError = isNetworkError;\n        this.isTimeoutError = isTimeoutError;\n    }\n}\n// Sleep utility for retry delays\nconst sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\n// Calculate retry delay with exponential backoff\nconst calculateRetryDelay = (attempt, config)=>{\n    if (!config.exponentialBackoff) {\n        return config.baseDelay;\n    }\n    const delay = config.baseDelay * Math.pow(2, attempt - 1);\n    return Math.min(delay, config.maxDelay);\n};\n// Check if error is retryable\nconst isRetryableError = (error)=>{\n    try {\n        if (!error || typeof error !== \"object\") {\n            return false;\n        }\n        // Safe property access with fallbacks\n        const errorName = error && typeof error === \"object\" && \"name\" in error ? String(error.name || \"\") : \"\";\n        const errorMessage = error && typeof error === \"object\" && \"message\" in error ? String(error.message || \"\") : String(error || \"\");\n        // Never retry AbortErrors - they indicate cancellation\n        if (errorName === \"AbortError\" || errorMessage.includes(\"aborted\") || errorMessage.includes(\"signal is aborted\")) {\n            return false;\n        }\n        // Don't retry cancelled requests\n        if (errorMessage.includes(\"cancelled\")) {\n            return false;\n        }\n        // Retry network and timeout errors, but check safely\n        if (errorMessage.includes(\"fetch\") || errorMessage.includes(\"network\") || errorMessage.includes(\"timeout\") || errorMessage.includes(\"Failed to fetch\")) {\n            return true;\n        }\n        // If it's a FetchError, check properties safely\n        if (error instanceof FetchError) {\n            return error.isNetworkError || error.isTimeoutError || Boolean(error.status && error.status >= 500);\n        }\n        return false;\n    } catch (e) {\n        // If any error occurs during error checking, don't retry\n        // Avoid logging AbortErrors to prevent noise\n        if (e && typeof e === \"object\" && \"name\" in e && e.name !== \"AbortError\") {\n            console.debug(\"Error while checking if error is retryable:\", e);\n        }\n        return false;\n    }\n};\n// Enhanced fetch with timeout and abort signal\nconst fetchWithTimeout = async (url, options)=>{\n    const timeout = options.timeout || DEFAULT_TIMEOUT;\n    const controller = new AbortController();\n    // Detect production environment\n    const isProduction =  true && (window.location.hostname.includes(\".fly.dev\") || window.location.hostname.includes(\".vercel.app\") || window.location.hostname.includes(\".netlify.app\") || window.location.hostname !== \"localhost\");\n    // Handle external signal if provided\n    let externalAbortHandler = null;\n    if (options.signal) {\n        // Check if already aborted\n        if (options.signal.aborted) {\n            return new Response(null, {\n                status: 204,\n                statusText: \"Pre-cancelled\",\n                headers: {\n                    \"X-Cancelled\": \"true\"\n                }\n            });\n        }\n        // Listen for external abort\n        externalAbortHandler = ()=>{\n            try {\n                if (controller && !controller.signal.aborted) {\n                    controller.abort(\"External signal abort\");\n                }\n            } catch (error) {\n            // Completely ignore all abort errors\n            }\n        };\n        try {\n            options.signal.addEventListener(\"abort\", externalAbortHandler, {\n                once: true\n            });\n        } catch (error) {\n            // Ignore errors adding listener if signal is already aborted\n            console.debug(\"Signal listener error:\", error);\n        }\n    }\n    // Set up timeout with comprehensive error handling\n    const timeoutId = setTimeout(()=>{\n        try {\n            if (controller && !controller.signal.aborted) {\n                controller.abort(\"Request timeout\");\n            }\n        } catch (error) {\n        // Completely ignore all abort errors - they're expected\n        }\n    }, timeout);\n    try {\n        // In production, add additional fetch options for better compatibility\n        const fetchOptions = {\n            ...options,\n            signal: controller.signal,\n            ...isProduction && {\n                mode: \"cors\",\n                credentials: \"same-origin\",\n                cache: \"no-store\"\n            }\n        };\n        const response = await fetch(url, fetchOptions);\n        clearTimeout(timeoutId);\n        // Clean up external abort handler\n        if (externalAbortHandler && options.signal) {\n            try {\n                options.signal.removeEventListener(\"abort\", externalAbortHandler);\n            } catch (error) {\n            // Ignore cleanup errors\n            }\n        }\n        return response;\n    } catch (error) {\n        clearTimeout(timeoutId);\n        // Clean up external abort handler\n        if (externalAbortHandler && options.signal) {\n            try {\n                options.signal.removeEventListener(\"abort\", externalAbortHandler);\n            } catch (error) {\n            // Ignore cleanup errors\n            }\n        }\n        // Handle AbortError and timeout errors completely - NEVER let them propagate\n        let errorName = \"\";\n        let errorMessage = \"\";\n        if (error && typeof error === \"object\" && error !== null) {\n            errorName = \"name\" in error ? String(error.name || \"\") : \"\";\n            errorMessage = \"message\" in error && typeof error.message === \"string\" ? error.message : \"\";\n        } else if (typeof error === \"string\") {\n            // Handle string errors like \"Request timeout\"\n            errorMessage = error;\n        }\n        // Catch ALL possible abort-related and timeout errors\n        if (errorName === \"AbortError\" || errorMessage.includes(\"aborted\") || errorMessage.includes(\"signal is aborted\") || errorMessage.includes(\"cancelled\") || errorMessage.includes(\"abort\") || errorMessage.includes(\"timeout\") || errorMessage.includes(\"Request timeout\") || errorMessage.includes(\"The operation was aborted\") || errorMessage.includes(\"signal is aborted without reason\")) {\n            // Always return a 204 response for any abort-related or timeout error - NEVER throw\n            return new Response(null, {\n                status: 204,\n                statusText: \"Request Cancelled\",\n                headers: {\n                    \"X-Cancelled\": \"true\",\n                    \"X-Abort-Reason\": errorMessage || \"signal-aborted\"\n                }\n            });\n        }\n        // Handle production-specific \"Failed to fetch\" errors\n        if (isProduction && (errorName === \"TypeError\" || errorMessage.includes(\"Failed to fetch\"))) {\n            console.debug(\"Production fetch error handled gracefully:\", errorMessage);\n            return new Response(JSON.stringify({\n                error: \"Network unavailable\"\n            }), {\n                status: 503,\n                statusText: \"Service Temporarily Unavailable\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-Production-Error\": \"fetch-failed\"\n                }\n            });\n        }\n        if (error instanceof Error) {\n            // Handle specific \"Failed to fetch\" errors in cloud environments\n            if (error.name === \"TypeError\" && error.message === \"Failed to fetch\") {\n                // In cloud environments, this is often a temporary network issue\n                console.debug(\"Network error for \".concat(url, \", will retry if possible\"));\n                throw new FetchError(\"Network connection temporarily unavailable\", undefined, undefined, true, false);\n            }\n            throw new FetchError(\"Network error: \".concat(error.message), undefined, undefined, true, false);\n        }\n        throw error;\n    }\n};\n// Internal robust fetch function\nconst _robustFetch = async function(url) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    var _options_retries;\n    const retryConfig = {\n        ...DEFAULT_RETRY_CONFIG,\n        maxRetries: (_options_retries = options.retries) !== null && _options_retries !== void 0 ? _options_retries : DEFAULT_RETRY_CONFIG.maxRetries\n    };\n    let lastError;\n    for(let attempt = 1; attempt <= retryConfig.maxRetries + 1; attempt++){\n        try {\n            const response = await fetchWithTimeout(url, options);\n            // Check for HTTP errors\n            if (!response.ok) {\n                const error = new FetchError(\"HTTP \".concat(response.status, \": \").concat(response.statusText), response.status, response.statusText);\n                // Don't retry 4xx errors (client errors)\n                if (response.status >= 400 && response.status < 500) {\n                    throw error;\n                }\n                // Retry 5xx errors\n                if (attempt <= retryConfig.maxRetries) {\n                    lastError = error;\n                    const delay = calculateRetryDelay(attempt, retryConfig);\n                    console.warn(\"Request failed (attempt \".concat(attempt, \"), retrying in \").concat(delay, \"ms...\"), error);\n                    await sleep(delay);\n                    continue;\n                }\n                throw error;\n            }\n            return response;\n        } catch (error) {\n            lastError = error;\n            // Handle AbortError - never retry aborted requests\n            if (lastError) {\n                const errorName = lastError && typeof lastError === \"object\" && \"name\" in lastError ? String(lastError.name || \"\") : \"\";\n                const errorMessage = lastError && typeof lastError === \"object\" && \"message\" in lastError && typeof lastError.message === \"string\" ? lastError.message : String(lastError || \"\");\n                if (errorName === \"AbortError\" || errorMessage.includes(\"aborted\") || errorMessage.includes(\"signal is aborted\")) {\n                    const reason = errorMessage && errorMessage !== \"signal is aborted without reason\" ? errorMessage : \"Request was cancelled by user or system\";\n                    throw new FetchError(\"Request was cancelled: \".concat(reason), undefined, undefined, false, false);\n                }\n            }\n            // If this is the last attempt, throw the error\n            if (attempt > retryConfig.maxRetries) {\n                throw lastError;\n            }\n            // Check if the error is retryable\n            if (!isRetryableError(lastError)) {\n                throw lastError;\n            }\n            // Calculate delay and retry\n            const delay = calculateRetryDelay(attempt, retryConfig);\n            console.warn(\"Request failed (attempt \".concat(attempt, \"), retrying in \").concat(delay, \"ms...\"), lastError);\n            await sleep(delay);\n        }\n    }\n    throw lastError;\n};\n// Internal safe wrapper to prevent AbortError propagation\nconst safeWrapper = async (fn, context)=>{\n    try {\n        return await fn();\n    } catch (error) {\n        if (error instanceof Error) {\n            const errorName = String(error.name || \"\");\n            const errorMessage = String(error.message || \"\");\n            // Handle AbortErrors gracefully - don't throw in most contexts\n            if (errorName === \"AbortError\" || errorMessage.includes(\"aborted\") || errorMessage.includes(\"signal is aborted\")) {\n                // For connectivity checks, return a default value instead of throwing\n                if (context === \"checkConnectivity\") {\n                    console.debug(\"Connectivity check cancelled: \".concat(errorMessage));\n                    return false; // Type assertion needed for generic return\n                }\n                // For other contexts, handle gracefully without throwing\n                console.debug(\"Request cancelled in \".concat(context, \": \").concat(errorMessage));\n                // Create a FetchError with status 0 to indicate cancellation\n                const cancelError = new FetchError(\"Request was cancelled\", 0, \"Cancelled\", false, false);\n                // Don't throw the error, instead return a safe default or handle it\n                throw cancelError;\n            }\n        }\n        throw error;\n    }\n};\n// Main robust fetch function with final AbortError protection\nconst robustFetch = async function(url) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    return safeWrapper(()=>_robustFetch(url, options), \"robustFetch\");\n};\n// Convenience function for JSON requests\nconst robustFetchJson = async function(url) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const response = await robustFetch(url, {\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers\n        }\n    });\n    try {\n        return await response.json();\n    } catch (error) {\n        throw new FetchError(\"Failed to parse JSON response: \".concat(error instanceof Error ? error.message : \"Unknown error\"));\n    }\n};\n// Convenience function for POST requests\nconst robustPost = async function(url, data) {\n    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    return robustFetchJson(url, {\n        ...options,\n        method: \"POST\",\n        body: JSON.stringify(data)\n    });\n};\n// Check if the current environment has connectivity issues\nconst checkConnectivity = async (signal)=>{\n    // In production environments, skip connectivity checks to avoid fetch errors\n    if ( true && (window.location.hostname.includes(\".fly.dev\") || window.location.hostname.includes(\".vercel.app\") || window.location.hostname.includes(\".netlify.app\") || window.location.hostname !== \"localhost\")) {\n        // For deployed environments, assume connectivity is fine\n        // and rely on browser's navigator.onLine status\n        return typeof navigator !== \"undefined\" ? navigator.onLine : true;\n    }\n    try {\n        // Early abort check\n        if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n            return false;\n        }\n        // Try to fetch a simple endpoint with minimal retries for connectivity check\n        // Use absolute URL construction to avoid relative URL issues\n        const baseUrl =  true ? window.location.origin : 0;\n        const healthUrl = \"\".concat(baseUrl, \"/api/simple-health\");\n        await robustFetch(healthUrl, {\n            timeout: 3000,\n            retries: 0,\n            signal,\n            mode: \"cors\",\n            credentials: \"same-origin\" // Include credentials for same-origin requests\n        });\n        return true;\n    } catch (error) {\n        // Handle cancellation signals gracefully\n        if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n            return false;\n        }\n        // Handle ALL abort-related errors - never let them propagate\n        if (error && typeof error === \"object\") {\n            const errorObj = error;\n            const errorName = String(errorObj.name || \"\");\n            const errorMessage = String(errorObj.message || \"\");\n            if (errorName === \"AbortError\" || errorMessage.includes(\"aborted\") || errorMessage.includes(\"cancelled\") || errorMessage.includes(\"signal is aborted\") || errorMessage.includes(\"abort\") || errorMessage.includes(\"The operation was aborted\")) {\n                // Always return false for any abort-related error\n                return false;\n            }\n            // Handle \"Failed to fetch\" errors in production environments\n            if (errorMessage.includes(\"Failed to fetch\") || errorMessage.includes(\"TypeError: Failed to fetch\") || errorName === \"TypeError\") {\n                // In production, treat fetch failures as temporary connectivity issues\n                console.debug(\"Production fetch error detected, falling back to navigator.onLine\");\n                return typeof navigator !== \"undefined\" ? navigator.onLine : true;\n            }\n        }\n        // Don't log expected failures in cloud environments\n        const errorMessage = (error === null || error === void 0 ? void 0 : error.message) || \"\";\n        if (!errorMessage.includes(\"cancelled\") && !errorMessage.includes(\"aborted\") && !errorMessage.includes(\"Failed to fetch\") && !errorMessage.includes(\"Network connection\")) {\n            console.debug(\"Connectivity check failed (non-critical):\", errorMessage);\n        }\n        // Return true to avoid blocking the application in production\n        return true;\n    }\n};\n// Create a simple health check endpoint\nconst createHealthEndpoint = ()=>({\n        async GET () {\n            return new Response(JSON.stringify({\n                status: \"ok\",\n                timestamp: new Date().toISOString()\n            }), {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n    });\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/fetch-utils.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/runtime-error-handler.ts":
/*!**************************************!*\
  !*** ./lib/runtime-error-handler.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SafeAbortController: function() { return /* binding */ SafeAbortController; },\n/* harmony export */   enableMemoryLeakDetection: function() { return /* binding */ enableMemoryLeakDetection; },\n/* harmony export */   runtimeErrorHandler: function() { return /* binding */ runtimeErrorHandler; },\n/* harmony export */   safeAsync: function() { return /* binding */ safeAsync; },\n/* harmony export */   useSafeEffect: function() { return /* binding */ useSafeEffect; },\n/* harmony export */   withErrorBoundary: function() { return /* binding */ withErrorBoundary; }\n/* harmony export */ });\n// Comprehensive runtime error handling and cleanup system\nclass RuntimeErrorHandler {\n    static getInstance() {\n        if (!RuntimeErrorHandler.instance) {\n            RuntimeErrorHandler.instance = new RuntimeErrorHandler();\n        }\n        return RuntimeErrorHandler.instance;\n    }\n    // Register cleanup task\n    registerCleanup(id, cleanup) {\n        let priority = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;\n        this.cleanupTasks.set(id, {\n            id,\n            cleanup,\n            priority\n        });\n    }\n    // Unregister cleanup task\n    unregisterCleanup(id) {\n        this.cleanupTasks.delete(id);\n    }\n    // Execute cleanup for specific task\n    executeCleanup(id) {\n        const task = this.cleanupTasks.get(id);\n        if (task) {\n            try {\n                task.cleanup();\n            } catch (error) {\n                console.debug(\"Cleanup error for \".concat(id, \":\"), error);\n            } finally{\n                this.cleanupTasks.delete(id);\n            }\n        }\n    }\n    // Execute all cleanup tasks\n    executeAllCleanup() {\n        const tasks = Array.from(this.cleanupTasks.values()).sort((a, b)=>b.priority - a.priority);\n        for (const task of tasks){\n            try {\n                task.cleanup();\n            } catch (error) {\n                console.debug(\"Cleanup error for \".concat(task.id, \":\"), error);\n            }\n        }\n        this.cleanupTasks.clear();\n    }\n    // Add error listener\n    addErrorListener(listener) {\n        this.errorListeners.add(listener);\n    }\n    // Remove error listener\n    removeErrorListener(listener) {\n        this.errorListeners.delete(listener);\n    }\n    // Handle global errors\n    handleGlobalError(event) {\n        const error = event.error || new Error(event.message);\n        this.notifyErrorListeners(error);\n    }\n    // Handle unhandled promise rejections\n    handleUnhandledRejection(event) {\n        const error = event.reason instanceof Error ? event.reason : new Error(String(event.reason));\n        this.notifyErrorListeners(error);\n    }\n    // Notify all error listeners\n    notifyErrorListeners(error) {\n        this.errorListeners.forEach((listener)=>{\n            try {\n                listener(error);\n            } catch (listenerError) {\n                console.error(\"Error in error listener:\", listenerError);\n            }\n        });\n    }\n    constructor(){\n        this.cleanupTasks = new Map();\n        this.errorListeners = new Set();\n        // Global error handlers\n        if (true) {\n            window.addEventListener(\"error\", this.handleGlobalError.bind(this));\n            window.addEventListener(\"unhandledrejection\", this.handleUnhandledRejection.bind(this));\n        }\n    }\n}\n// Safe AbortController manager\nclass SafeAbortController {\n    get signal() {\n        return this.controller.signal;\n    }\n    get aborted() {\n        return this.isAborted || this.controller.signal.aborted;\n    }\n    safeAbort(reason) {\n        if (this.isAborted) return;\n        try {\n            this.isAborted = true;\n            if (!this.controller.signal.aborted) {\n                this.controller.abort(reason || \"Controller cleanup - safe operation\");\n            }\n        } catch (error) {\n            // Silently ignore abort errors - this is expected behavior\n            console.debug(\"Expected abort error during cleanup:\", error);\n        } finally{\n            // Always cleanup registration, even if abort failed\n            try {\n                RuntimeErrorHandler.getInstance().unregisterCleanup(this.cleanupId);\n            } catch (cleanupError) {\n                console.debug(\"Cleanup registration error:\", cleanupError);\n            }\n        }\n    }\n    cleanup() {\n        this.safeAbort(\"Controller cleanup\");\n    }\n    constructor(cleanupId){\n        this.isAborted = false;\n        this.controller = new AbortController();\n        this.cleanupId = cleanupId || \"abort-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n        // Register cleanup\n        RuntimeErrorHandler.getInstance().registerCleanup(this.cleanupId, ()=>this.safeAbort(), 10 // High priority for abort controllers\n        );\n    }\n}\n// Enhanced useEffect cleanup hook\nfunction useSafeEffect(effect, deps, componentId) {\n    const React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n    const effectId = componentId || \"effect-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9));\n    React.useEffect(()=>{\n        let cleanup;\n        let isCleanedUp = false;\n        const runEffect = async ()=>{\n            if (isCleanedUp) return;\n            try {\n                const result = effect();\n                if (typeof result === \"function\") {\n                    cleanup = result;\n                } else if (result && typeof result.then === \"function\") {\n                    // Handle async effect\n                    await result;\n                }\n            } catch (error) {\n                if (!isCleanedUp) {\n                    console.error(\"Effect error in \".concat(effectId, \":\"), error);\n                }\n            }\n        };\n        runEffect();\n        return ()=>{\n            isCleanedUp = true;\n            if (cleanup) {\n                try {\n                    const cleanupResult = cleanup();\n                    if (cleanupResult && typeof cleanupResult.then === \"function\") {\n                        cleanupResult.catch((error)=>{\n                            console.debug(\"Async cleanup error in \".concat(effectId, \":\"), error);\n                        });\n                    }\n                } catch (error) {\n                    console.debug(\"Cleanup error in \".concat(effectId, \":\"), error);\n                }\n            }\n            RuntimeErrorHandler.getInstance().executeCleanup(effectId);\n        };\n    }, deps);\n}\n// Error boundary with better async error handling\nfunction withErrorBoundary(Component, fallback) {\n    const React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n    const ErrorBoundaryWrapper = class extends React.Component {\n        componentWillUnmount() {\n            RuntimeErrorHandler.getInstance().removeErrorListener(this.handleAsyncError);\n        }\n        static getDerivedStateFromError(error) {\n            return {\n                hasError: true,\n                error\n            };\n        }\n        componentDidCatch(error, errorInfo) {\n            console.error(\"Error caught by boundary:\", error, errorInfo);\n        }\n        render() {\n            if (this.state.hasError && this.state.error) {\n                if (fallback) {\n                    const Fallback = fallback;\n                    return React.createElement(Fallback, {\n                        error: this.state.error,\n                        retry: this.retry\n                    });\n                }\n                return React.createElement(\"div\", {\n                    style: {\n                        padding: \"20px\",\n                        border: \"1px solid #f87171\",\n                        borderRadius: \"8px\",\n                        backgroundColor: \"#fef2f2\",\n                        margin: \"10px\",\n                        textAlign: \"center\"\n                    }\n                }, React.createElement(\"h3\", {\n                    style: {\n                        color: \"#dc2626\"\n                    }\n                }, \"Something went wrong\"), React.createElement(\"p\", {\n                    style: {\n                        color: \"#7f1d1d\"\n                    }\n                }, this.state.error.message), React.createElement(\"button\", {\n                    onClick: this.retry,\n                    style: {\n                        padding: \"8px 16px\",\n                        backgroundColor: \"#dc2626\",\n                        color: \"white\",\n                        border: \"none\",\n                        borderRadius: \"4px\",\n                        cursor: \"pointer\"\n                    }\n                }, \"Try Again\"));\n            }\n            return React.createElement(Component, this.props);\n        }\n        constructor(props){\n            super(props);\n            this.handleAsyncError = (error)=>{\n                var _error_stack;\n                // Only handle errors that seem related to this component\n                if (!this.state.hasError && ((_error_stack = error.stack) === null || _error_stack === void 0 ? void 0 : _error_stack.includes(Component.name))) {\n                    this.setState({\n                        hasError: true,\n                        error\n                    });\n                }\n            };\n            this.retry = ()=>{\n                this.setState({\n                    hasError: false,\n                    error: undefined\n                });\n            };\n            this.state = {\n                hasError: false\n            };\n            // Listen for async errors\n            RuntimeErrorHandler.getInstance().addErrorListener(this.handleAsyncError);\n        }\n    };\n    return ErrorBoundaryWrapper;\n}\n// Safe async operation wrapper\nasync function safeAsync(operation) {\n    let context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"unknown\", fallback = arguments.length > 2 ? arguments[2] : void 0;\n    try {\n        return await operation();\n    } catch (error) {\n        // Handle abort signals gracefully - these are expected during cleanup\n        if (error && typeof error === \"object\") {\n            const errorObj = error;\n            // Check for abort-related errors\n            if (errorObj.name === \"AbortError\" || errorObj.message && typeof errorObj.message === \"string\" && (errorObj.message.includes(\"aborted\") || errorObj.message.includes(\"cancelled\") || errorObj.message.includes(\"signal is aborted\"))) {\n                console.debug(\"Request cancelled in \".concat(context, \":\"), errorObj.message || \"Unknown abort\");\n                return fallback;\n            }\n            // Check for FetchError cancellation\n            if (errorObj.message === \"Request was cancelled\") {\n                console.debug(\"Request cancelled in \".concat(context));\n                return fallback;\n            }\n        }\n        // Log other errors normally\n        console.error(\"Safe async error in \".concat(context, \":\"), error);\n        return fallback;\n    }\n}\n// Memory leak detector (development only)\nfunction enableMemoryLeakDetection() {\n    if (false) {}\n    let intervalCount = 0;\n    let timeoutCount = 0;\n    let listenerCount = 0;\n    // Override setInterval\n    const originalSetInterval = window.setInterval;\n    window.setInterval = function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        intervalCount++;\n        console.debug(\"Active intervals: \".concat(intervalCount));\n        return originalSetInterval.apply(this, args);\n    };\n    // Override clearInterval\n    const originalClearInterval = window.clearInterval;\n    window.clearInterval = function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        intervalCount = Math.max(0, intervalCount - 1);\n        console.debug(\"Active intervals: \".concat(intervalCount));\n        return originalClearInterval.apply(this, args);\n    };\n// Similar for setTimeout/clearTimeout and addEventListener/removeEventListener\n// ... (implementation would continue for other potential leak sources)\n}\n// Export singleton instance\nconst runtimeErrorHandler = RuntimeErrorHandler.getInstance();\n// Cleanup on page unload\nif (true) {\n    window.addEventListener(\"beforeunload\", ()=>{\n        runtimeErrorHandler.executeAllCleanup();\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/runtime-error-handler.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/__barrel_optimize__?names=AlertTriangle,RefreshCw!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!****************************************************************************************************************!*\
  !*** __barrel_optimize__?names=AlertTriangle,RefreshCw!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlertTriangle: function() { return /* reexport safe */ _icons_alert_triangle_js__WEBPACK_IMPORTED_MODULE_0__["default"]; },
/* harmony export */   RefreshCw: function() { return /* reexport safe */ _icons_refresh_cw_js__WEBPACK_IMPORTED_MODULE_1__["default"]; }
/* harmony export */ });
/* harmony import */ var _icons_alert_triangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/alert-triangle.js */ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/alert-triangle.js");
/* harmony import */ var _icons_refresh_cw_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icons/refresh-cw.js */ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/refresh-cw.js");




;
    // Wrapped in an IIFE to avoid polluting the global scope
    ;
    (function () {
        var _a, _b;
        // Legacy CSS implementations will `eval` browser code in a Node.js context
        // to extract CSS. For backwards compatibility, we need to check we're in a
        // browser context before continuing.
        if (typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self) {
            // @ts-ignore __webpack_module__ is global
            var currentExports = module.exports;
            // @ts-ignore __webpack_module__ is global
            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
                // Save the previous exports signature on update so we can compare the boundary
                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)
                module.hot.dispose(function (data) {
                    data.prevSignature =
                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);
                });
                // Unconditionally accept an update to this module, we'll check if it's
                // still a Refresh Boundary later.
                // @ts-ignore importMeta is replaced in the loader
                module.hot.accept();
                // This field is set when the previous version of this module was a
                // Refresh Boundary, letting us know we need to check for invalidation or
                // enqueue an update.
                if (prevSignature !== null) {
                    // A boundary can become ineligible if its exports are incompatible
                    // with the previous exports.
                    //
                    // For example, if you add/remove/change exports, we'll want to
                    // re-execute the importing modules, and force those components to
                    // re-render. Similarly, if you convert a class component to a
                    // function, we want to invalidate the boundary.
                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {
                        module.hot.invalidate();
                    }
                    else {
                        self.$RefreshHelpers$.scheduleUpdate();
                    }
                }
            }
            else {
                // Since we just executed the code for the module, it's possible that the
                // new exports made it ineligible for being a boundary.
                // We only care about the case when we were _previously_ a boundary,
                // because we already accepted this update (accidental side effect).
                var isNoLongerABoundary = prevSignature !== null;
                if (isNoLongerABoundary) {
                    module.hot.invalidate();
                }
            }
        }
    })();


/***/ }),

/***/ "(app-pages-browser)/__barrel_optimize__?names=AlertTriangle,Wifi,WifiOff!=!./node_modules/lucide-react/dist/esm/lucide-react.js":
/*!*******************************************************************************************************************!*\
  !*** __barrel_optimize__?names=AlertTriangle,Wifi,WifiOff!=!./node_modules/lucide-react/dist/esm/lucide-react.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlertTriangle: function() { return /* reexport safe */ _icons_alert_triangle_js__WEBPACK_IMPORTED_MODULE_0__["default"]; },
/* harmony export */   Wifi: function() { return /* reexport safe */ _icons_wifi_js__WEBPACK_IMPORTED_MODULE_1__["default"]; },
/* harmony export */   WifiOff: function() { return /* reexport safe */ _icons_wifi_off_js__WEBPACK_IMPORTED_MODULE_2__["default"]; }
/* harmony export */ });
/* harmony import */ var _icons_alert_triangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./icons/alert-triangle.js */ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/alert-triangle.js");
/* harmony import */ var _icons_wifi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./icons/wifi.js */ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/wifi.js");
/* harmony import */ var _icons_wifi_off_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./icons/wifi-off.js */ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/wifi-off.js");





;
    // Wrapped in an IIFE to avoid polluting the global scope
    ;
    (function () {
        var _a, _b;
        // Legacy CSS implementations will `eval` browser code in a Node.js context
        // to extract CSS. For backwards compatibility, we need to check we're in a
        // browser context before continuing.
        if (typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self) {
            // @ts-ignore __webpack_module__ is global
            var currentExports = module.exports;
            // @ts-ignore __webpack_module__ is global
            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
                // Save the previous exports signature on update so we can compare the boundary
                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)
                module.hot.dispose(function (data) {
                    data.prevSignature =
                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);
                });
                // Unconditionally accept an update to this module, we'll check if it's
                // still a Refresh Boundary later.
                // @ts-ignore importMeta is replaced in the loader
                module.hot.accept();
                // This field is set when the previous version of this module was a
                // Refresh Boundary, letting us know we need to check for invalidation or
                // enqueue an update.
                if (prevSignature !== null) {
                    // A boundary can become ineligible if its exports are incompatible
                    // with the previous exports.
                    //
                    // For example, if you add/remove/change exports, we'll want to
                    // re-execute the importing modules, and force those components to
                    // re-render. Similarly, if you convert a class component to a
                    // function, we want to invalidate the boundary.
                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {
                        module.hot.invalidate();
                    }
                    else {
                        self.$RefreshHelpers$.scheduleUpdate();
                    }
                }
            }
            else {
                // Since we just executed the code for the module, it's possible that the
                // new exports made it ineligible for being a boundary.
                // We only care about the case when we were _previously_ a boundary,
                // because we already accepted this update (accidental side effect).
                var isNoLongerABoundary = prevSignature !== null;
                if (isNoLongerABoundary) {
                    module.hot.invalidate();
                }
            }
        }
    })();


/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/styled-jsx@5.1.1_react@18.3.1/node_modules/styled-jsx/dist/index/index.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/styled-jsx@5.1.1_react@18.3.1/node_modules/styled-jsx/dist/index/index.js ***!
  \******************************************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n__webpack_require__(/*! client-only */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/client-only/index.js\");\nvar React = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === \"object\" && \"default\" in e ? e : {\n        \"default\": e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefaultLegacy(React);\n_c = React__default;\n/*\nBased on Glamor's sheet\nhttps://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js\n*/ function _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nvar isProd = typeof process !== \"undefined\" && process.env && \"development\" === \"production\";\nvar isString = function(o) {\n    return Object.prototype.toString.call(o) === \"[object String]\";\n};\nvar StyleSheet = /*#__PURE__*/ function() {\n    function StyleSheet(param) {\n        var ref = param === void 0 ? {} : param, _name = ref.name, name = _name === void 0 ? \"stylesheet\" : _name, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;\n        invariant$1(isString(name), \"`name` must be a string\");\n        this._name = name;\n        this._deletedRulePlaceholder = \"#\" + name + \"-deleted-rule____{}\";\n        invariant$1(typeof optimizeForSpeed === \"boolean\", \"`optimizeForSpeed` must be a boolean\");\n        this._optimizeForSpeed = optimizeForSpeed;\n        this._serverSheet = undefined;\n        this._tags = [];\n        this._injected = false;\n        this._rulesCount = 0;\n        var node = typeof window !== \"undefined\" && document.querySelector('meta[property=\"csp-nonce\"]');\n        this._nonce = node ? node.getAttribute(\"content\") : null;\n    }\n    var _proto = StyleSheet.prototype;\n    _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {\n        invariant$1(typeof bool === \"boolean\", \"`setOptimizeForSpeed` accepts a boolean\");\n        invariant$1(this._rulesCount === 0, \"optimizeForSpeed cannot be when rules have already been inserted\");\n        this.flush();\n        this._optimizeForSpeed = bool;\n        this.inject();\n    };\n    _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {\n        return this._optimizeForSpeed;\n    };\n    _proto.inject = function inject() {\n        var _this = this;\n        invariant$1(!this._injected, \"sheet already injected\");\n        this._injected = true;\n        if (typeof window !== \"undefined\" && this._optimizeForSpeed) {\n            this._tags[0] = this.makeStyleTag(this._name);\n            this._optimizeForSpeed = \"insertRule\" in this.getSheet();\n            if (!this._optimizeForSpeed) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.\");\n                }\n                this.flush();\n                this._injected = true;\n            }\n            return;\n        }\n        this._serverSheet = {\n            cssRules: [],\n            insertRule: function(rule, index) {\n                if (typeof index === \"number\") {\n                    _this._serverSheet.cssRules[index] = {\n                        cssText: rule\n                    };\n                } else {\n                    _this._serverSheet.cssRules.push({\n                        cssText: rule\n                    });\n                }\n                return index;\n            },\n            deleteRule: function(index) {\n                _this._serverSheet.cssRules[index] = null;\n            }\n        };\n    };\n    _proto.getSheetForTag = function getSheetForTag(tag) {\n        if (tag.sheet) {\n            return tag.sheet;\n        }\n        // this weirdness brought to you by firefox\n        for(var i = 0; i < document.styleSheets.length; i++){\n            if (document.styleSheets[i].ownerNode === tag) {\n                return document.styleSheets[i];\n            }\n        }\n    };\n    _proto.getSheet = function getSheet() {\n        return this.getSheetForTag(this._tags[this._tags.length - 1]);\n    };\n    _proto.insertRule = function insertRule(rule, index) {\n        invariant$1(isString(rule), \"`insertRule` accepts only strings\");\n        if (typeof window === \"undefined\") {\n            if (typeof index !== \"number\") {\n                index = this._serverSheet.cssRules.length;\n            }\n            this._serverSheet.insertRule(rule, index);\n            return this._rulesCount++;\n        }\n        if (this._optimizeForSpeed) {\n            var sheet = this.getSheet();\n            if (typeof index !== \"number\") {\n                index = sheet.cssRules.length;\n            }\n            // this weirdness for perf, and chrome's weird bug\n            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                return -1;\n            }\n        } else {\n            var insertionPoint = this._tags[index];\n            this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));\n        }\n        return this._rulesCount++;\n    };\n    _proto.replaceRule = function replaceRule(index, rule) {\n        if (this._optimizeForSpeed || typeof window === \"undefined\") {\n            var sheet = typeof window !== \"undefined\" ? this.getSheet() : this._serverSheet;\n            if (!rule.trim()) {\n                rule = this._deletedRulePlaceholder;\n            }\n            if (!sheet.cssRules[index]) {\n                // @TBD Should we throw an error?\n                return index;\n            }\n            sheet.deleteRule(index);\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                // In order to preserve the indices we insert a deleteRulePlaceholder\n                sheet.insertRule(this._deletedRulePlaceholder, index);\n            }\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"old rule at index `\" + index + \"` not found\");\n            tag.textContent = rule;\n        }\n        return index;\n    };\n    _proto.deleteRule = function deleteRule(index) {\n        if (typeof window === \"undefined\") {\n            this._serverSheet.deleteRule(index);\n            return;\n        }\n        if (this._optimizeForSpeed) {\n            this.replaceRule(index, \"\");\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"rule at index `\" + index + \"` not found\");\n            tag.parentNode.removeChild(tag);\n            this._tags[index] = null;\n        }\n    };\n    _proto.flush = function flush() {\n        this._injected = false;\n        this._rulesCount = 0;\n        if (typeof window !== \"undefined\") {\n            this._tags.forEach(function(tag) {\n                return tag && tag.parentNode.removeChild(tag);\n            });\n            this._tags = [];\n        } else {\n            // simpler on server\n            this._serverSheet.cssRules = [];\n        }\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        if (typeof window === \"undefined\") {\n            return this._serverSheet.cssRules;\n        }\n        return this._tags.reduce(function(rules, tag) {\n            if (tag) {\n                rules = rules.concat(Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function(rule) {\n                    return rule.cssText === _this._deletedRulePlaceholder ? null : rule;\n                }));\n            } else {\n                rules.push(null);\n            }\n            return rules;\n        }, []);\n    };\n    _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {\n        if (cssString) {\n            invariant$1(isString(cssString), \"makeStyleTag accepts only strings as second parameter\");\n        }\n        var tag = document.createElement(\"style\");\n        if (this._nonce) tag.setAttribute(\"nonce\", this._nonce);\n        tag.type = \"text/css\";\n        tag.setAttribute(\"data-\" + name, \"\");\n        if (cssString) {\n            tag.appendChild(document.createTextNode(cssString));\n        }\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\n        if (relativeToTag) {\n            head.insertBefore(tag, relativeToTag);\n        } else {\n            head.appendChild(tag);\n        }\n        return tag;\n    };\n    _createClass(StyleSheet, [\n        {\n            key: \"length\",\n            get: function get() {\n                return this._rulesCount;\n            }\n        }\n    ]);\n    return StyleSheet;\n}();\nfunction invariant$1(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheet: \" + message + \".\");\n    }\n}\nfunction hash(str) {\n    var _$hash = 5381, i = str.length;\n    while(i){\n        _$hash = _$hash * 33 ^ str.charCodeAt(--i);\n    }\n    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;\n}\nvar stringHash = hash;\nvar sanitize = function(rule) {\n    return rule.replace(/\\/style/gi, \"\\\\/style\");\n};\nvar cache = {};\n/**\n * computeId\n *\n * Compute and memoize a jsx id from a basedId and optionally props.\n */ function computeId(baseId, props) {\n    if (!props) {\n        return \"jsx-\" + baseId;\n    }\n    var propsToString = String(props);\n    var key = baseId + propsToString;\n    if (!cache[key]) {\n        cache[key] = \"jsx-\" + stringHash(baseId + \"-\" + propsToString);\n    }\n    return cache[key];\n}\n/**\n * computeSelector\n *\n * Compute and memoize dynamic selectors.\n */ function computeSelector(id, css) {\n    var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;\n    // Sanitize SSR-ed CSS.\n    // Client side code doesn't need to be sanitized since we use\n    // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).\n    if (typeof window === \"undefined\") {\n        css = sanitize(css);\n    }\n    var idcss = id + css;\n    if (!cache[idcss]) {\n        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);\n    }\n    return cache[idcss];\n}\nfunction mapRulesToStyle(cssRules, options) {\n    if (options === void 0) options = {};\n    return cssRules.map(function(args) {\n        var id = args[0];\n        var css = args[1];\n        return /*#__PURE__*/ React__default[\"default\"].createElement(\"style\", {\n            id: \"__\" + id,\n            // Avoid warnings upon render with a key\n            key: \"__\" + id,\n            nonce: options.nonce ? options.nonce : undefined,\n            dangerouslySetInnerHTML: {\n                __html: css\n            }\n        });\n    });\n}\nvar StyleSheetRegistry = /*#__PURE__*/ function() {\n    function StyleSheetRegistry(param) {\n        var ref = param === void 0 ? {} : param, _styleSheet = ref.styleSheet, styleSheet = _styleSheet === void 0 ? null : _styleSheet, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;\n        this._sheet = styleSheet || new StyleSheet({\n            name: \"styled-jsx\",\n            optimizeForSpeed: optimizeForSpeed\n        });\n        this._sheet.inject();\n        if (styleSheet && typeof optimizeForSpeed === \"boolean\") {\n            this._sheet.setOptimizeForSpeed(optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    }\n    var _proto = StyleSheetRegistry.prototype;\n    _proto.add = function add(props) {\n        var _this = this;\n        if (undefined === this._optimizeForSpeed) {\n            this._optimizeForSpeed = Array.isArray(props.children);\n            this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        if (typeof window !== \"undefined\" && !this._fromServer) {\n            this._fromServer = this.selectFromServer();\n            this._instancesCounts = Object.keys(this._fromServer).reduce(function(acc, tagName) {\n                acc[tagName] = 0;\n                return acc;\n            }, {});\n        }\n        var ref = this.getIdAndRules(props), styleId = ref.styleId, rules = ref.rules;\n        // Deduping: just increase the instances count.\n        if (styleId in this._instancesCounts) {\n            this._instancesCounts[styleId] += 1;\n            return;\n        }\n        var indices = rules.map(function(rule) {\n            return _this._sheet.insertRule(rule);\n        }) // Filter out invalid rules\n        .filter(function(index) {\n            return index !== -1;\n        });\n        this._indices[styleId] = indices;\n        this._instancesCounts[styleId] = 1;\n    };\n    _proto.remove = function remove(props) {\n        var _this = this;\n        var styleId = this.getIdAndRules(props).styleId;\n        invariant(styleId in this._instancesCounts, \"styleId: `\" + styleId + \"` not found\");\n        this._instancesCounts[styleId] -= 1;\n        if (this._instancesCounts[styleId] < 1) {\n            var tagFromServer = this._fromServer && this._fromServer[styleId];\n            if (tagFromServer) {\n                tagFromServer.parentNode.removeChild(tagFromServer);\n                delete this._fromServer[styleId];\n            } else {\n                this._indices[styleId].forEach(function(index) {\n                    return _this._sheet.deleteRule(index);\n                });\n                delete this._indices[styleId];\n            }\n            delete this._instancesCounts[styleId];\n        }\n    };\n    _proto.update = function update(props, nextProps) {\n        this.add(nextProps);\n        this.remove(props);\n    };\n    _proto.flush = function flush() {\n        this._sheet.flush();\n        this._sheet.inject();\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function(styleId) {\n            return [\n                styleId,\n                _this._fromServer[styleId]\n            ];\n        }) : [];\n        var cssRules = this._sheet.cssRules();\n        return fromServer.concat(Object.keys(this._indices).map(function(styleId) {\n            return [\n                styleId,\n                _this._indices[styleId].map(function(index) {\n                    return cssRules[index].cssText;\n                }).join(_this._optimizeForSpeed ? \"\" : \"\\n\")\n            ];\n        }) // filter out empty rules\n        .filter(function(rule) {\n            return Boolean(rule[1]);\n        }));\n    };\n    _proto.styles = function styles(options) {\n        return mapRulesToStyle(this.cssRules(), options);\n    };\n    _proto.getIdAndRules = function getIdAndRules(props) {\n        var css = props.children, dynamic = props.dynamic, id = props.id;\n        if (dynamic) {\n            var styleId = computeId(id, dynamic);\n            return {\n                styleId: styleId,\n                rules: Array.isArray(css) ? css.map(function(rule) {\n                    return computeSelector(styleId, rule);\n                }) : [\n                    computeSelector(styleId, css)\n                ]\n            };\n        }\n        return {\n            styleId: computeId(id),\n            rules: Array.isArray(css) ? css : [\n                css\n            ]\n        };\n    };\n    /**\n   * selectFromServer\n   *\n   * Collects style tags from the document with id __jsx-XXX\n   */ _proto.selectFromServer = function selectFromServer() {\n        var elements = Array.prototype.slice.call(document.querySelectorAll('[id^=\"__jsx-\"]'));\n        return elements.reduce(function(acc, element) {\n            var id = element.id.slice(2);\n            acc[id] = element;\n            return acc;\n        }, {});\n    };\n    return StyleSheetRegistry;\n}();\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheetRegistry: \" + message + \".\");\n    }\n}\nvar StyleSheetContext = /*#__PURE__*/ React.createContext(null);\nStyleSheetContext.displayName = \"StyleSheetContext\";\nfunction createStyleRegistry() {\n    return new StyleSheetRegistry();\n}\nfunction StyleRegistry(param) {\n    _s();\n    var configuredRegistry = param.registry, children = param.children;\n    var rootRegistry = React.useContext(StyleSheetContext);\n    var ref = React.useState(function() {\n        return rootRegistry || configuredRegistry || createStyleRegistry();\n    }), registry = ref[0];\n    return /*#__PURE__*/ React__default[\"default\"].createElement(StyleSheetContext.Provider, {\n        value: registry\n    }, children);\n}\n_s(StyleRegistry, \"vgRS4YV7PcSMQCYHzGaNuBIBcZQ=\");\n_c1 = StyleRegistry;\nfunction useStyleRegistry() {\n    _s1();\n    return React.useContext(StyleSheetContext);\n}\n_s1(useStyleRegistry, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.\n// https://github.com/reactwg/react-18/discussions/110\nvar useInsertionEffect = React__default[\"default\"].useInsertionEffect || React__default[\"default\"].useLayoutEffect;\nvar defaultRegistry = typeof window !== \"undefined\" ? createStyleRegistry() : undefined;\nfunction JSXStyle(props) {\n    _s2();\n    var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();\n    // If `registry` does not exist, we do nothing here.\n    if (!registry) {\n        return null;\n    }\n    if (typeof window === \"undefined\") {\n        registry.add(props);\n        return null;\n    }\n    useInsertionEffect(function() {\n        registry.add(props);\n        return function() {\n            registry.remove(props);\n        };\n    // props.children can be string[], will be striped since id is identical\n    }, [\n        props.id,\n        String(props.dynamic)\n    ]);\n    return null;\n}\n_s2(JSXStyle, \"48Sqj1BUqkshsPdz6NEWXDn8pF4=\", false, function() {\n    return [\n        useStyleRegistry,\n        useInsertionEffect\n    ];\n});\n_c2 = JSXStyle;\nJSXStyle.dynamic = function(info) {\n    return info.map(function(tagInfo) {\n        var baseId = tagInfo[0];\n        var props = tagInfo[1];\n        return computeId(baseId, props);\n    }).join(\" \");\n};\nexports.StyleRegistry = StyleRegistry;\nexports.createStyleRegistry = createStyleRegistry;\nexports.style = JSXStyle;\nexports.useStyleRegistry = useStyleRegistry;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"React__default\");\n$RefreshReg$(_c1, \"StyleRegistry\");\n$RefreshReg$(_c2, \"JSXStyle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/styled-jsx@5.1.1_react@18.3.1/node_modules/styled-jsx/dist/index/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/styled-jsx@5.1.1_react@18.3.1/node_modules/styled-jsx/style.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/styled-jsx@5.1.1_react@18.3.1/node_modules/styled-jsx/style.js ***!
  \*******************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = __webpack_require__(/*! ./dist/index */ \"(app-pages-browser)/./node_modules/.pnpm/styled-jsx@5.1.1_react@18.3.1/node_modules/styled-jsx/dist/index/index.js\").style;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9zdHlsZWQtanN4QDUuMS4xX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvc3R5bGVkLWpzeC9zdHlsZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLG9MQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvLnBucG0vc3R5bGVkLWpzeEA1LjEuMV9yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL3N0eWxlZC1qc3gvc3R5bGUuanM/MzYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9pbmRleCcpLnN0eWxlXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiLCJzdHlsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/styled-jsx@5.1.1_react@18.3.1/node_modules/styled-jsx/style.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \********************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \**********************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMzJfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsMFFBQXNFO0FBQ3hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE0LjIuMzJfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9kNWU5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FConnectionStatus.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FDevErrorBoundary.tsx%22%2C%22ids%22%3A%5B%22DevErrorBoundary%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FErrorBoundary.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FGlobalErrorHandler.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcomponents%2FSafeNavigation.tsx%22%2C%22ids%22%3A%5B%22SafeNavigation%22%5D%7D&modules=%7B%22request%22%3A%22%2Fapp%2Fcode%2Fcontext%2FDataContext.tsx%22%2C%22ids%22%3A%5B%22DataProvider%22%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);