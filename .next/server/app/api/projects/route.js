"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/projects/route";
exports.ids = ["app/api/projects/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=C%3A%5Cgit%5CNetWORX%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cgit%5CNetWORX&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=C%3A%5Cgit%5CNetWORX%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cgit%5CNetWORX&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_git_NetWORX_app_api_projects_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/projects/route.ts */ \"(rsc)/./app/api/projects/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/projects/route\",\n        pathname: \"/api/projects\",\n        filename: \"route\",\n        bundlePath: \"app/api/projects/route\"\n    },\n    resolvedPagePath: \"C:\\\\git\\\\NetWORX\\\\app\\\\api\\\\projects\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_git_NetWORX_app_api_projects_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/projects/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwcm9qZWN0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvamVjdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwcm9qZWN0cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDZ2l0JTVDTmV0V09SWCU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q2dpdCU1Q05ldFdPUlgmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ0Y7QUFDM0U7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXR3b3J4LWVzc2VudGlhbHMvP2VkNTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcZ2l0XFxcXE5ldFdPUlhcXFxcYXBwXFxcXGFwaVxcXFxwcm9qZWN0c1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvamVjdHMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9wcm9qZWN0c1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvcHJvamVjdHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxnaXRcXFxcTmV0V09SWFxcXFxhcHBcXFxcYXBpXFxcXHByb2plY3RzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9wcm9qZWN0cy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=C%3A%5Cgit%5CNetWORX%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cgit%5CNetWORX&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/projects/route.ts":
/*!***********************************!*\
  !*** ./app/api/projects/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./lib/database.ts\");\n\n\nasync function GET(request) {\n    try {\n        // Check if DATABASE_URL is configured\n        if (!process.env.DATABASE_URL) {\n            console.warn(\"DATABASE_URL not configured, returning empty projects array\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                data: []\n            });\n        }\n        const projects = await _lib_database__WEBPACK_IMPORTED_MODULE_1__.ProjectService.getProjects();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: projects || []\n        });\n    } catch (error) {\n        console.error(\"Error fetching projects:\", error);\n        // Return empty array instead of error to prevent UI crashes\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: [],\n            warning: \"Database connection failed, returning empty data\"\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { name, description, owner_id, project_duration_years, base_year, status } = body;\n        if (!name) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Name is required\"\n            }, {\n                status: 400\n            });\n        }\n        const newProject = await _lib_database__WEBPACK_IMPORTED_MODULE_1__.ProjectService.createProject({\n            name,\n            description,\n            owner_id: owner_id || \"current_user\",\n            project_duration_years: project_duration_years || 5,\n            base_year: base_year || new Date().getFullYear(),\n            status: status || \"active\"\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: newProject\n        });\n    } catch (error) {\n        console.error(\"Error creating project:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Failed to create project\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3Byb2plY3RzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0Q7QUFDUjtBQUV6QyxlQUFlRSxJQUFJQyxPQUFvQjtJQUM1QyxJQUFJO1FBQ0Ysc0NBQXNDO1FBQ3RDLElBQUksQ0FBQ0MsUUFBUUMsR0FBRyxDQUFDQyxZQUFZLEVBQUU7WUFDN0JDLFFBQVFDLElBQUksQ0FBQztZQUNiLE9BQU9SLHFEQUFZQSxDQUFDUyxJQUFJLENBQUM7Z0JBQ3ZCQyxTQUFTO2dCQUNUQyxNQUFNLEVBQUU7WUFDVjtRQUNGO1FBRUEsTUFBTUMsV0FBVyxNQUFNWCx5REFBY0EsQ0FBQ1ksV0FBVztRQUVqRCxPQUFPYixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RDLE1BQU1DLFlBQVksRUFBRTtRQUN0QjtJQUNGLEVBQUUsT0FBT0UsT0FBTztRQUNkUCxRQUFRTyxLQUFLLENBQUMsNEJBQTRCQTtRQUUxQyw0REFBNEQ7UUFDNUQsT0FBT2QscURBQVlBLENBQUNTLElBQUksQ0FBQztZQUN2QkMsU0FBUztZQUNUQyxNQUFNLEVBQUU7WUFDUkksU0FBUztRQUNYO0lBQ0Y7QUFDRjtBQUVPLGVBQWVDLEtBQUtiLE9BQW9CO0lBQzdDLElBQUk7UUFDRixNQUFNYyxPQUFPLE1BQU1kLFFBQVFNLElBQUk7UUFDL0IsTUFBTSxFQUNKUyxJQUFJLEVBQ0pDLFdBQVcsRUFDWEMsUUFBUSxFQUNSQyxzQkFBc0IsRUFDdEJDLFNBQVMsRUFDVEMsTUFBTSxFQUNQLEdBQUdOO1FBRUosSUFBSSxDQUFDQyxNQUFNO1lBQ1QsT0FBT2xCLHFEQUFZQSxDQUFDUyxJQUFJLENBQ3RCO2dCQUFFQyxTQUFTO2dCQUFPSSxPQUFPO1lBQW1CLEdBQzVDO2dCQUFFUyxRQUFRO1lBQUk7UUFFbEI7UUFFQSxNQUFNQyxhQUFhLE1BQU12Qix5REFBY0EsQ0FBQ3dCLGFBQWEsQ0FBQztZQUNwRFA7WUFDQUM7WUFDQUMsVUFBVUEsWUFBWTtZQUN0QkMsd0JBQXdCQSwwQkFBMEI7WUFDbERDLFdBQVdBLGFBQWEsSUFBSUksT0FBT0MsV0FBVztZQUM5Q0osUUFBUUEsVUFBVTtRQUNwQjtRQUVBLE9BQU92QixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RDLE1BQU1hO1FBQ1I7SUFDRixFQUFFLE9BQU9WLE9BQU87UUFDZFAsUUFBUU8sS0FBSyxDQUFDLDJCQUEyQkE7UUFDekMsT0FBT2QscURBQVlBLENBQUNTLElBQUksQ0FDdEI7WUFBRUMsU0FBUztZQUFPSSxPQUFPO1FBQTJCLEdBQ3BEO1lBQUVTLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV0d29yeC1lc3NlbnRpYWxzLy4vYXBwL2FwaS9wcm9qZWN0cy9yb3V0ZS50cz80NTQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBQcm9qZWN0U2VydmljZSB9IGZyb20gJ0AvbGliL2RhdGFiYXNlJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIENoZWNrIGlmIERBVEFCQVNFX1VSTCBpcyBjb25maWd1cmVkXG4gICAgaWYgKCFwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwpIHtcbiAgICAgIGNvbnNvbGUud2FybignREFUQUJBU0VfVVJMIG5vdCBjb25maWd1cmVkLCByZXR1cm5pbmcgZW1wdHkgcHJvamVjdHMgYXJyYXknKTtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGRhdGE6IFtdXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBwcm9qZWN0cyA9IGF3YWl0IFByb2plY3RTZXJ2aWNlLmdldFByb2plY3RzKCk7XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IHByb2plY3RzIHx8IFtdXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcHJvamVjdHM6JywgZXJyb3IpO1xuXG4gICAgLy8gUmV0dXJuIGVtcHR5IGFycmF5IGluc3RlYWQgb2YgZXJyb3IgdG8gcHJldmVudCBVSSBjcmFzaGVzXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiBbXSxcbiAgICAgIHdhcm5pbmc6ICdEYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZCwgcmV0dXJuaW5nIGVtcHR5IGRhdGEnXG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc3QgeyBcbiAgICAgIG5hbWUsIFxuICAgICAgZGVzY3JpcHRpb24sIFxuICAgICAgb3duZXJfaWQsXG4gICAgICBwcm9qZWN0X2R1cmF0aW9uX3llYXJzLFxuICAgICAgYmFzZV95ZWFyLFxuICAgICAgc3RhdHVzIFxuICAgIH0gPSBib2R5O1xuXG4gICAgaWYgKCFuYW1lKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnTmFtZSBpcyByZXF1aXJlZCcgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0IG5ld1Byb2plY3QgPSBhd2FpdCBQcm9qZWN0U2VydmljZS5jcmVhdGVQcm9qZWN0KHtcbiAgICAgIG5hbWUsXG4gICAgICBkZXNjcmlwdGlvbixcbiAgICAgIG93bmVyX2lkOiBvd25lcl9pZCB8fCBcImN1cnJlbnRfdXNlclwiLFxuICAgICAgcHJvamVjdF9kdXJhdGlvbl95ZWFyczogcHJvamVjdF9kdXJhdGlvbl95ZWFycyB8fCA1LFxuICAgICAgYmFzZV95ZWFyOiBiYXNlX3llYXIgfHwgbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpLFxuICAgICAgc3RhdHVzOiBzdGF0dXMgfHwgJ2FjdGl2ZSdcbiAgICB9KTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogbmV3UHJvamVjdFxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIHByb2plY3Q6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnRmFpbGVkIHRvIGNyZWF0ZSBwcm9qZWN0JyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIlByb2plY3RTZXJ2aWNlIiwiR0VUIiwicmVxdWVzdCIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJjb25zb2xlIiwid2FybiIsImpzb24iLCJzdWNjZXNzIiwiZGF0YSIsInByb2plY3RzIiwiZ2V0UHJvamVjdHMiLCJlcnJvciIsIndhcm5pbmciLCJQT1NUIiwiYm9keSIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsIm93bmVyX2lkIiwicHJvamVjdF9kdXJhdGlvbl95ZWFycyIsImJhc2VfeWVhciIsInN0YXR1cyIsIm5ld1Byb2plY3QiLCJjcmVhdGVQcm9qZWN0IiwiRGF0ZSIsImdldEZ1bGxZZWFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/projects/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuditLogService: () => (/* binding */ AuditLogService),\n/* harmony export */   DataFileService: () => (/* binding */ DataFileService),\n/* harmony export */   OptimizationResultService: () => (/* binding */ OptimizationResultService),\n/* harmony export */   ProjectService: () => (/* binding */ ProjectService),\n/* harmony export */   ScenarioIterationService: () => (/* binding */ ScenarioIterationService),\n/* harmony export */   ScenarioService: () => (/* binding */ ScenarioService),\n/* harmony export */   TransportConfigService: () => (/* binding */ TransportConfigService),\n/* harmony export */   WarehouseConfigService: () => (/* binding */ WarehouseConfigService),\n/* harmony export */   sql: () => (/* binding */ sql)\n/* harmony export */ });\n/* harmony import */ var _neondatabase_serverless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @neondatabase/serverless */ \"(rsc)/./node_modules/@neondatabase/serverless/index.mjs\");\n\nif (!process.env.DATABASE_URL) {\n    throw new Error(\"DATABASE_URL is not set\");\n}\nconst sql = (0,_neondatabase_serverless__WEBPACK_IMPORTED_MODULE_0__.neon)(process.env.DATABASE_URL);\n// Database operations for projects\nclass ProjectService {\n    static async createProject(data) {\n        const [project] = await sql`\n      INSERT INTO projects (name, description, owner_id, project_duration_years, base_year, status)\n      VALUES (${data.name}, ${data.description || null}, ${data.owner_id || null},\n              ${data.project_duration_years || 5}, ${data.base_year || new Date().getFullYear()},\n              ${data.status || \"active\"})\n      RETURNING *\n    `;\n        return project;\n    }\n    static async getProjects() {\n        return await sql`\n      SELECT * FROM projects\n      ORDER BY created_at DESC\n    `;\n    }\n    static async getProject(id) {\n        const [project] = await sql`\n      SELECT * FROM projects WHERE id = ${id}\n    `;\n        return project || null;\n    }\n    static async updateProject(id, data) {\n        const [project] = await sql`\n      UPDATE projects\n      SET name = COALESCE(${data.name}, name),\n          description = COALESCE(${data.description}, description),\n          status = COALESCE(${data.status}, status),\n          project_duration_years = COALESCE(${data.project_duration_years}, project_duration_years),\n          base_year = COALESCE(${data.base_year}, base_year),\n          updated_at = CURRENT_TIMESTAMP\n      WHERE id = ${id}\n      RETURNING *\n    `;\n        return project;\n    }\n    static async deleteProject(id) {\n        await sql`DELETE FROM projects WHERE id = ${id}`;\n    }\n}\n// Database operations for scenarios\nclass ScenarioService {\n    static async createScenario(data) {\n        // Extract project_id from metadata if present\n        const project_id = data.metadata?.project_id;\n        if (!project_id) {\n            throw new Error(\"project_id is required in metadata\");\n        }\n        const [scenario] = await sql`\n      INSERT INTO scenarios (project_id, name, description, scenario_type, created_by, metadata)\n      VALUES (${project_id}, ${data.name}, ${data.description || null}, ${data.scenario_type}, ${data.created_by || null}, ${JSON.stringify(data.metadata || {})})\n      RETURNING *\n    `;\n        return scenario;\n    }\n    static async getScenarios(type) {\n        if (type) {\n            return await sql`\n        SELECT * FROM scenarios \n        WHERE scenario_type = ${type}\n        ORDER BY created_at DESC\n      `;\n        }\n        return await sql`\n      SELECT * FROM scenarios \n      ORDER BY created_at DESC\n    `;\n    }\n    static async getScenario(id) {\n        const [scenario] = await sql`\n      SELECT * FROM scenarios WHERE id = ${id}\n    `;\n        return scenario || null;\n    }\n    static async updateScenario(id, data) {\n        const [scenario] = await sql`\n      UPDATE scenarios \n      SET name = COALESCE(${data.name}, name),\n          description = COALESCE(${data.description}, description),\n          status = COALESCE(${data.status}, status),\n          metadata = COALESCE(${JSON.stringify(data.metadata)}, metadata),\n          updated_at = CURRENT_TIMESTAMP\n      WHERE id = ${id}\n      RETURNING *\n    `;\n        return scenario;\n    }\n    static async deleteScenario(id) {\n        await sql`DELETE FROM scenarios WHERE id = ${id}`;\n    }\n}\n// Database operations for warehouse configurations\nclass WarehouseConfigService {\n    static async createWarehouseConfig(data) {\n        const [config] = await sql`\n      INSERT INTO warehouse_configurations (\n        scenario_id, warehouse_name, max_capacity, fixed_costs, variable_cost_per_unit,\n        location_latitude, location_longitude, warehouse_type, automation_level, configuration_data\n      )\n      VALUES (\n        ${data.scenario_id}, ${data.warehouse_name}, ${data.max_capacity}, ${data.fixed_costs},\n        ${data.variable_cost_per_unit}, ${data.location_latitude || null}, ${data.location_longitude || null},\n        ${data.warehouse_type}, ${data.automation_level}, ${JSON.stringify(data.configuration_data)}\n      )\n      RETURNING *\n    `;\n        return config;\n    }\n    static async getWarehouseConfigs(scenarioId) {\n        return await sql`\n      SELECT * FROM warehouse_configurations \n      WHERE scenario_id = ${scenarioId}\n      ORDER BY created_at\n    `;\n    }\n    static async updateWarehouseConfig(id, data) {\n        const [config] = await sql`\n      UPDATE warehouse_configurations \n      SET warehouse_name = COALESCE(${data.warehouse_name}, warehouse_name),\n          max_capacity = COALESCE(${data.max_capacity}, max_capacity),\n          fixed_costs = COALESCE(${data.fixed_costs}, fixed_costs),\n          variable_cost_per_unit = COALESCE(${data.variable_cost_per_unit}, variable_cost_per_unit),\n          location_latitude = COALESCE(${data.location_latitude}, location_latitude),\n          location_longitude = COALESCE(${data.location_longitude}, location_longitude),\n          warehouse_type = COALESCE(${data.warehouse_type}, warehouse_type),\n          automation_level = COALESCE(${data.automation_level}, automation_level),\n          configuration_data = COALESCE(${JSON.stringify(data.configuration_data)}, configuration_data)\n      WHERE id = ${id}\n      RETURNING *\n    `;\n        return config;\n    }\n    static async deleteWarehouseConfig(id) {\n        await sql`DELETE FROM warehouse_configurations WHERE id = ${id}`;\n    }\n}\n// Database operations for transport configurations\nclass TransportConfigService {\n    static async createTransportConfig(data) {\n        const [config] = await sql`\n      INSERT INTO transport_configurations (\n        scenario_id, route_name, origin, destination, distance, base_freight_cost,\n        fuel_cost_per_km, transit_time, vehicle_type, capacity, route_data\n      )\n      VALUES (\n        ${data.scenario_id}, ${data.route_name || null}, ${data.origin}, ${data.destination},\n        ${data.distance || null}, ${data.base_freight_cost || null}, ${data.fuel_cost_per_km || null},\n        ${data.transit_time || null}, ${data.vehicle_type}, ${data.capacity || null},\n        ${JSON.stringify(data.route_data)}\n      )\n      RETURNING *\n    `;\n        return config;\n    }\n    static async getTransportConfigs(scenarioId) {\n        return await sql`\n      SELECT * FROM transport_configurations \n      WHERE scenario_id = ${scenarioId}\n      ORDER BY created_at\n    `;\n    }\n    static async updateTransportConfig(id, data) {\n        const [config] = await sql`\n      UPDATE transport_configurations \n      SET route_name = COALESCE(${data.route_name}, route_name),\n          origin = COALESCE(${data.origin}, origin),\n          destination = COALESCE(${data.destination}, destination),\n          distance = COALESCE(${data.distance}, distance),\n          base_freight_cost = COALESCE(${data.base_freight_cost}, base_freight_cost),\n          fuel_cost_per_km = COALESCE(${data.fuel_cost_per_km}, fuel_cost_per_km),\n          transit_time = COALESCE(${data.transit_time}, transit_time),\n          vehicle_type = COALESCE(${data.vehicle_type}, vehicle_type),\n          capacity = COALESCE(${data.capacity}, capacity),\n          route_data = COALESCE(${JSON.stringify(data.route_data)}, route_data)\n      WHERE id = ${id}\n      RETURNING *\n    `;\n        return config;\n    }\n    static async deleteTransportConfig(id) {\n        await sql`DELETE FROM transport_configurations WHERE id = ${id}`;\n    }\n}\n// Database operations for optimization results\nclass OptimizationResultService {\n    static async createOptimizationResult(data) {\n        const [result] = await sql`\n      INSERT INTO optimization_results (\n        scenario_id, result_type, optimization_run_id, status, completed_at,\n        execution_time_seconds, total_cost, cost_savings, efficiency_score,\n        results_data, performance_metrics, recommendations\n      )\n      VALUES (\n        ${data.scenario_id}, ${data.result_type}, ${data.optimization_run_id}, ${data.status},\n        ${data.completed_at || null}, ${data.execution_time_seconds || null}, ${data.total_cost || null},\n        ${data.cost_savings || null}, ${data.efficiency_score || null}, ${JSON.stringify(data.results_data)},\n        ${JSON.stringify(data.performance_metrics)}, ${JSON.stringify(data.recommendations)}\n      )\n      RETURNING *\n    `;\n        return result;\n    }\n    static async getOptimizationResults(scenarioId) {\n        return await sql`\n      SELECT * FROM optimization_results \n      WHERE scenario_id = ${scenarioId}\n      ORDER BY started_at DESC\n    `;\n    }\n    static async updateOptimizationResult(id, data) {\n        const [result] = await sql`\n      UPDATE optimization_results\n      SET status = COALESCE(${data.status}, status),\n          completed_at = COALESCE(${data.completed_at}, completed_at),\n          execution_time_seconds = COALESCE(${data.execution_time_seconds}, execution_time_seconds),\n          total_cost = COALESCE(${data.total_cost}, total_cost),\n          cost_savings = COALESCE(${data.cost_savings}, cost_savings),\n          efficiency_score = COALESCE(${data.efficiency_score}, efficiency_score),\n          results_data = COALESCE(${JSON.stringify(data.results_data)}, results_data),\n          performance_metrics = COALESCE(${JSON.stringify(data.performance_metrics)}, performance_metrics),\n          recommendations = COALESCE(${JSON.stringify(data.recommendations)}, recommendations)\n      WHERE id = ${id}\n      RETURNING *\n    `;\n        return result;\n    }\n    static async updateOptimizationResultByRunId(optimizationRunId, data) {\n        const [result] = await sql`\n      UPDATE optimization_results\n      SET status = COALESCE(${data.status}, status),\n          completed_at = COALESCE(${data.completed_at}, completed_at),\n          execution_time_seconds = COALESCE(${data.execution_time_seconds}, execution_time_seconds),\n          total_cost = COALESCE(${data.total_cost}, total_cost),\n          cost_savings = COALESCE(${data.cost_savings}, cost_savings),\n          efficiency_score = COALESCE(${data.efficiency_score}, efficiency_score),\n          results_data = COALESCE(${JSON.stringify(data.results_data)}, results_data),\n          performance_metrics = COALESCE(${JSON.stringify(data.performance_metrics)}, performance_metrics),\n          recommendations = COALESCE(${JSON.stringify(data.recommendations)}, recommendations)\n      WHERE optimization_run_id = ${optimizationRunId}\n      RETURNING *\n    `;\n        return result;\n    }\n}\n// Database operations for data files\nclass DataFileService {\n    static async createDataFile(data) {\n        const [file] = await sql`\n      INSERT INTO data_files (\n        scenario_id, file_name, file_type, file_size, data_type, processing_status,\n        validation_result, processed_data, original_columns, mapped_columns\n      )\n      VALUES (\n        ${data.scenario_id}, ${data.file_name}, ${data.file_type}, ${data.file_size || null},\n        ${data.data_type}, ${data.processing_status}, ${JSON.stringify(data.validation_result)},\n        ${JSON.stringify(data.processed_data || null)}, ${data.original_columns || null},\n        ${JSON.stringify(data.mapped_columns)}\n      )\n      RETURNING *\n    `;\n        return file;\n    }\n    static async getDataFiles(scenarioId) {\n        return await sql`\n      SELECT * FROM data_files \n      WHERE scenario_id = ${scenarioId}\n      ORDER BY upload_date DESC\n    `;\n    }\n    static async updateDataFile(id, data) {\n        const [file] = await sql`\n      UPDATE data_files\n      SET processing_status = COALESCE(${data.processing_status}, processing_status),\n          validation_result = COALESCE(${JSON.stringify(data.validation_result)}, validation_result),\n          processed_data = COALESCE(${JSON.stringify(data.processed_data)}, processed_data)\n      WHERE id = ${id}\n      RETURNING *\n    `;\n        return file;\n    }\n    static async getDataFile(id) {\n        const [file] = await sql`\n      SELECT * FROM data_files WHERE id = ${id}\n    `;\n        return file || null;\n    }\n    static async deleteDataFile(id) {\n        await sql`DELETE FROM data_files WHERE id = ${id}`;\n    }\n}\n// Database operations for scenario iterations\nclass ScenarioIterationService {\n    static async createIteration(data) {\n        const [iteration] = await sql`\n      INSERT INTO scenario_iterations (\n        parent_scenario_id, iteration_name, iteration_number, changes_description,\n        configuration_changes, results_comparison\n      )\n      VALUES (\n        ${data.parent_scenario_id}, ${data.iteration_name}, ${data.iteration_number},\n        ${data.changes_description || null}, ${JSON.stringify(data.configuration_changes)},\n        ${JSON.stringify(data.results_comparison)}\n      )\n      RETURNING *\n    `;\n        return iteration;\n    }\n    static async getIterations(parentScenarioId) {\n        return await sql`\n      SELECT * FROM scenario_iterations \n      WHERE parent_scenario_id = ${parentScenarioId}\n      ORDER BY iteration_number\n    `;\n    }\n}\n// Audit logging\nclass AuditLogService {\n    static async logAction(data) {\n        await sql`\n      INSERT INTO audit_log (scenario_id, action, entity_type, entity_id, user_id, details, ip_address)\n      VALUES (\n        ${data.scenario_id || null}, ${data.action}, ${data.entity_type || null},\n        ${data.entity_id || null}, ${data.user_id || null}, ${JSON.stringify(data.details)},\n        ${data.ip_address || null}\n      )\n    `;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@neondatabase"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fprojects%2Froute&page=%2Fapi%2Fprojects%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprojects%2Froute.ts&appDir=C%3A%5Cgit%5CNetWORX%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cgit%5CNetWORX&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();